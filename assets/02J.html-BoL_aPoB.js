import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,t as k,b as s,w as o,n as m,g,d as a,e,r as l,o as h}from"./app-U_bew1in.js";const v={},b={id:"frontmatter-title-관련",tabindex:"-1"},q={class:"header-anchor",href:"#frontmatter-title-관련"},_={class:"table-of-contents"},f=n("hr",null,null,-1),y=n("hr",null,null,-1),w={href:"https://github.com/pahkey/sbb3/tree/2-10",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"pahkey/sbb3",-1),x=n("code",null,"2-10",-1),R=n("p",null,"이번 장에서는 질문 목록에 이어 질문 상세 기능을 추가해 보자.",-1),Q=n("hr",null,null,-1),S=n("h2",{id:"질문-상세-링크-추가하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#질문-상세-링크-추가하기"},[n("span",null,"질문 상세 링크 추가하기")])],-1),C=n("p",null,"먼저 질문 목록의 제목을 클릭했을때 상세화면이 호출되도록 제목에 링크를 추가하자. 질문 목록 템플릿을 다음과 같이 수정하자.",-1),U=n("code",null,"/sbb/src/main/resources/templates/",-1),L=n("code",null,"question_list.html",-1),N=e(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>제목<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>작성일시<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>question, index : \${questionList}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/detail/\${question.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.subject}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.createDate}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>제목을 <code>&lt;td&gt;</code> 엘리먼트의 텍스트로 출력하던 것에서 링크로 변경했다. 타임리프에서 링크의 주소는 <code>th:href</code> 속성을 사용한다. 타임리프에서 <code>th:href</code> 처럼 URL 주소를 나타낼때는 반드시 <code>@{</code> 문자와 <code>}</code> 문자 사이에 입력해야 한다. 그리고 URL 주소는 문자열 <code>/question/detail/</code>과 <code>\${question.id}</code> 값이 조합되어 <code>/question/detail/\${question.id}</code>로 만들어졌다. 이때 좌우에 <code>|</code> 문자없이 다음과 같이 사용하면 오류가 발생한다.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/detail/\${question.id}}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.subject}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>/question/detail/</code>과 같은 문자열과 <code>\${question.id}</code>와 같은 자바 객체의 값을 더할 때는 반드시 다음처럼 <code>|</code> 과 <code>|</code> 기호로 좌우를 감싸 주어야 한다.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/detail/\${question.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.subject}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>타임리프는 문자열을 연결(concatenation)할 때 <code>|</code> 문자를 사용한다.</p></blockquote><hr><h2 id="질문-상세-컨트롤러-만들기" tabindex="-1"><a class="header-anchor" href="#질문-상세-컨트롤러-만들기"><span>질문 상세 컨트롤러 만들기</span></a></h2><p>이제 질문 목록 페이지에 접속하여 링크를 클릭해 보자.</p><figure><img src="https://wikidocs.net/images/page/161302/C_2-10_1.png" alt="아마도 다음과 같은 오류가 발생할 것이다." tabindex="0" loading="lazy"><figcaption>아마도 다음과 같은 오류가 발생할 것이다.</figcaption></figure><p><code>http://localhost:8080/question/detail/2</code> URL 요청에 대한 매핑이 없기 때문에 404(Page not found) 오류가 발생한다. 오류를 해결하기 위해 질문 상세 페이지에 대한 URL 매핑을 <code>QuestionController</code>에 다음과 같이 추가하자.</p>`,11),J=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),D=n("code",null,"QuestionController.java",-1),M=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 생략 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/question/detail/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token string">&quot;question_detail&quot;</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>요청 URL <code>http://localhost:8080/question/detail/2</code>의 숫자 2처럼 변하는 id 값을 얻을 때에는 위와 같이 <code>@PathVariable</code> 애너테이션을 사용해야 한다. 이 때 <code>@GetMapping(value = &quot;/question/detail/{id}&quot;)</code> 에서 사용한 <code>id</code>와 <code>@PathVariable(&quot;id&quot;)</code>의 매개변수 이름이 동일해야 한다.</p>`,2),V=n("code",null,"question_detail",-1),F=n("code",null,"question_detail.html",-1),P=n("code",null,"/sbb/src/main/resources/templates/",-1),$=n("code",null,"question_detail.html",-1),E=e(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>제목<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>내용<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://wikidocs.net/images/page/161302/O_2-10_2.png" alt="그러면 이제 오류없이 다음과 같은 화면이 나타날 것이다." tabindex="0" loading="lazy"><figcaption>그러면 이제 오류없이 다음과 같은 화면이 나타날 것이다.</figcaption></figure><h2 id="서비스" tabindex="-1"><a class="header-anchor" href="#서비스"><span>서비스</span></a></h2><p>이제 화면에 출력한 &quot;제목&quot;, &quot;내용&quot; 문자열 대신 데이터의 실제 제목과 내용을 출력해 보자. <code>Question</code> 데이터를 조회하기 위해서 <code>QuestionService</code>를 다음과 같이 수정하자.</p>`,4),O=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),T=n("code",null,"QuestionService.java",-1),I=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span></span><span class="token class-name">DataNotFoundException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">Question</span> <span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line highlighted">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> question <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">if</span> <span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            <span class="token keyword">return</span> question<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">DataNotFoundException</span><span class="token punctuation">(</span><span class="token string">&quot;question not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>id 값으로 <code>Question</code> 데이터를 조회하는 <code>getQuestion</code> 메서드를 추가했다. 리포지터리로 얻은 <code>Question</code> 객체는 <code>Optional</code> 객체이기 때문에 위와 같이 isPresent 메서드로 해당 데이터가 존재하는지 검사하는 로직이 필요하다. 만약 id 값에 해당하는 <code>Question</code> 데이터가 없을 경우에는 <code>DataNotFoundException</code>을 발생시키도록 했다. <code>DataNotFoundException</code> 클래스는 아직 존재하지 않기 때문에 컴파일 오류가 발생할 것이다. <code>DataNotFoundException</code> 클래스를 다음과 같이 작성하자.</p>`,2),B=n("code",null,"/sbb/src/main/java/com/mysite/sbb/",-1),G=n("code",null,"DataNotFoundException.java",-1),z=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ResponseStatus</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@ResponseStatus</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">,</span> reason <span class="token operator">=</span> <span class="token string">&quot;entity not found&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataNotFoundException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">DataNotFoundException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>DataNotFoundException</code>은 <code>RuntimeException</code>을 상속하여 만들었다. 만약 <code>DataNotFoundException</code>이 발생하면 <code>@ResponseStatus</code> 애너테이션에 의해 404 오류(<code>HttpStatus.NOT_FOUND</code>)가 나타날 것이다.</p><p>그리고 <code>QuestionController</code>에서 <code>QuestionService</code>의 <code>getQuestion</code> 메서드를 호출하여 <code>Question</code> 객체를 템플릿에 전달할 수 있도록 다음과 같이 수정하자.</p>`,3),W=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),A=n("code",null,"QuestionController.java",-1),H=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/question/detail/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">Question</span> question <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;question&quot;</span><span class="token punctuation">,</span> question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;question_detail&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="템플릿" tabindex="-1"><a class="header-anchor" href="#템플릿"><span>템플릿</span></a></h2><p><code>QuestionController</code>의 <code>detail</code> 메서드에서 <code>Model</code> 객체에 &quot;question&quot; 이라는 이름으로 <code>Question</code> 객체를 저장했으므로 템플릿은 다음과 같이 수정할 수 있다.</p>`,3),K=n("code",null,"/sbb/src/main/resources/templates/",-1),Z=n("code",null,"question_detail.html",-1),X=e(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.subject}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.content}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="질문-상세-확인하기" tabindex="-1"><a class="header-anchor" href="#질문-상세-확인하기"><span>질문 상세 확인하기</span></a></h2><p>이제 다시 질문 상세 페이지를 요청해 보자.</p><figure><img src="https://wikidocs.net/images/page/161302/O_2-10_3.png" alt="다음과 같은 화면이 나타날 것이다." tabindex="0" loading="lazy"><figcaption>다음과 같은 화면이 나타날 것이다.</figcaption></figure><p>조회한 <code>Question</code> 데이터의 제목과 내용이 화면에 잘 출력된 것을 확인할 수 있다. 이번에는 다음처럼 33과 같은 존재하지 않는 id 값으로 페이지를 요청해 보자.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">http://localhost:8080/question/detail/33</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wikidocs.net/images/page/161302/C_2-10_4.png" alt="다음처럼 존재하지 않는 데이터를 조회하려고 할 경우에는 404 Not found 오류가 발생하는 것을 확인할 수 있다." tabindex="0" loading="lazy"><figcaption>다음처럼 존재하지 않는 데이터를 조회하려고 할 경우에는 404 Not found 오류가 발생하는 것을 확인할 수 있다.</figcaption></figure><hr><h2 id="url-프리픽스-prefix" tabindex="-1"><a class="header-anchor" href="#url-프리픽스-prefix"><span>URL 프리픽스(prefix)</span></a></h2><p>다음으로 넘어가기 전에 <code>QuestionController</code>의 URL 매핑을 잠시 살펴보자. 현재 <code>QuestionController</code>에는 다음 2개의 URL 매핑이 있다.</p><ul><li><code>@GetMapping(&quot;/question/list&quot;)</code></li><li><code>@GetMapping(value = &quot;/question/detail/{id}&quot;)</code></li></ul><blockquote><p>URL 매핑시 value 매개변수는 생략할수 있다.</p></blockquote><p>URL의 프리픽스가 모두 <code>/question</code>으로 시작한다는 것을 알수 있다. 이런 경우 클래스명 위에 <code>@RequestMapping(&quot;/question&quot;)</code> 애너테이션을 추가하고 메서드 단위에서는 <code>/question</code> 를 생략한 그 뒷 부분만을 적으면 된다.</p><p>다음과 같이 <code>QuestionController</code>를 수정해 보자.</p>`,15),Y=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),nn=n("code",null,"QuestionController.java",-1),sn=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/question&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token annotation punctuation">@Controller</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">QuestionService</span> questionService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 생략 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/detail/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 생략 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>list</code> 메서드의 URL 매핑은 <code>/list</code> 이지만 클래스에 <code>/question</code>이라는 URL 매핑이 있기 때문에 <code>/question</code> + <code>/list</code>가 되어 최종적인 URL 매핑은 <code>/question/list</code>가 된다. 위와 같이 수정하면 기존과 완전히 동일한 기준으로 URL 매핑이 이루어 진다. 다만, 앞으로 <code>QuestionController</code>에서 사용하는 URL 매핑은 항상 <code>/question</code> 으로 시작해야 하는 규칙이 생긴 것이다.</p><blockquote><p>컨트롤러의 클래스 단위의 URL 매핑은 필수사항이 아니다. 컨트롤러의 성격에 맞게 사용하면 된다.</p></blockquote><hr>`,4);function an(c,tn){const p=l("router-link"),i=l("VPCard"),t=l("FontIcon"),u=l("VidStack");return h(),r("div",null,[n("h1",b,[n("a",q,[n("span",null,k(c.$frontmatter.title)+" 관련",1)])]),n("nav",_,[n("ul",null,[n("li",null,[s(p,{to:"#질문-상세-링크-추가하기"},{default:o(()=>[a("질문 상세 링크 추가하기")]),_:1})]),n("li",null,[s(p,{to:"#질문-상세-컨트롤러-만들기"},{default:o(()=>[a("질문 상세 컨트롤러 만들기")]),_:1})]),n("li",null,[s(p,{to:"#서비스"},{default:o(()=>[a("서비스")]),_:1})]),n("li",null,[s(p,{to:"#템플릿"},{default:o(()=>[a("템플릿")]),_:1})]),n("li",null,[s(p,{to:"#질문-상세-확인하기"},{default:o(()=>[a("질문 상세 확인하기")]),_:1})]),n("li",null,[s(p,{to:"#url-프리픽스-prefix"},{default:o(()=>[a("URL 프리픽스(prefix)")]),_:1})])])]),f,s(i,m(g({title:"2-10. 질문 상세",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/161220",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),y,n("blockquote",null,[n("p",null,[n("a",w,[s(t,{icon:"iconfont icon-github"}),a(),j,a(" - "),s(t,{icon:"fas fa-folder-open"}),a(),x])])]),s(u,{src:"youtube/0hWSUDqWWXU"}),R,Q,S,C,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),U,s(t,{icon:"fa-brands fa-html5"}),L])]),N,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),J,s(t,{icon:"fa-brands fa-java"}),D])]),M,n("p",null,[a("위와 같이 수정하고 다시 URL을 호출하면 이번에는 404 대신 500 오류가 발생할 것이다. 왜냐하면 응답으로 리턴한 "),V,a(" 템플릿이 없기 때문이다. 다음과 같이 "),s(t,{icon:"fa-brands fa-html5"}),F,a(" 파일을 신규로 작성하자.")]),n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),P,s(t,{icon:"fa-brands fa-html5"}),$])]),E,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),O,s(t,{icon:"fa-brands fa-java"}),T])]),I,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),B,s(t,{icon:"fa-brands fa-java"}),G])]),z,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),W,s(t,{icon:"fa-brands fa-java"}),A])]),H,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),K,s(t,{icon:"fa-brands fa-html5"}),Z])]),X,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),Y,s(t,{icon:"fa-brands fa-java"}),nn])]),sn])}const on=d(v,[["render",an],["__file","02J.html.vue"]]),ln=JSON.parse('{"path":"/java/jump-to-spring-boot/02J.html","title":"02J. 질문 상세","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"02J. 질문 상세","description":"Jump to Spring Boot > 02J. 질문 상세","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 02J. 질문 상세"},{"property":"og:description","content":"02J. 질문 상세"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/02J.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/02J.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"02J. 질문 상세"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 02J. 질문 상세"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/161302/C_2-10_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02J. 질문 상세\\",\\"image\\":[\\"https://wikidocs.net/images/page/161302/C_2-10_1.png\\",\\"https://wikidocs.net/images/page/161302/O_2-10_2.png\\",\\"https://wikidocs.net/images/page/161302/O_2-10_3.png\\",\\"https://wikidocs.net/images/page/161302/C_2-10_4.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"질문 상세 링크 추가하기","slug":"질문-상세-링크-추가하기","link":"#질문-상세-링크-추가하기","children":[]},{"level":2,"title":"질문 상세 컨트롤러 만들기","slug":"질문-상세-컨트롤러-만들기","link":"#질문-상세-컨트롤러-만들기","children":[]},{"level":2,"title":"서비스","slug":"서비스","link":"#서비스","children":[]},{"level":2,"title":"템플릿","slug":"템플릿","link":"#템플릿","children":[]},{"level":2,"title":"질문 상세 확인하기","slug":"질문-상세-확인하기","link":"#질문-상세-확인하기","children":[]},{"level":2,"title":"URL 프리픽스(prefix)","slug":"url-프리픽스-prefix","link":"#url-프리픽스-prefix","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":2.23,"words":670},"filePathRelative":"java/jump-to-spring-boot/02J.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{on as comp,ln as data};
