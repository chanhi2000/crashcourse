import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as m,a as t,t as g,b as o,w as n,n as a,g as r,r as s,o as h,d as l}from"./app-U_bew1in.js";const d={},u={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},_={class:"table-of-contents"},y=t("hr",null,null,-1),v=t("h2",{id:"finding-the-nearest-pair-of-points",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#finding-the-nearest-pair-of-points"},[t("span",null,"Finding the nearest pair of points")])],-1),F=t("hr",null,null,-1),k=t("h2",{id:"delaunay-triangulation-and-voronoi-diagram",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#delaunay-triangulation-and-voronoi-diagram"},[t("span",null,"Delaunay triangulation and Voronoi diagram")])],-1),b=t("hr",null,null,-1),V=t("h2",{id:"vertical-decomposition",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#vertical-decomposition"},[t("span",null,"Vertical decomposition")])],-1),N=t("hr",null,null,-1),A=t("h2",{id:"half-plane-intersection-s-i-algorithm-in-o-n-log-n",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#half-plane-intersection-s-i-algorithm-in-o-n-log-n"},[t("span",null,"Half-plane intersection - S&I Algorithm in O(N log N)")])],-1),C=t("hr",null,null,-1);function P(c,x){const i=s("router-link"),e=s("VPCard");return h(),m("div",null,[t("h1",u,[t("a",f,[t("span",null,g(c.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),t("nav",_,[t("ul",null,[t("li",null,[o(i,{to:"#finding-the-nearest-pair-of-points"},{default:n(()=>[l("Finding the nearest pair of points")]),_:1})]),t("li",null,[o(i,{to:"#delaunay-triangulation-and-voronoi-diagram"},{default:n(()=>[l("Delaunay triangulation and Voronoi diagram")]),_:1})]),t("li",null,[o(i,{to:"#vertical-decomposition"},{default:n(()=>[l("Vertical decomposition")]),_:1})]),t("li",null,[o(i,{to:"#half-plane-intersection-s-i-algorithm-in-o-n-log-n"},{default:n(()=>[l("Half-plane intersection - S&I Algorithm in O(N log N)")]),_:1})])])]),y,v,o(e,a(r({title:"Algorithms for Competitive Programming > Finding the nearest pair of points",desc:"Finding the nearest pair of points",link:"https://cp-algorithms.com/geometry/nearest_points.html",logo:"https://cp-algorithms.com/favicon.ico",background:"rgba(119,119,170,0.2)"})),null,16),F,k,o(e,a(r({title:"Algorithms for Competitive Programming > Delaunay triangulation and Voronoi diagram",desc:"Delaunay triangulation and Voronoi diagram",link:"https://cp-algorithms.com/geometry/delaunay.html",logo:"https://cp-algorithms.com/favicon.ico",background:"rgba(119,119,170,0.2)"})),null,16),b,V,o(e,a(r({title:"Algorithms for Competitive Programming > Vertical decomposition",desc:"Vertical decomposition",link:"https://cp-algorithms.com/geometry/vertical_decomposition.html",logo:"https://cp-algorithms.com/favicon.ico",background:"rgba(119,119,170,0.2)"})),null,16),N,A,o(e,a(r({title:"Algorithms for Competitive Programming > Half-plane intersection - S&I Algorithm in O(N log N)",desc:"Half-plane intersection - S&I Algorithm in O(N log N)",link:"https://cp-algorithms.com/geometry/halfplane-intersection.html",logo:"https://cp-algorithms.com/favicon.ico",background:"rgba(119,119,170,0.2)"})),null,16),C])}const S=p(d,[["render",P],["__file","08F.html.vue"]]),T=JSON.parse('{"path":"/cpp/algorithms-for-competitive-programming/08-geometry/08F.html","title":"08F. Misc","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"08F. Misc","description":"Algorithms for Competitive Programming > 08F. Misc","category":["Cpp"],"tag":["crashcourse","cpp","c-plus-plus","algorithm"],"head":[[{"meta":null},{"property":"og:title","content":"Algorithms for Competitive Programming > 08F. Misc"},{"property":"og:description","content":"08F. Misc"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/cpp/algorithms-for-competitive-programming/08-geometry/08F.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/cpp/algorithms-for-competitive-programming/08-geometry/08F.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"08F. Misc"}],["meta",{"property":"og:description","content":"Algorithms for Competitive Programming > 08F. Misc"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"cpp"}],["meta",{"property":"article:tag","content":"c-plus-plus"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"08F. Misc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Finding the nearest pair of points","slug":"finding-the-nearest-pair-of-points","link":"#finding-the-nearest-pair-of-points","children":[]},{"level":2,"title":"Delaunay triangulation and Voronoi diagram","slug":"delaunay-triangulation-and-voronoi-diagram","link":"#delaunay-triangulation-and-voronoi-diagram","children":[]},{"level":2,"title":"Vertical decomposition","slug":"vertical-decomposition","link":"#vertical-decomposition","children":[]},{"level":2,"title":"Half-plane intersection - S&I Algorithm in O(N log N)","slug":"half-plane-intersection-s-i-algorithm-in-o-n-log-n","link":"#half-plane-intersection-s-i-algorithm-in-o-n-log-n","children":[]}],"git":{"createdTime":1710918212000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":4}]},"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"cpp/algorithms-for-competitive-programming/08-geometry/08F.md","localizedDate":"2024ÎÖÑ 3Ïõî 20Ïùº","excerpt":"\\n\\n<hr>\\n<h2>Finding the nearest pair of points</h2>\\n"}');export{S as comp,T as data};
