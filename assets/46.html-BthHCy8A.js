import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as e,t as u,b as t,w as r,n as i,g as n,e as c,r as s,o as w,d as l}from"./app-U_bew1in.js";const g={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},f={class:"table-of-contents"},b=e("hr",null,null,-1),k=e("h2",{id:"project-9-part-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#project-9-part-4"},[e("span",null,"Project 9, part 4")])],-1),v=c('<p>That‚Äôs another project finished, and at this point you‚Äôve had a taste of almost all of SwiftUI‚Äôs drawing APIs. Chances are you want to get back to building apps, but please take a moment to pause and review what you‚Äôve learned ‚Äì you might not <em>use</em> all of it for some time, but it‚Äôs important you at least <em>remember</em> what was covered so you can refer back to it later.</p><p>So, today you have another review to test what you remember, and also some challenges to get you coding yourself. As always these challenges don‚Äôt come with solutions by me, but that‚Äôs the point ‚Äì as American NFL player Troy Polamalu once said, ‚ÄúI‚Äôve always had the mind-set that no one can challenge me better than myself.‚Äù</p><p>You have free rein to solve them however you want and in whatever time you want, and you might sail through problem-free. On the other hand, perhaps in completing them you‚Äôll spot a few places where your knowledge was a bit shaky ‚Äì the only way you‚Äôll know is if you try.</p><p><strong>Today you should work through the wrap up chapter for project 9, complete its review, then work through all three of its challenges.</strong></p><h3 id="drawing-wrap-up" tabindex="-1"><a class="header-anchor" href="#drawing-wrap-up"><span>Drawing: Wrap up</span></a></h3><p>::: detatils Drawing: Wrap up</p>',6),_=c('<p>We covered a huge amount of ground in this project, and you‚Äôve learned about paths, shapes, strokes, transforms, drawing groups, animating values, and more. Not everyone will want to use all those features, and that‚Äôs OK ‚Äì hopefully you have a clear idea of which parts interested you the most, and have some good coding experience with them.</p><p>If you combine your new-found drawing abilities with all the animation functionality we covered back in project 6, I hope you‚Äôre starting to realize just how much power and flexibility SwiftUI gives us. Yes, you can of course create whole apps using <code>List</code>, <code>NavigationView</code>, and similar, but you can also build completely custom user interfaces that look fantastic and are just as fast.</p><h4 id="review-what-you-learned" tabindex="-1"><a class="header-anchor" href="#review-what-you-learned"><span>Review what you learned</span></a></h4><p>Anyone can sit through a tutorial, but it takes actual work to remember what was taught. It‚Äôs my job to make sure you take as much from these tutorials as possible, so I‚Äôve prepared a short review to help you check your learning.</p><p><a href="https://www.hackingwithswift.com/review/ios-swiftui/drawing" target="_blank" rel="noopener noreferrer">Click here to review what you learned in this project.</a></p><h4 id="challenge" tabindex="-1"><a class="header-anchor" href="#challenge"><span>Challenge</span></a></h4><p>One of the best ways to learn is to write your own code as often as possible, so here are three ways you should try extending this app to make sure you fully understand what‚Äôs going on.</p><ol><li>Create an <code>Arrow</code> shape ‚Äì having it point straight up is fine. This could be a rectangle/triangle-style arrow, or perhaps three lines, or maybe something else depending on what kind of arrow you want to draw.</li><li>Make the line thickness of your <code>Arrow</code> shape animatable.</li><li>Create a <code>ColorCyclingRectangle</code> shape that is the rectangular cousin of <code>ColorCyclingCircle</code>, allowing us to control the position of the gradient using one or more properties.</li></ol><p><strong>Tip</strong>: Gradient positions like <code>.top</code> and <code>.bottom</code> are actually instances of <code>UnitPoint</code>, and you can create your own <code>UnitPoint</code> instances with X/Y values ranging from 0 to 1.</p><p>:::</p><div class="hint-container info"><p class="hint-container-title">Drawing: Wrap up - Additional</p><p><a href="https://www.hackingwithswift.com/review/ios-swiftui/drawing" target="_blank" rel="noopener noreferrer">Review for Project 9: Drawing</a></p></div><hr>',12);function D(p,j){const a=s("router-link"),o=s("VPCard");return w(),d("div",null,[e("h1",m,[e("a",y,[e("span",null,u(p.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e("nav",f,[e("ul",null,[e("li",null,[t(a,{to:"#project-9-part-4"},{default:r(()=>[l("Project 9, part 4")]),_:1}),e("ul",null,[e("li",null,[t(a,{to:"#drawing-wrap-up"},{default:r(()=>[l("Drawing: Wrap up")]),_:1})])])])])]),b,k,t(o,i(n({title:"100 Days of SwiftUI - Day 46",desc:"Project 9, part 4",link:"https://www.hackingwithswift.com/100/swiftui/46",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,t(o,i(n({title:"100 Days of SwiftUI - Day 46 - Drawing: Wrap up",desc:"Drawing: Wrap up",link:"https://www.hackingwithswift.com/books/ios-swiftui/drawing-wrap-up",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),_])}const P=h(g,[["render",D],["__file","46.html.vue"]]),I=JSON.parse('{"path":"/swift/100-days-of-swiftui/46.html","title":"Day 46","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Day 46","description":"100 Days of SwiftUI > Day 46","category":["Swift"],"tag":["crashcourse","paul-hudson","swift","swiftui","hacking-with-swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"100 Days of SwiftUI > Day 46"},{"property":"og:description","content":"Day 46"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/100-days-of-swiftui/46.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/swift/100-days-of-swiftui/46.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"Day 46"}],["meta",{"property":"og:description","content":"100 Days of SwiftUI > Day 46"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"paul-hudson"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"hacking-with-swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day 46\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Project 9, part 4","slug":"project-9-part-4","link":"#project-9-part-4","children":[{"level":3,"title":"Drawing: Wrap up","slug":"drawing-wrap-up","link":"#drawing-wrap-up","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":2.24,"words":673},"filePathRelative":"swift/100-days-of-swiftui/46.md","localizedDate":"2023ÎÖÑ 12Ïõî 27Ïùº","excerpt":"\\n\\n<hr>\\n<h2>Project 9, part 4</h2>\\n"}');export{P as comp,I as data};
