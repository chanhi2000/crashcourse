import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as e,t as p,b as o,n as u,g as m,d as t,e as a,r as s,o as h}from"./app-U_bew1in.js";const k={},_={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},y=e("nav",{class:"table-of-contents"},[e("ul")],-1),f=e("hr",null,null,-1),v=e("p",null,[e("code",null,"USER"),t("는 명령을 실행할 사용자 계정을 설정합니다. "),e("code",null,"RUN"),t(", "),e("code",null,"CMD"),t(", "),e("code",null,"ENTRYPOINT"),t("에 적용됩니다.")],-1),b=e("code",null,"Dockerfile",-1),R=a(`<div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">USER</span> nobody</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>USER &lt;계정 사용자명&gt;</code> 형식입니다.</p><p><code>USER</code> 뒤에 오는 모든 <code>RUN</code>, <code>CMD</code>, <code>ENTRYPOINT</code>에 적용되며, 중간에 다른 사용자를 설정하여 사용자를 바꿀 수 있습니다.</p>`,3),E=e("code",null,"Dockerfile",-1),U=a(`<div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">USER</span> nobody</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> touch /tmp/hello.txt</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">USER</span> root</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> touch /hello.txt</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">ENTRYPOINT</span> /hello-entrypoint.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),S=e("code",null,"nobody",-1),T=e("code",null,"/tmp/",-1),D=e("code",null,"hello.txt",-1),L=e("code",null,"root",-1),N=e("code",null,"/hello.txt",-1),w=e("code",null,"/",-1),x=e("code",null,"/hello-entrypoint.sh",-1),P=e("hr",null,null,-1);function I(c,C){const l=s("VPCard"),r=s("SiteInfo"),n=s("FontIcon");return h(),d("div",null,[e("h1",_,[e("a",g,[e("span",null,p(c.$frontmatter.title)+" 관련",1)])]),o(l,u(m({title:"목차",desc:"언제나 최신 Docker",link:"/docker/always-up-to-date-docker/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),y,f,o(r,{name:"7장 - 12. USER",desc:"언제나 최신 Docker",url:"https://pyrasis.com/jHLsAlwaysUpToDateDocker/Unit07/12",logo:"https://pyrasis.com/assets/images/pyrasis.png",preview:"https://pyrasis.com/assets/images/profile1.png"}),v,e("blockquote",null,[e("p",null,[t("."),o(n,{icon:"fa-brands fa-docker"}),b])]),R,e("blockquote",null,[e("p",null,[t("."),o(n,{icon:"fa-brands fa-docker"}),E])]),U,e("p",null,[t("처음에는 "),S,t(" 계정으로 "),o(n,{icon:"fas fa-folder-open "}),T,o(n,{icon:"fas fa-file-lines"}),D,t(" 파일을 생성합니다. 그 다음부터는 "),L,t(" 계정으로 "),N,t(" 파일을 생성하고("),w,t("에는 root 계정만 파일을 생성할 수 있으므로), "),o(n,{icon:"iconfont icon-shell"}),x,t(" 파일을 실행합니다.")]),P])}const Z=i(k,[["render",I],["__file","07L.html.vue"]]),j=JSON.parse('{"path":"/docker/always-up-to-date-docker/07L.html","title":"07L. USER","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"07L. USER","description":"언제나 최신 Docker > 07L. USER","category":["DevOps","Docker"],"tag":["crashcourse","pyrasis.com","docker","devops"],"head":[[{"meta":null},{"property":"og:title","content":"언제나 최신 Docker > 07L. USER"},{"property":"og:description","content":"07L. USER"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/docker/always-up-to-date-docker/07L.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/docker/always-up-to-date-docker/07L.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"07L. USER"}],["meta",{"property":"og:description","content":"언제나 최신 Docker > 07L. USER"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"pyrasis.com"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:published_time","content":"2022-10-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"07L. USER\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"date":"2022-10-03T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"createdTime":1716977950000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":0.56,"words":167},"filePathRelative":"docker/always-up-to-date-docker/07L.md","localizedDate":"2022년 10월 3일","excerpt":"\\n"}');export{Z as comp,j as data};
