import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as e,t as u,b as o,n as g,g as m,w as n,d as t,e as s,r as a,o as _}from"./app-U_bew1in.js";const f={},b={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},k={class:"table-of-contents"},w=e("hr",null,null,-1),R=s('<hr><p>Following questions come up weekly in online Rust discussions:</p><ul><li>I just finished reading The Book, what should I do next ?</li><li>What projects would you recommend to a Rust beginner?</li><li>Looking for small projects with an elegant code base</li><li>Codes that is easy to read and learn</li></ul><p>The answers to these questions are always Practice: doing some exercises, and then reading some small and excellent Rust projects.</p><p>This is precisely the goal of this book, so, collecting relative resourses and representing in <em>Rust By Practice</em> seems not a bad idea.</p><hr><h2 id="_1-ripgrep" tabindex="-1"><a class="header-anchor" href="#_1-ripgrep"><span>1. Ripgrep</span></a></h2>',7),v={href:"https://github.com/BurntSushi/ripgrep",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"BurntSushi/ripgrep",-1),S=s('<hr><h2 id="_2-building-a-text-editor" tabindex="-1"><a class="header-anchor" href="#_2-building-a-text-editor"><span>2. Building a text editor</span></a></h2><p>Tutorial <a href="https://www.philippflenker.com/hecto" target="_blank" rel="noopener noreferrer">https://www.philippflenker.com/hecto</a> will lead you to build a text editor from scratch.</p><hr><h2 id="_3-ncspot" tabindex="-1"><a class="header-anchor" href="#_3-ncspot"><span>3. <code>Ncspot</code></span></a></h2>',5),C={href:"https://github.com/hrkfdn/ncspot",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,"hrkfdn/ncspot",-1),T=e("hr",null,null,-1),B=e("h2",{id:"_4-command-line-rust",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-command-line-rust"},[e("span",null,"4. Command Line Rust")])],-1),E={href:"https://github.com/kyclark/command-line-rust",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,"kyclark/command-line-rust",-1),I=e("code",null,"Command-Line Rust(O'Reily)",-1),L=e("code",null,"head",-1),N=e("code",null,"cat",-1),q=e("code",null,"ls",-1),O=s('<hr><h2 id="_5-pngme-book" tabindex="-1"><a class="header-anchor" href="#_5-pngme-book"><span>5. <code>pngme</code> book</span></a></h2><p><a href="https://picklenerd.github.io/pngme_book" target="_blank" rel="noopener noreferrer">This book</a> will guide you to make a command line program that lets you hide secret messages in PNG files. The primary goal here is to get you writing code. The secondary goal is to get you reading documentation.</p><hr><h2 id="_6-writing-an-os-in-rust" tabindex="-1"><a class="header-anchor" href="#_6-writing-an-os-in-rust"><span>6. Writing an OS in Rust</span></a></h2>',5),W=e("a",{href:"https://os.phil-opp.com",target:"_blank",rel:"noopener noreferrer"},"This blog series",-1),D={href:"https://github.com/phil-opp/blog_os",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"phil-opp/blog_os",-1),z=s('<hr><h2 id="_7-codecrafters-io-build-your-own-git-docker-sqlite-or-redis" tabindex="-1"><a class="header-anchor" href="#_7-codecrafters-io-build-your-own-git-docker-sqlite-or-redis"><span>7. CodeCrafters.io: Build your own Git, Docker, SQLite, or Redis</span></a></h2><p>On <a href="https://codecrafters.io/for/rust" target="_blank" rel="noopener noreferrer">CodeCrafters</a>, you can recreate your favorite developer tools from scratch. It&#39;s a hands-on, minimally-guided approach to master Rust, while appreciating the internals and documentation of popular technology that we use every day.</p><hr><h2 id="_8-mini-redis" tabindex="-1"><a class="header-anchor" href="#_8-mini-redis"><span>8. mini-redis</span></a></h2>',5),G={href:"https://github.com/tokio-rs/mini-redis",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"tokio-rs/mini-redis",-1),F=e("hr",null,null,-1),K=e("h2",{id:"_9-writing-interpreters-in-rust",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_9-writing-interpreters-in-rust"},[e("span",null,"9. Writing Interpreters in Rust")])],-1),Q={href:"https://github.com/rust-hosted-langs/book",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"rust-hosted-langs/book",-1),M=e("hr",null,null,-1);function J(l,$){const c=a("VPCard"),r=a("router-link"),d=a("SiteInfo"),i=a("FontIcon");return _(),p("div",null,[e("h1",b,[e("a",y,[e("span",null,u(l.$frontmatter.title)+" 관련",1)])]),o(c,g(m({title:"Rust By Practice",desc:"Rust By Practice",link:"/rust/rust-by-practice/README.md",logo:"https://practice.course.rs/favicon.svg",background:"rgba(22,25,35,0.2)"})),null,16),e("nav",k,[e("ul",null,[e("li",null,[o(r,{to:"#_1-ripgrep"},{default:n(()=>[t("1. Ripgrep")]),_:1})]),e("li",null,[o(r,{to:"#_2-building-a-text-editor"},{default:n(()=>[t("2. Building a text editor")]),_:1})]),e("li",null,[o(r,{to:"#_3-ncspot"},{default:n(()=>[t("3. Ncspot")]),_:1})]),e("li",null,[o(r,{to:"#_4-command-line-rust"},{default:n(()=>[t("4. Command Line Rust")]),_:1})]),e("li",null,[o(r,{to:"#_5-pngme-book"},{default:n(()=>[t("5. pngme book")]),_:1})]),e("li",null,[o(r,{to:"#_6-writing-an-os-in-rust"},{default:n(()=>[t("6. Writing an OS in Rust")]),_:1})]),e("li",null,[o(r,{to:"#_7-codecrafters-io-build-your-own-git-docker-sqlite-or-redis"},{default:n(()=>[t("7. CodeCrafters.io: Build your own Git, Docker, SQLite, or Redis")]),_:1})]),e("li",null,[o(r,{to:"#_8-mini-redis"},{default:n(()=>[t("8. mini-redis")]),_:1})]),e("li",null,[o(r,{to:"#_9-writing-interpreters-in-rust"},{default:n(()=>[t("9. Writing Interpreters in Rust")]),_:1})])])]),w,o(d,{name:"1. Small projects with Elegant code | Rust By Practice",desc:"1. Small projects with Elegant code",url:"https://practice.rs/elegant-code-base.html",logo:"https://practice.course.rs/favicon.svg",preview:"https://github.com/sunface/rust-by-practice/blob/master/en/assets/header.jpg?raw=true"}),R,e("p",null,[t("Answers for above questions usually came with "),e("a",v,[o(i,{icon:"iconfont icon-github"}),x]),t(", though I don't think it is a small project, but yes, go for it if you are not afraid to delve deep a bit.")]),S,e("p",null,[e("a",C,[o(i,{icon:"iconfont icon-github"}),j]),t(", a terminal Spotify client. Small, simple, well organized and async, it's good for learning.")]),T,B,e("p",null,[e("a",E,[t("This project "),o(i,{icon:"iconfont icon-github"}),t("("),P,t(")")]),t(" is for the book "),I,t(", it will show you how to write small CLIs (clones of "),L,t(", "),N,t(", "),q,t(").")]),O,e("p",null,[W,t(" creates a small operating system in the Rust programming language. Each post is a small tutorial and includes all needed code, so you can follow along if you like. The source code is also available in the corresponding "),e("a",D,[t("Github repository ("),o(i,{icon:"iconfont icon-github"}),V,t(")")]),t(".")]),z,e("p",null,[e("a",G,[o(i,{icon:"iconfont icon-github"}),A]),t(" is an incomplete Redis client and server implementation using tokio, it has decent code base and detail explanations, very suitable for learning Rust and asynchronous programming.")]),F,K,e("p",null,[e("a",Q,[t("This online book ("),o(i,{icon:"iconfont icon-github"}),Z,t(")")]),t(" will walk through the basics of interpreted language implementation in Rust with a focus on the challenges that are specific to using Rust.")]),M])}const X=h(f,[["render",J],["__file","elegant-code-base.html.vue"]]),Y=JSON.parse('{"path":"/rust/rust-by-practice/elegant-code-base.html","title":"1. Small projects with Elegant code","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"1. Small projects with Elegant code","description":"Rust by Practice > 1. Small projects with Elegant code","category":["Rust"],"tag":["crashcourse","freecodecamp","zubiarfan","youtube","rust","rs","wasm","assembly"],"head":[[{"meta":null},{"property":"og:title","content":"Rust by Practice > 1. Small projects with Elegant code"},{"property":"og:description","content":"1. Small projects with Elegant code"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/rust/rust-by-practice/elegant-code-base.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/rust/rust-by-practice/elegant-code-base.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"1. Small projects with Elegant code"}],["meta",{"property":"og:description","content":"Rust by Practice > 1. Small projects with Elegant code"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"freecodecamp"}],["meta",{"property":"article:tag","content":"zubiarfan"}],["meta",{"property":"article:tag","content":"youtube"}],["meta",{"property":"article:tag","content":"rust"}],["meta",{"property":"article:tag","content":"rs"}],["meta",{"property":"article:tag","content":"wasm"}],["meta",{"property":"article:tag","content":"assembly"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. Small projects with Elegant code\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"isOriginal":false},"headers":[{"level":2,"title":"1. Ripgrep","slug":"_1-ripgrep","link":"#_1-ripgrep","children":[]},{"level":2,"title":"2. Building a text editor","slug":"_2-building-a-text-editor","link":"#_2-building-a-text-editor","children":[]},{"level":2,"title":"3. Ncspot","slug":"_3-ncspot","link":"#_3-ncspot","children":[]},{"level":2,"title":"4. Command Line Rust","slug":"_4-command-line-rust","link":"#_4-command-line-rust","children":[]},{"level":2,"title":"5. pngme book","slug":"_5-pngme-book","link":"#_5-pngme-book","children":[]},{"level":2,"title":"6. Writing an OS in Rust","slug":"_6-writing-an-os-in-rust","link":"#_6-writing-an-os-in-rust","children":[]},{"level":2,"title":"7. CodeCrafters.io: Build your own Git, Docker, SQLite, or Redis","slug":"_7-codecrafters-io-build-your-own-git-docker-sqlite-or-redis","link":"#_7-codecrafters-io-build-your-own-git-docker-sqlite-or-redis","children":[]},{"level":2,"title":"8. mini-redis","slug":"_8-mini-redis","link":"#_8-mini-redis","children":[]},{"level":2,"title":"9. Writing Interpreters in Rust","slug":"_9-writing-interpreters-in-rust","link":"#_9-writing-interpreters-in-rust","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.98,"words":594},"filePathRelative":"rust/rust-by-practice/elegant-code-base.md","localizedDate":"2023년 12월 27일","excerpt":"\\n"}');export{X as comp,Y as data};
