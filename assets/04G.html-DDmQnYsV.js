import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as s,t as u,b as a,w as i,n as h,g as m,d as n,e as t,r as o,o as v}from"./app-U_bew1in.js";const b={},g={id:"frontmatter-title-관련",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-관련"},k={class:"table-of-contents"},f=s("hr",null,null,-1),y=s("hr",null,null,-1),j={href:"https://github.com/pahkey/sbb3/tree/4-07",target:"_blank",rel:"noopener noreferrer"},x=s("code",null,"pahkey/sbb3",-1),w=s("code",null,"4-07",-1),S=s("p",null,[n("SBB는 데이터베이스로 H2 데이터베이스를 사용한다. 그리고 개발 편의상 H2 데이터베이스의 사용자명은 "),s("code",null,"sa"),n(" 비밀번호는 빈값("),s("code",null,"''"),n(")으로 설정하였다. 하지만 서버환경에서도 이처럼 사용하는 것은 위험하다. 왜냐하면 누구나 서버의 H2 데이터베이스 콘솔에 로그인 할수 있기 때문이다.")],-1),D=s("blockquote",null,[s("p",null,"H2 대신 PostgreSQL 데이터베이스를 사용하는 방법에 대해서는 나중에 알아보자.")],-1),R=s("p",null,"이번 장에서는 서버환경에서 H2 데이터베이스의 비밀번호를 설정하는 방법에 대해서 알아보자.",-1),B=s("hr",null,null,-1),H=s("h2",{id:"개발과-서버-환경-분리",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#개발과-서버-환경-분리"},[s("span",null,"개발과 서버 환경 분리")])],-1),A=s("code",null,"application.properties",-1),T=t(`<div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">1234</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>하지만 우리는 개발 편의를 위해 로컬 환경은 여전히 비밀번호 없이 사용하고 서버 환경에만 비밀번호를 설정하고자 한다.</p><p>어떻게 하면 될까?</p><p>스프링 부트는 시작옵션으로 다음과 같이 <code>spring.profiles.active</code> 항목을 전달할 수 있다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">java</span> <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod <span class="token parameter variable">-jar</span> sbb-0.0.1-SNAPSHOT.jar </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,5),q=s("code",null,"-Dspring.profiles.active=prod",-1),G=s("code",null,"application.properties",-1),J=s("code",null,"application-prod.properties",-1),O=s("code",null,"application-{profile}.properties",-1),P=s("code",null,"-Dspring.profiles.active=dev",-1),C=s("code",null,"application-dev.properties",-1),L=s("hr",null,null,-1),N=s("h2",{id:"서버-환경-파일-작성하기",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#서버-환경-파일-작성하기"},[s("span",null,"서버 환경 파일 작성하기")])],-1),V=s("code",null,"application-prod.properties",-1),E=s("code",null,"/sbb/src/main/resources/",-1),$=s("code",null,"application-prod.properties",-1),z=t(`<div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># DATABASE</span></span>
<span class="line"><span class="token key attr-name">spring.h2.console.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.h2.console.path</span><span class="token punctuation">=</span><span class="token value attr-value">/h2-console</span></span>
<span class="line"><span class="token key attr-name">spring.h2.console.settings.web-allow-others</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:h2:~/local</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.driverClassName</span><span class="token punctuation">=</span><span class="token value attr-value">org.h2.Driver</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token value attr-value">sa</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">1234</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># JPA</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.properties.hibernate.dialect</span><span class="token punctuation">=</span><span class="token value attr-value">org.hibernate.dialect.H2Dialect</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.hibernate.ddl-auto</span><span class="token punctuation">=</span><span class="token value attr-value">update</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.properties.hibernate.format_sql</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.properties.hibernate.show_sql</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),K=s("code",null,"application.properties",-1),W=s("code",null,"application-prod.properties",-1),Z=s("code",null,"spring.datasource.password",-1),F=s("code",null,"spring.h2.console.settings.web-allow-others=true",-1),I=s("blockquote",null,[s("p",null,"비밀번호는 1234 대신 다른 값으로 사용하자. 여기에서는 쉬운 설명을 위해 1234라는 값을 사용하였다.")],-1),U=s("hr",null,null,-1),M=s("h2",{id:"빌드-버전-변경하여-배포파일-생성하기",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#빌드-버전-변경하여-배포파일-생성하기"},[s("span",null,"빌드 버전 변경하여 배포파일 생성하기")])],-1),Q=s("p",null,[n("그리고 "),s("code",null,"build.gradle"),n(" 파일의 빌드 버전도 다음처럼 변경해 주자.")],-1),X=s("code",null,"/sbb/",-1),Y=s("code",null,"build.gradle",-1),ss=t(`<div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">group <span class="token operator">=</span> <span class="token string">&#39;com.mysite&#39;</span></span>
<span class="line">version <span class="token operator">=</span> <span class="token string">&#39;0.0.2&#39;</span></span>
<span class="line">sourceCompatibility <span class="token operator">=</span> <span class="token string">&#39;17&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ns=s("code",null,'["Run"]',-1),as=t(`<code>[Gradle Task -&gt; sbb -&gt; Run]</code><p>그러면 다음과 같은 배포파일이 생성될 것이다.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">workspace/sbb/build/libs/sbb-0.0.2.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,3),es=s("code",null,"sbb-0.0.2.jar",-1),ts=s("code",null,"sbb",-1),ls=t(`<hr><h2 id="변경내용-서버에-적용하기" tabindex="-1"><a class="header-anchor" href="#변경내용-서버에-적용하기"><span>변경내용 서버에 적용하기</span></a></h2><p>데이터베이스에 비밀번호를 설정했기 때문에 기존에 있던 데이터베이스 파일들을 모두 지워야 한다.</p><blockquote><p>만약 기존의 데이터를 유지하고 싶다면 비밀번호를 설정하기 전에 H2 콘솔에 접속하여 비밀번호를 변경하는 쿼리를 수동으로 실행해야 한다. (예: <code>ALTER USER sa SET PASSWORD &#39;1234&#39;;</code>)</p></blockquote><p>다음처럼 기존의 데이터베이스 파일을 삭제하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># local.mv.db  sbb</span></span>
<span class="line"><span class="token function">rm</span> local.mv.db</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),is=s("code",null,"start.sh",-1),os=s("code",null,"/home/ubuntu/sbb/",-1),ps=s("code",null,"start.sh",-1),cs=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">JAR</span><span class="token operator">=</span>sbb-0.0.2.jar</span>
<span class="line"><span class="token assign-left variable">LOG</span><span class="token operator">=</span>/home/ubuntu/sbb/sbb.log</span>
<span class="line"></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod <span class="token parameter variable">-jar</span> <span class="token variable">$JAR</span> <span class="token operator">&gt;</span> <span class="token variable">$LOG</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),rs=s("code",null,"sbb-0.0.2.jar",-1),ds=s("code",null,"-Dspring.profiles.active=prod",-1),us=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./stop.sh</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># SBB stopped.</span></span>
<span class="line">./start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),hs={class:"hint-container info"},ms=s("p",{class:"hint-container-title"},"spring_profiles_active 환경변수 사용하기",-1),vs=s("code",null,"-Dspring.profiles.active=prod",-1),bs=s("code",null,"spring_profiles_active",-1),gs=s("code",null,"spring_profiles_active",-1),_s=s("code",null,"start.sh",-1),ks=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">JAR</span><span class="token operator">=</span>sbb-0.0.2.jar</span>
<span class="line"><span class="token assign-left variable">LOG</span><span class="token operator">=</span>/home/ubuntu/sbb/sbb.log</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">spring_profiles_active</span><span class="token operator">=</span>prod</span>
<span class="line"></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>prod <span class="token parameter variable">-jar</span> <span class="token variable">$JAR</span> <span class="token operator">&gt;</span> <span class="token variable">$LOG</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>export</code> 명령으로 <code>spring_profiles_active</code> 환경변수를 설정하고 기존의 옵션은 삭제한다.</p>`,2),fs=t('<hr><h2 id="서버-h2-콘솔-접속하기" tabindex="-1"><a class="header-anchor" href="#서버-h2-콘솔-접속하기"><span>서버 H2 콘솔 접속하기</span></a></h2><figure><img src="https://wikidocs.net/images/page/163021/O_4-07_1.png" alt="이제 서버 콘솔에 접속하여 다음처럼 비밀번호 없이 접속을 시도해 보자." tabindex="0" loading="lazy"><figcaption>이제 서버 콘솔에 접속하여 다음처럼 비밀번호 없이 접속을 시도해 보자.</figcaption></figure><blockquote><p>JDBC URL명을 <code>jdbc:h2:~/local</code>로 설정하는 것도 잊지 말자. H2 콘솔은 디폴트로 <code>jdbc:h2:~/test</code>로 되어 있다.</p></blockquote><p>위와 같이 비밀번호가 잘못되었다는 오류메시지를 확인할 수 있을 것이다. 위에서 서버 환경파일에 설정한 비밀번호를 입력하여 로그인을 다시 시도해 보자. 로그인이 잘 수행될 것이다.</p><hr>',6);function ys(p,js){const l=o("router-link"),c=o("VPCard"),e=o("FontIcon");return v(),d("div",null,[s("h1",g,[s("a",_,[s("span",null,u(p.$frontmatter.title)+" 관련",1)])]),s("nav",k,[s("ul",null,[s("li",null,[a(l,{to:"#개발과-서버-환경-분리"},{default:i(()=>[n("개발과 서버 환경 분리")]),_:1})]),s("li",null,[a(l,{to:"#서버-환경-파일-작성하기"},{default:i(()=>[n("서버 환경 파일 작성하기")]),_:1})]),s("li",null,[a(l,{to:"#빌드-버전-변경하여-배포파일-생성하기"},{default:i(()=>[n("빌드 버전 변경하여 배포파일 생성하기")]),_:1})]),s("li",null,[a(l,{to:"#변경내용-서버에-적용하기"},{default:i(()=>[n("변경내용 서버에 적용하기")]),_:1})]),s("li",null,[a(l,{to:"#서버-h2-콘솔-접속하기"},{default:i(()=>[n("서버 H2 콘솔 접속하기")]),_:1})])])]),f,a(c,h(m({title:"4-07. 개발과 서버 환경 분리",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/163021",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),y,s("blockquote",null,[s("p",null,[s("a",j,[a(e,{icon:"iconfont icon-github"}),n(),x,n(" - "),a(e,{icon:"fas fa-folder-open"}),n(),w])])]),S,D,R,B,H,s("p",null,[n("H2 데이터베이스에 비밀번호를 설정하는 방법은 매우 간단하다. "),a(e,{icon:"fas fa-file-lines"}),A,n(" 파일의 다음 항목에 다음처럼 비밀번호를 설정하기만 하면 된다.")]),T,s("p",null,[n("이처럼 "),q,n(" 옵션을 주어 실행하면 스프링 부트는 "),a(e,{icon:"fas fa-file-lines"}),G,n(" 파일 대신 "),a(e,{icon:"fas fa-file-lines"}),J,n("을 사용한다. 즉 "),a(e,{icon:"fas fa-file-lines"}),O,n("와 같은 규칙을 따른다. 예를 들어 "),P,n(" 옵션을 주어 실행할 경우에는 환경파일로 "),C,n(" 파일을 사용한다.")]),L,N,s("p",null,[n("서버에서 사용할 "),a(e,{icon:"fas fa-file-lines"}),V,n(" 파일을 다음과 같이 작성하자.")]),s("blockquote",null,[s("p",null,[n("파일명: "),a(e,{icon:"fas fa-folder-open"}),E,a(e,{icon:"fas fa-file-lines"}),$])]),z,s("p",null,[n("."),a(e,{icon:"fas fa-file-lines"}),K,n(" 파일을 복사하여 동일하게 "),a(e,{icon:"fas fa-file-lines"}),W,n(" 파일을 생성하였다. 다만 "),Z,n("에 비밀번호를 설정하고 외부에서 H2 콘솔에 접속이 가능하도록 "),F,n(" 설정을 추가해 주었다.")]),I,U,M,Q,s("blockquote",null,[s("p",null,[n("파일명: "),a(e,{icon:"fas fa-folder-open"}),X,a(e,{icon:"iconfont icon-engine"}),Y])]),ss,s("p",null,[n("이와 같이 수정한 후 다음처럼 Gradle Task의 sbb를 선택하고 "),a(e,{icon:"iconfont icon-select"}),ns,n("을 실행하여 배포파일을 새로 만들자.")]),a(e,{icon:"iconfont icon-select"}),as,s("p",null,[n("이제 "),a(e,{icon:"iconfont icon-java"}),es,n(" 파일을 파일질라를 사용하여 서버의 "),a(e,{icon:"fas fa-folder-open"}),ts,n(" 디렉터리에 업로드하자.")]),ls,s("p",null,[n("그리고 서버의 "),a(e,{icon:"iconfont icon-shell"}),is,n(" 파일도 다음과 같이 수정하자.")]),s("blockquote",null,[s("p",null,[n("파일명: "),a(e,{icon:"fas fa-folder-open"}),os,a(e,{icon:"iconfont icon-shell"}),ps])]),cs,s("p",null,[n("새로 업로드한 "),a(e,{icon:"iconfont icon-java"}),rs,n("를 적용하고 "),ds,n(" 옵션을 주어 스프링부트가 실행되도록 설정했다. 이와 같이 수정하고 다음처럼 SBB 서비스를 재시작하자.")]),us,s("div",hs,[ms,s("p",null,[vs,n(" 옵션 대신 "),bs,n(" 환경변수를 설정하는 방법도 있다. "),gs,n(" 환경 변수를 사용하려면 "),a(e,{icon:"iconfont icon-shell"}),_s,n(" 을 다음과 같이 수정하자.")]),ks]),fs])}const Ss=r(b,[["render",ys],["__file","04G.html.vue"]]),Ds=JSON.parse('{"path":"/java/jump-to-spring-boot/04G.html","title":"4-07. 개발과 서버 환경 분리","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"4-07. 개발과 서버 환경 분리","description":"🍃Jump to Spring Boot > 4-07. 개발과 서버 환경 분리","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"🍃Jump to Spring Boot > 4-07. 개발과 서버 환경 분리"},{"property":"og:description","content":"4-07. 개발과 서버 환경 분리"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/04G.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/04G.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"4-07. 개발과 서버 환경 분리"}],["meta",{"property":"og:description","content":"🍃Jump to Spring Boot > 4-07. 개발과 서버 환경 분리"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/163021/O_4-07_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4-07. 개발과 서버 환경 분리\\",\\"image\\":[\\"https://wikidocs.net/images/page/163021/O_4-07_1.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"개발과 서버 환경 분리","slug":"개발과-서버-환경-분리","link":"#개발과-서버-환경-분리","children":[]},{"level":2,"title":"서버 환경 파일 작성하기","slug":"서버-환경-파일-작성하기","link":"#서버-환경-파일-작성하기","children":[]},{"level":2,"title":"빌드 버전 변경하여 배포파일 생성하기","slug":"빌드-버전-변경하여-배포파일-생성하기","link":"#빌드-버전-변경하여-배포파일-생성하기","children":[]},{"level":2,"title":"변경내용 서버에 적용하기","slug":"변경내용-서버에-적용하기","link":"#변경내용-서버에-적용하기","children":[]},{"level":2,"title":"서버 H2 콘솔 접속하기","slug":"서버-h2-콘솔-접속하기","link":"#서버-h2-콘솔-접속하기","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":1.53,"words":459},"filePathRelative":"java/jump-to-spring-boot/04G.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{Ss as comp,Ds as data};
