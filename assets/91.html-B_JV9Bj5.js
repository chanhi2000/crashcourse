import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as e,t as d,b as t,w as i,n,g as s,d as a,e as u,r as l,o as w}from"./app-U_bew1in.js";const g={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},y={class:"table-of-contents"},_=e("hr",null,null,-1),k=e("h2",{id:"project-17-part-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#project-17-part-6"},[e("span",null,"Project 17, part 6")])],-1),b=e("p",null,"With another app finished it‚Äôs time for you to review what you learned and also take on some challenges to make sure you really understand what was covered ‚Äì two things that are easily skipped over, but two things that are central to great learning.",-1),v=e("p",null,[a("US president John F. Kennedy once said, ‚Äúthings do not happen ‚Äì things are "),e("em",null,"made"),a(" to happen,‚Äù which really gets to the heart of these challenges. You need to step up the plate and write code yourself ‚Äì make things happen yourself ‚Äì because otherwise all you have is an idea. And as Steve Jobs said, ‚Äúideas without action aren't ideas ‚Äì they're regrets.‚Äù")],-1),x=e("p",null,[e("strong",null,"Today you should work through the wrap up chapter for project 17, complete its review, then work through all three of its challenges.")],-1),D=e("h3",{id:"flashzilla-wrap-up",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flashzilla-wrap-up"},[e("span",null,"Flashzilla: Wrap up")])],-1),z={class:"hint-container details"},j=e("summary",null,"Flashzilla: Wrap up",-1),S=u('<p>This was another big project, but also another one where we covered some really great techniques like gestures, hit testing, timers, and more. When these features work together we can do remarkable things in our apps, providing an experience to users that is seamless and delightful.</p><p>You also saw once again the importance of ensuring accessibility in our apps. It‚Äôs easy to get carried away with cool gestures and more, but then forget that straying from standard UI also means we need to up our game when it comes to VoiceOver and more. Anyone can make a good idea, but to make a <em>great</em> app means you‚Äôve taken into account the needs of everyone.</p><h4 id="review-what-you-learned" tabindex="-1"><a class="header-anchor" href="#review-what-you-learned"><span>Review what you learned</span></a></h4><p>Anyone can sit through a tutorial, but it takes actual work to remember what was taught. It‚Äôs my job to make sure you take as much from these tutorials as possible, so I‚Äôve prepared a short review to help you check your learning.</p><p><a href="https://www.hackingwithswift.com/review/ios-swiftui/flashzilla" target="_blank" rel="noopener noreferrer">Click here to review what you learned in this project.</a></p><h4 id="challenge" tabindex="-1"><a class="header-anchor" href="#challenge"><span>Challenge</span></a></h4><p>One of the best ways to learn is to write your own code as often as possible, so here are some ways you should try extending this app to make sure you fully understand what‚Äôs going on.</p><ol><li>When adding a card, the text fields keep their current text. Fix that so that the textfields clear themselves after a card is added.</li><li>If you drag a card to the right but not far enough to remove it, then release, you see it turn red as it slides back to the center. Why does this happen and how can you fix it? (Tip: think about the way we set <code>offset</code> back to 0 immediately, even though the card hasn‚Äôt animated yet. You might solve this with a ternary within a ternary, but a custom modifier will be cleaner.)</li><li>For a harder challenge: when the users gets an answer wrong, add that card goes back into the array so the user can try it again. Doing this successfully means rethinking the <code>ForEach</code> loop, because relying on simple integers isn‚Äôt enough ‚Äì your cards need to be uniquely identifiable.</li></ol><p>Still thirsty for more? Try upgrading our loading and saving code in two ways:</p><ol><li>Make it use an alternative approach to saving data, e.g. documents JSON rather than <code>UserDefaults</code>, or SwiftData ‚Äì this is generally a good idea, so you should get practice with this.</li><li>Try to find a way to centralize the loading and saving code for the cards. You might need to experiment a little to find something you like!</li></ol>',10),F=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"Flashzilla: Wrap up - Additional"),e("ul",null,[e("li",null,[e("a",{href:"https://www.hackingwithswift.com/review/ios-swiftui/flashzilla",target:"_blank",rel:"noopener noreferrer"},"Review for Project 17: Flashzilla")])])],-1),T=e("hr",null,null,-1);function W(h,I){const o=l("router-link"),r=l("VPCard");return w(),p("div",null,[e("h1",f,[e("a",m,[e("span",null,d(h.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e("nav",y,[e("ul",null,[e("li",null,[t(o,{to:"#project-17-part-6"},{default:i(()=>[a("Project 17, part 6")]),_:1}),e("ul",null,[e("li",null,[t(o,{to:"#flashzilla-wrap-up"},{default:i(()=>[a("Flashzilla: Wrap up")]),_:1})])])])])]),_,t(r,n(s({title:"100 Days of SwiftUI - Day 91",desc:"Project 17, part 6",link:"https://www.hackingwithswift.com/100/swiftui/91",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,b,v,x,D,e("details",z,[j,t(r,n(s({title:"100 Days of SwiftUI - Day 91 - Flashzilla: Wrap up",desc:"Flashzilla: Wrap up",link:"https://www.hackingwithswift.com/books/ios-swiftui/flashzilla-wrap-up",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),S]),F,T])}const C=c(g,[["render",W],["__file","91.html.vue"]]),R=JSON.parse('{"path":"/swift/100-days-of-swiftui/91.html","title":"Day 91","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Day 91","description":"100 Days of SwiftUI > Day 91","category":["Swift"],"tag":["crashcourse","paul-hudson","swift","swiftui","hacking-with-swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"100 Days of SwiftUI > Day 91"},{"property":"og:description","content":"Day 91"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/100-days-of-swiftui/91.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/swift/100-days-of-swiftui/91.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"Day 91"}],["meta",{"property":"og:description","content":"100 Days of SwiftUI > Day 91"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"paul-hudson"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"hacking-with-swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day 91\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Project 17, part 6","slug":"project-17-part-6","link":"#project-17-part-6","children":[{"level":3,"title":"Flashzilla: Wrap up","slug":"flashzilla-wrap-up","link":"#flashzilla-wrap-up","children":[]}]}],"git":{"createdTime":1709715232000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":6}]},"readingTime":{"minutes":2.36,"words":708},"filePathRelative":"swift/100-days-of-swiftui/91.md","localizedDate":"2024ÎÖÑ 3Ïõî 6Ïùº","excerpt":"\\n\\n<hr>\\n"}');export{C as comp,R as data};
