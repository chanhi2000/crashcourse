import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a,t as d,b as s,w as e,n as k,g as h,d as n,e as i,r as p,o as b}from"./app-U_bew1in.js";const m={},g={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},v={class:"table-of-contents"},y=a("hr",null,null,-1),C=i('<h2 id="üèù-1-what-is-clipboard-api" tabindex="-1"><a class="header-anchor" href="#üèù-1-what-is-clipboard-api"><span>üèù 1. What is Clipboard API</span></a></h2><p>The <a href="https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API" target="_blank" rel="noopener noreferrer">Clipboard API</a> is a set of JavaScript APIs for manipulating the clipboard in a browser. With the Clipboard API, developers can copy text, images, and other data to the clipboard, as well as read data from the clipboard to perform functions such as copying, cutting, and pasting.</p><h3 id="_1-2-use-case" tabindex="-1"><a class="header-anchor" href="#_1-2-use-case"><span>1.2 Use Case</span></a></h3><p>The Clipboard API can be widely used in various Web applications, such as</p><ul><li>Copy, cut, and paste in a text editor.</li><li>Copy and paste images into an image editor.</li><li>Copy and share links on web pages.</li></ul><h2 id="üé®-2-how-to-use-the-clipboard-api" tabindex="-1"><a class="header-anchor" href="#üé®-2-how-to-use-the-clipboard-api"><span>üé® 2. How to use the Clipboard API</span></a></h2>',6),w=a("code",null,"Clipboard",-1),x=a("code",null,"DataTransfer",-1),_=i(`<ul><li><code>writeText(text: string): Promise&lt;void&gt;</code>: Copies text to the clipboard.</li><li><code>readText(): Promise&lt;string&gt;</code>: Reads text from the clipboard.</li></ul><p>The following is an example of copying text to the clipboard using the Clipboard interface:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Clipboard API Example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>copy-btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Copy to Clipboard<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">      <span class="token keyword">const</span> copyButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;copy-btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      copyButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">await</span> navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Text copied to clipboard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to copy text: &quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, clicking the ‚ÄúCopy to Clipboard‚Äù button will successfully copy the text ‚ÄúHello, World!‚Äù.</p><p>The <code>DataTransfer</code> interface is used to simulate the clipboard inside the application, and it contains the following methods:</p><ul><li><code>setData(type: string, data: string): void</code>: Copies the data of the specified type to the clipboard.</li><li><code>getData(type: string): string</code>: reads the data of the specified type from the clipboard.</li></ul><p>The following is an example of copying text to the clipboard using the <code>DataTransfer</code> interface:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> dataTransfer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">dataTransfer<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  event<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span> dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">element<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClipboardEvent</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="üß≠-3-examples-of-the-clipboard-api" tabindex="-1"><a class="header-anchor" href="#üß≠-3-examples-of-the-clipboard-api"><span>üß≠ 3. Examples of the Clipboard API</span></a></h2><p>The following are some real-world scenarios for the Clipboard API:</p><h3 id="_3-1-copying-text" tabindex="-1"><a class="header-anchor" href="#_3-1-copying-text"><span>3.1 Copying Text</span></a></h3><p>Text can be copied to the clipboard using the Clipboard interface, an example of which is as follows:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">navigator<span class="token punctuation">.</span>clipboard</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Text copied to clipboard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to copy text: &quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-copying-images" tabindex="-1"><a class="header-anchor" href="#_3-2-copying-images"><span>3.2 Copying Images</span></a></h3><p>Images can be copied to the clipboard using the DataTransfer interface, an example of which is shown below:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> dataTransfer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">dataTransfer<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;world.txt&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  event<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span> dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  event<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span>files <span class="token operator">=</span> dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">;</span></span>
<span class="line">  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">element<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClipboardEvent</span><span class="token punctuation">(</span><span class="token string">&quot;copy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-reading-data-from-the-clipboard" tabindex="-1"><a class="header-anchor" href="#_3-3-reading-data-from-the-clipboard"><span>3.3 Reading data from the clipboard</span></a></h3><p>Text can be read from the clipboard using the Clipboard interface, an example of which is shown below:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">navigator<span class="token punctuation">.</span>clipboard</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">readText</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Text read from clipboard: &quot;</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to read text from clipboard: &quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-clipboard-api-compatibility-and-pros-and-cons" tabindex="-1"><a class="header-anchor" href="#_4-clipboard-api-compatibility-and-pros-and-cons"><span>4. Clipboard API Compatibility and Pros and Cons</span></a></h2><h3 id="_4-1-compatibility-of-the-clipboard-api" tabindex="-1"><a class="header-anchor" href="#_4-1-compatibility-of-the-clipboard-api"><span>4.1 Compatibility of the Clipboard API</span></a></h3><p>The following is the compatibility status of the Clipboard API:</p><ul><li>Chrome: 43+ ‚úÖ</li><li>Edge: 12+ ‚úÖ</li><li>Firefox: 41+ ‚úÖ</li><li>Internet Explorer: ‚ùå</li><li>Opera: 29+ ‚úÖ</li><li>Safari: 10+ ‚úÖ</li></ul><figure><img src="https://miro.medium.com/v2/resize:fit:1400/format:webp/1*ZyGxHfzBmPsnmc5vuSdgsQ.png" alt="Photo By Can I Use" tabindex="0" loading="lazy"><figcaption>Photo By Can I Use</figcaption></figure><p>You can use the <a href="https://caniuse.com/?search=Clipboard" target="_blank" rel="noopener noreferrer">Can I Use</a> website to check the compatibility of the Clipboard API.</p><h3 id="_4-2-advantages-and-disadvantages-of-the-clipboard-api" tabindex="-1"><a class="header-anchor" href="#_4-2-advantages-and-disadvantages-of-the-clipboard-api"><span>4.2 Advantages and Disadvantages of the Clipboard API</span></a></h3><p>The advantages of the Clipboard API include:</p><ul><li>Support for manipulating the clipboard in the browser to facilitate copying, cutting, and pasting.</li><li>Support for copying various types of data (text, images, etc.) to the clipboard.</li><li>Support for reading various types of data from the clipboard.</li></ul><p>Disadvantages of Clipboard API include:</p><ul><li>Compatibility issues may cause some users to be unable to use the relevant functions.</li><li>The need to obtain authorization from the user to operate the clipboard may cause unnecessary interference to the user.</li><li>In some cases, security may be an issue, for example, malicious websites may be able to access sensitive information copied to the clipboard by the user.</li></ul><hr><h2 id="üëç-5-suggestions-and-cautions-for-using-the-clipboard-api" tabindex="-1"><a class="header-anchor" href="#üëç-5-suggestions-and-cautions-for-using-the-clipboard-api"><span>üëç 5. Suggestions and Cautions for Using the Clipboard API</span></a></h2><p>When using the Clipboard API, the following things need to be noted:</p><ul><li>When using the Clipboard interface, you need to get the user‚Äôs authorization. You can request authorization when the user performs the relevant action, or request authorization when the page is loaded.</li><li>When using the <code>DataTransfer</code> interface, you need to set the <code>event.clipboardData</code> property in the copy event, otherwise the copy operation may fail.</li><li>When handling clipboard data, you need to pay attention to the type of data to avoid unexpected errors.</li></ul><p>We can also use some third-party libraries to quickly implement the requirements:</p><ul><li><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener noreferrer">clipboard.js</a>: 33.1K ‚≠ê, a simple JavaScript library for manipulating the clipboard.</li><li><a href="https://github.com/lgarron/clipboard-polyfill" target="_blank" rel="noopener noreferrer">clipboard-polyfill</a>: 884‚≠ê, a clipboard polyfill library for implementing similar functionality in browsers that do not support the Clipboard API.</li><li><a href="https://github.com/nkbt/react-copy-to-clipboard" target="_blank" rel="noopener noreferrer">react-copy-to-clipboard</a>: 2.2K ‚≠ê, a React-based clipboard library for implementing copy and paste functionality in React applications.</li></ul><p>All of these libraries above provide easy-to-use interfaces that help developers quickly implement Clipboard API-related features.</p><hr><h2 id="üç≠-6-summary" tabindex="-1"><a class="header-anchor" href="#üç≠-6-summary"><span>üç≠ 6. Summary</span></a></h2><p>The Clipboard API is a set of JavaScript APIs for manipulating the clipboard in the browser. Through the Clipboard API, developers can copy text, images, and other data to the clipboard, as well as read data from the clipboard to achieve the functions of copy, cut and paste. In practice, Clipboard API can be widely used in various web applications, such as text editors, image editors, web pages, etc. However, the compatibility of Clipboard API has some problems, and developers need to deal with compatibility. In order to use Clipboard API better, developers need to pay attention to the following things:</p><ul><li>When using the <code>Clipboard</code> interface, you need to get the user&#39;s authorization.</li><li>When using the <code>DataTransfer</code> interface, you need to set the <code>event.clipboardData</code> property in the <code>copy</code> event.</li><li>When working with clipboard data, you need to pay attention to the type of data.</li></ul><hr><h2 id="üéØ-7-expand" tabindex="-1"><a class="header-anchor" href="#üéØ-7-expand"><span>üéØ 7. Expand</span></a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API" target="_blank" rel="noopener noreferrer">MDN Web Docs: Clipboard API</a></li><li><a href="https://www.w3.org/TR/clipboard-apis" target="_blank" rel="noopener noreferrer">W3C: Clipboard API and events</a></li><li><a href="https://caniuse.com/?search=Clipboard" target="_blank" rel="noopener noreferrer">Can I Use: Clipboard API</a></li></ul><hr>`,47);function I(l,P){const t=p("router-link"),c=p("VPCard"),o=p("FontIcon");return b(),u("div",null,[a("h1",g,[a("a",f,[a("span",null,d(l.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a("nav",v,[a("ul",null,[a("li",null,[s(t,{to:"#üèù-1-what-is-clipboard-api"},{default:e(()=>[n("üèù 1. What is Clipboard API")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#_1-2-use-case"},{default:e(()=>[n("1.2 Use Case")]),_:1})])])]),a("li",null,[s(t,{to:"#üé®-2-how-to-use-the-clipboard-api"},{default:e(()=>[n("üé® 2. How to use the Clipboard API")]),_:1})]),a("li",null,[s(t,{to:"#üß≠-3-examples-of-the-clipboard-api"},{default:e(()=>[n("üß≠ 3. Examples of the Clipboard API")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#_3-1-copying-text"},{default:e(()=>[n("3.1 Copying Text")]),_:1})]),a("li",null,[s(t,{to:"#_3-2-copying-images"},{default:e(()=>[n("3.2 Copying Images")]),_:1})]),a("li",null,[s(t,{to:"#_3-3-reading-data-from-the-clipboard"},{default:e(()=>[n("3.3 Reading data from the clipboard")]),_:1})])])]),a("li",null,[s(t,{to:"#_4-clipboard-api-compatibility-and-pros-and-cons"},{default:e(()=>[n("4. Clipboard API Compatibility and Pros and Cons")]),_:1}),a("ul",null,[a("li",null,[s(t,{to:"#_4-1-compatibility-of-the-clipboard-api"},{default:e(()=>[n("4.1 Compatibility of the Clipboard API")]),_:1})]),a("li",null,[s(t,{to:"#_4-2-advantages-and-disadvantages-of-the-clipboard-api"},{default:e(()=>[n("4.2 Advantages and Disadvantages of the Clipboard API")]),_:1})])])]),a("li",null,[s(t,{to:"#üëç-5-suggestions-and-cautions-for-using-the-clipboard-api"},{default:e(()=>[n("üëç 5. Suggestions and Cautions for Using the Clipboard API")]),_:1})]),a("li",null,[s(t,{to:"#üç≠-6-summary"},{default:e(()=>[n("üç≠ 6. Summary")]),_:1})]),a("li",null,[s(t,{to:"#üéØ-7-expand"},{default:e(()=>[n("üéØ 7. Expand")]),_:1})])])]),y,s(c,k(h({title:"(by Chris1993) Must Know JavaScript API ‚Äî Clipboard API",desc:"Clipboard API",link:"https://javascript.plainenglish.io/must-know-javascript-api-clipboard-api-22ac0861e27b",logo:"https://miro.medium.com/v2/resize:fill:59:59/1*H8epNyccEIEHWl9YYJhO2w.png",background:"rgb(222,200,50,0.2)"})),null,16),C,a("p",null,[n("The Clipboard API includes two main interfaces: "),w,n(" and "),x,n(". The Clipboard interface is used for operating system clipboards (such as the clipboard in "),s(o,{icon:"fa-brands fa-windows"}),n("Windows or "),s(o,{icon:"iconfont icon-macos"}),n("macOS) and contains the following methods:")]),_])}const T=r(m,[["render",I],["__file","clipboard.html.vue"]]),j=JSON.parse('{"path":"/js/must-know-javascript-api/clipboard.html","title":"Clipboard API","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Clipboard API","description":"Must Know JavaScript API > Clipboard API","categroy":["JavaScript"],"tag":["blog","js","api","broadcast"],"head":[[{"meta":null},{"property":"og:title","content":"Must Know JavaScript API > Clipboard API"},{"property":"og:description","content":"Clipboard API"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/js/must-know-javascript-api/clipboard.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/js/must-know-javascript-api/clipboard.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"Clipboard API"}],["meta",{"property":"og:description","content":"Must Know JavaScript API > Clipboard API"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://miro.medium.com/v2/resize:fit:1400/format:webp/1*ZyGxHfzBmPsnmc5vuSdgsQ.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"api"}],["meta",{"property":"article:tag","content":"broadcast"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Clipboard API\\",\\"image\\":[\\"https://miro.medium.com/v2/resize:fit:1400/format:webp/1*ZyGxHfzBmPsnmc5vuSdgsQ.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"üèù 1. What is Clipboard API","slug":"üèù-1-what-is-clipboard-api","link":"#üèù-1-what-is-clipboard-api","children":[{"level":3,"title":"1.2 Use Case","slug":"_1-2-use-case","link":"#_1-2-use-case","children":[]}]},{"level":2,"title":"üé® 2. How to use the Clipboard API","slug":"üé®-2-how-to-use-the-clipboard-api","link":"#üé®-2-how-to-use-the-clipboard-api","children":[]},{"level":2,"title":"üß≠ 3. Examples of the Clipboard API","slug":"üß≠-3-examples-of-the-clipboard-api","link":"#üß≠-3-examples-of-the-clipboard-api","children":[{"level":3,"title":"3.1 Copying Text","slug":"_3-1-copying-text","link":"#_3-1-copying-text","children":[]},{"level":3,"title":"3.2 Copying Images","slug":"_3-2-copying-images","link":"#_3-2-copying-images","children":[]},{"level":3,"title":"3.3 Reading data from the clipboard","slug":"_3-3-reading-data-from-the-clipboard","link":"#_3-3-reading-data-from-the-clipboard","children":[]}]},{"level":2,"title":"4. Clipboard API Compatibility and Pros and Cons","slug":"_4-clipboard-api-compatibility-and-pros-and-cons","link":"#_4-clipboard-api-compatibility-and-pros-and-cons","children":[{"level":3,"title":"4.1 Compatibility of the Clipboard API","slug":"_4-1-compatibility-of-the-clipboard-api","link":"#_4-1-compatibility-of-the-clipboard-api","children":[]},{"level":3,"title":"4.2 Advantages and Disadvantages of the Clipboard API","slug":"_4-2-advantages-and-disadvantages-of-the-clipboard-api","link":"#_4-2-advantages-and-disadvantages-of-the-clipboard-api","children":[]}]},{"level":2,"title":"üëç 5. Suggestions and Cautions for Using the Clipboard API","slug":"üëç-5-suggestions-and-cautions-for-using-the-clipboard-api","link":"#üëç-5-suggestions-and-cautions-for-using-the-clipboard-api","children":[]},{"level":2,"title":"üç≠ 6. Summary","slug":"üç≠-6-summary","link":"#üç≠-6-summary","children":[]},{"level":2,"title":"üéØ 7. Expand","slug":"üéØ-7-expand","link":"#üéØ-7-expand","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":6}]},"readingTime":{"minutes":3.77,"words":1130},"filePathRelative":"js/must-know-javascript-api/clipboard.md","localizedDate":"2023ÎÖÑ 12Ïõî 27Ïùº","excerpt":"\\n\\n<hr>\\n"}');export{T as comp,j as data};
