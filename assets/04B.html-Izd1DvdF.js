import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as e,t as d,b as s,n as u,g as m,d as n,e as o,r as a,o as k}from"./app-U_bew1in.js";const h={},g={id:"frontmatter-title-관련",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-관련"},f=e("nav",{class:"table-of-contents"},[e("ul")],-1),v=e("hr",null,null,-1),y=e("code",null,"Dockerfile",-1),b=e("code",null,"Dockerfile",-1),D=e("code",null,"example",-1),w=e("code",null,"example",-1),x=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> example</span>
<span class="line"><span class="token builtin class-name">cd</span> example</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>다음 내용을 Dockerfile로 저장합니다.</p>`,2),R=e("code",null,"example/",-1),B=e("code",null,"Dockerfile",-1),N=o(`<div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">FROM</span> ubuntu:22.04</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">MAINTAINER</span> Foo Bar &lt;foo@bar.com&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt update</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt install -y nginx</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> echo <span class="token string">&quot;\\ndaemon off;&quot;</span> &gt;&gt; /etc/nginx/nginx.conf</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> chown -R www-data:www-data /var/lib/nginx</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">VOLUME</span> [<span class="token string">&quot;/data&quot;</span>, <span class="token string">&quot;/etc/nginx/site-enabled&quot;</span>, <span class="token string">&quot;/var/log/nginx&quot;</span>]</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /etc/nginx</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;nginx&quot;</span>]</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 443</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E=e("code",null,"nginx",-1),T=e("li",null,[e("code",null,"FROM"),n(": 어떤 이미지를 기반으로 할지 설정합니다. Docker 이미지는 기존에 만들어진 이미지를 기반으로 생성합니다. "),e("code",null,"<이미지 이름>:<태그>"),n(" 형식으로 설정합니다.")],-1),O=e("li",null,[e("code",null,"MAINTAINER"),n(": 메인테이너 정보입니다.")],-1),q=e("code",null,"RUN",-1),M=e("li",null,[n("이미지 생성 중에는 사용자 입력을 받을 수 없으므로 apt install 명령에서 "),e("code",null,"-y"),n(" 옵션을 사용합니다("),e("code",null,"yum install"),n("도 동일).")],-1),I=e("li",null,"나머지는 nginx 설정입니다.",-1),P=e("code",null,"VOLUME",-1),U=e("code",null,"docker run",-1),S=e("code",null,"-v",-1),V=e("code",null,"-v /root/data:/data",-1),A=e("code",null,"/root/data",-1),C=e("code",null,"/data",-1),Z=e("li",null,[e("code",null,"CMD"),n(": 컨테이너가 시작되었을 때 실행할 실행 파일 또는 셸 스크립트입니다.")],-1),F=e("li",null,[e("code",null,"WORKDIR"),n(": "),e("code",null,"CMD"),n("에서 설정한 실행 파일이 실행될 디렉터리입니다.")],-1),K=e("li",null,[e("code",null,"EXPOSE"),n(": 호스트와 연결할 포트 번호입니다.")],-1),j=e("hr",null,null,-1);function L(l,X){const i=a("VPCard"),c=a("SiteInfo"),t=a("FontIcon");return k(),p("div",null,[e("h1",g,[e("a",_,[e("span",null,d(l.$frontmatter.title)+" 관련",1)])]),s(i,u(m({title:"목차",desc:"언제나 최신 Docker",link:"/docker/always-up-to-date-docker/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),f,v,s(c,{name:"4장 - 2. Dockerfile 작성하기",desc:"언제나 최신 Docker",url:"https://pyrasis.com/jHLsAlwaysUpToDateDocker/Unit04/02",logo:"https://pyrasis.com/assets/images/pyrasis.png",preview:"https://pyrasis.com/assets/images/profile1.png"}),e("p",null,[n("."),s(t,{icon:"fa-brands fa-docker"}),y,n("은 Docker 이미지 설정 파일입니다. "),s(t,{icon:"fa-brands fa-docker"}),b,n("에 설정된 내용대로 이미지를 생성합니다.")]),e("p",null,[n("먼저 "),s(t,{icon:"fas fa-folder-open"}),D,n(" 디렉터리를 생성한 뒤 "),s(t,{icon:"fas fa-folder-open"}),w,n(" 디렉터리로 이동합니다.")]),x,e("blockquote",null,[s(t,{icon:"fas fa-folder-open"}),R,s(t,{icon:"fa-brands fa-docker"}),B]),N,e("p",null,[n("우분투 22.04를 기반으로 "),s(t,{icon:"iconfont icon-nginx"}),E,n(" 서버를 설치한 Docker 이미지를 생성하는 예제입니다.")]),e("ul",null,[T,O,e("li",null,[q,n(": 셸 스크립트 혹은 명령을 실행합니다. "),e("ul",null,[M,I,e("li",null,[P,n(": 호스트와 공유할 디렉터리 목록입니다. "),U,n(" 명령에서 "),S,n(" 옵션으로 설정할 수 있습니다. 예) "),V,n("는 호스트의 "),s(t,{icon:"fas fa-folder-open"}),A,n(" 디렉터리를 Docker 컨테이너의 "),s(t,{icon:"fas fa-folder-open"}),C,n(" 디렉터리에 연결합니다.")])])]),Z,F,K]),j])}const H=r(h,[["render",L],["__file","04B.html.vue"]]),J=JSON.parse('{"path":"/docker/always-up-to-date-docker/04B.html","title":"04B. Dockerfile 작성하기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"04B. Dockerfile 작성하기","description":"언제나 최신 Docker > 04B. Dockerfile 작성하기","category":["DevOps","Docker"],"tag":["crashcourse","pyrasis.com","docker","devops"],"head":[[{"meta":null},{"property":"og:title","content":"언제나 최신 Docker > 04B. Dockerfile 작성하기"},{"property":"og:description","content":"04B. Dockerfile 작성하기"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/docker/always-up-to-date-docker/04B.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/docker/always-up-to-date-docker/04B.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"04B. Dockerfile 작성하기"}],["meta",{"property":"og:description","content":"언제나 최신 Docker > 04B. Dockerfile 작성하기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pyrasis.com/assets/images/profile1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://pyrasis.com/assets/images/profile1.png"}],["meta",{"name":"twitter:image:alt","content":"04B. Dockerfile 작성하기"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"pyrasis.com"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:published_time","content":"2022-10-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04B. Dockerfile 작성하기\\",\\"image\\":[\\"https://pyrasis.com/assets/images/profile1.png\\"],\\"datePublished\\":\\"2022-10-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"date":"2022-10-03T00:00:00.000Z","isOriginal":false,"cover":"https://pyrasis.com/assets/images/profile1.png"},"headers":[],"git":{"createdTime":1716977950000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":0.85,"words":254},"filePathRelative":"docker/always-up-to-date-docker/04B.md","localizedDate":"2022년 10월 3일","excerpt":"\\n"}');export{H as comp,J as data};
