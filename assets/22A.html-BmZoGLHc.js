import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,t as p,b as e,n as a,g as n,e as l,r as c,o as u}from"./app-U_bew1in.js";const d={},m={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),v=t("hr",null,null,-1),k=l(`<p>앞서 설명한대로 CloudFormation 템플릿은 JSON 형태로 작성합니다. 다음은 CloudFormation 템플릿의 가장 기본적인 형태입니다.</p><ul><li><code>Description</code>: 템플릿의 설명입니다.</li><li><code>Parameters</code>: 템플릿으로 스택을 생성할 때 사용자가 입력할 파라미터 목록입니다. 숫자와 문자열 형식을 사용할 수 있습니다.</li><li><code>Resources</code>: AWS 리소스 종류와 옵션, AWS 리소스간의 관계를 정의합니다.</li><li><code>Outputs</code>: 스택을 생성한 뒤 출력할 값입니다.</li><li><code>AWSTemplateFormatVersion</code>: 현재 템플릿 구조의 버전입니다. 2014년 4월 기준으로 2010-09-09가 최신 버전입니다. 이 버전이 맞지 않으면 템플릿으로 스택을 만들 수 없으므로 그대로 사용합니다.</li></ul><blockquote><p>CloudFormation 기본 템플릿</p></blockquote><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;Description&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;A text description for the template usage&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;Parameters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// A set of inputs used to customize the template per deployment</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;Resources&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// The set of AWS resources and relationships between them</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;Outputs&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// A set of values to be made visible to the stack creator</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;AWSTemplateFormatVersion&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2010-09-09&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,5);function b(o,y){const s=c("VPCard");return u(),r("div",null,[t("h1",m,[t("a",h,[t("span",null,p(o.$frontmatter.title)+" 관련",1)])]),e(s,a(n({title:"목차",desc:"아마존 웹 서비스를 다루는 기술",link:"/aws/art-of-aws/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),g,v,e(s,a(n({title:"22장 - 1. CloudFormation 템플릿 기본 구조",desc:"아마존 웹 서비스를 다루는 기술",link:"https://pyrasis.com/book/TheArtOfAmazonWebServices/Chapter22/01",logo:"https://pyrasis.com/favicon.ico",background:"rgba(31,41,55,0.2)"})),null,16),k])}const A=i(d,[["render",b],["__file","22A.html.vue"]]),C=JSON.parse('{"path":"/aws/art-of-aws/22A.html","title":"22A. CloudFormation 템플릿 기본 구조","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"22A. CloudFormation 템플릿 기본 구조","description":"아마존 웹 서비스를 다루는 기술 > 22A. CloudFormation 템플릿 기본 구조","category":["AWS"],"tag":["crashcourse","pyrasis","aws","amazon-web-services"],"head":[[{"meta":null},{"property":"og:title","content":"아마존 웹 서비스를 다루는 기술 > 22A. CloudFormation 템플릿 기본 구조"},{"property":"og:description","content":"22A. CloudFormation 템플릿 기본 구조"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/aws/art-of-aws/22A.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/aws/art-of-aws/22A.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"22A. CloudFormation 템플릿 기본 구조"}],["meta",{"property":"og:description","content":"아마존 웹 서비스를 다루는 기술 > 22A. CloudFormation 템플릿 기본 구조"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"pyrasis"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"amazon-web-services"}],["meta",{"property":"article:published_time","content":"2014-09-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"22A. CloudFormation 템플릿 기본 구조\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2014-09-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"date":"2014-09-30T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"createdTime":1712541541000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":0.54,"words":161},"filePathRelative":"aws/art-of-aws/22A.md","localizedDate":"2014년 9월 30일","excerpt":"\\n"}');export{A as comp,C as data};
