import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,t as d,b as a,w as p,n as m,g as v,d as s,e as o,r as c,o as g}from"./app-U_bew1in.js";const b={},h={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},_={class:"table-of-contents"},y=n("hr",null,null,-1),w=o('<hr><h2 id="_01-인텔리제이-사용하기" tabindex="-1"><a class="header-anchor" href="#_01-인텔리제이-사용하기"><span>01. 인텔리제이 사용하기</span></a></h2><p>STS 대신 인텔리제이 커뮤니티 에디션을 사용하려면 다음의 안내에 따라 인텔리제이를 설치하고 사용하자.</p><h3 id="spring-initializr" tabindex="-1"><a class="header-anchor" href="#spring-initializr"><span>Spring Initializr</span></a></h3><p>인텔리제이를 설치하기 전에 스프링부트 개발을 도와주는 Spring Initializr를 사용해 보자. 곧 우리가 설치할 인텔리제이 무료버전인 CE(Comunity Edition)는 스프링 도구 지원이 안되지만 Spring Initializr를 사용하면 스프링부트 개발을 쉽게 시작할 수 있다. Spring Initializr를 통해 스프링부트 프로젝트를 설정하여 다운로드할수 있다.</p><p>다음 URL에 접속하자.</p><blockquote><p><a href="https://start.spring.io" target="_blank" rel="noopener noreferrer">🌐https://start.spring.io</a></p></blockquote><figure><img src="https://wikidocs.net/images/page/164891/C_A-01_3.png" alt="접속하면 다음과 같은 화면이 나타난다." tabindex="0" loading="lazy"><figcaption>접속하면 다음과 같은 화면이 나타난다.</figcaption></figure><p>위 화면에서 빨간 색 박스와 동일하게 다음과 같이 설정한다.</p><ul><li><strong>Project</strong>: Gradle Project</li><li><strong>Language</strong>: Java</li><li><strong>Sprint Boot</strong>: 2.6.6 (SNAPSHOT 또는 M2, M3 가 붙지 않은 최신 버전을 선택한다.)</li><li><strong>Project Meta Data</strong><ul><li><strong>Group</strong>: <code>com.mysite</code></li><li><strong>Artifact</strong>: <code>sbb</code></li><li><strong>Name</strong>: <code>sbb</code></li><li><strong>Description</strong>: My project for Sprint Boot</li><li><strong>Package name</strong> : <code>com.mysite.sbb</code></li><li><strong>Packaging</strong>: Jar</li><li><strong>Java</strong>: 11</li></ul></li></ul>',10),q=n("code",null,'["ADD DEPENDENCIES"]',-1),j=n("img",{src:"https://wikidocs.net/images/page/164891/C_A-01_4.png",alt:'<FontIcon icon="iconfont icon-select"/>을 선택하자. 그러면 다음과 같이 "Spring Web"이 추가된다.',tabindex:"0",loading:"lazy"},null,-1),x=n("code",null,'["Spring Web"]',-1),S=n("img",{src:"https://wikidocs.net/images/page/164891/C_A-01_5.png",alt:'마지막으로 <FontIcon icon="iconfont icon-select"/> 버튼을 누른다.',tabindex:"0",loading:"lazy"},null,-1),C=n("code",null,'["GENERATE"]',-1),A=n("code",null,"sbb.zip",-1),P=n("code",null,"sbb.zip",-1),I=n("code",null,"C:/Users/<사용자명>/projects",-1),R=n("code",null,"/Users/<사용자명>/projects",-1),E=n("code",null,"sbb",-1),z=n("code",null,"sbb",-1),O=n("code",null,'["Open"]',-1),D=n("h3",{id:"인텔리제이-설치",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#인텔리제이-설치"},[n("span",null,"인텔리제이 설치")])],-1),M=n("p",null,"다음의 URL에서 인텔리제이를 다운로드 하자.",-1),F=n("ul",null,[n("li",null,[n("a",{href:"https://www.jetbrains.com/ko-kr/idea/download/",target:"_blank",rel:"noopener noreferrer"},"https://www.jetbrains.com/ko-kr/idea/download/")])],-1),T=n("p",null,"위 URL에 접속하면 Ultimate와 Community 두 가지 버전이 있는데 무료인 Community 버전을 다운로드하여 설치하자.",-1),U=n("p",null,"설치 후 인텔리제이를 실행하자.",-1),Q=n("figure",null,[n("img",{src:"https://wikidocs.net/images/page/164891/C_A-01_2.png",alt:"인텔리제이를 처음 실행하면 다음과 같은 창이 나올 것이다.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"인텔리제이를 처음 실행하면 다음과 같은 창이 나올 것이다.")],-1),B=n("code",null,'["Open"]',-1),G=n("code",null,"sbb",-1),L=n("figure",null,[n("img",{src:"https://wikidocs.net/images/page/164891/O_A-01_6.png",alt:"그러면 다음과 같이 sbb 프로젝트가 인텔리제이에서 시작된다.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"그러면 다음과 같이 sbb 프로젝트가 인텔리제이에서 시작된다.")],-1),N=n("p",null,"프로젝트 시작후에는 Gradle 작업(라이브러리 다운로드 등)으로 인한 시간이 1~2분 정도 소요된다.",-1),$={class:"hint-container info"},H=n("p",{class:"hint-container-title"},"SDK 오류",-1),W=n("code",null,"com/mysite/sbb/",-1),V=n("code",null,"SbbApplication.java",-1),J=n("h3",{id:"롬복-플러그인-설치",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#롬복-플러그인-설치"},[n("span",null,"롬복 플러그인 설치")])],-1),K=n("code",null,"[Preferences -> Plugins]",-1),X=o('<figure><img src="https://wikidocs.net/images/page/164891/O_A-01_7.png" alt="롬복이 디폴트로 설치되어 있으면 enable 되었는지만 확인하자." tabindex="0" loading="lazy"><figcaption>롬복이 디폴트로 설치되어 있으면 enable 되었는지만 확인하자.</figcaption></figure><h3 id="auto-reload-설정" tabindex="-1"><a class="header-anchor" href="#auto-reload-설정"><span>Auto Reload 설정</span></a></h3><p>인텔리제이에서 자바 파일을 수정하거나 템플릿을 수정할 경우 수작업 없이 자동으로 변경 사항을 적용하려면 다음과 같이 설정해야 한다.</p><h4 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h4>',4),Z=n("img",{src:"https://wikidocs.net/images/page/164891/C_A-01_13.png",alt:'자바 파일을 변경한 후 자동 적용되게 하려면 다음처럼 <FontIcon icon="iconfont icon-select"/> 에서 다음 항목을 활성화해야 한다.',tabindex:"0",loading:"lazy"},null,-1),Y=n("code",null,"[Preferences -> Build, Execution, Deployment -> Compiler]",-1),nn=n("img",{src:"https://wikidocs.net/images/page/164891/C_A-01_1.png",alt:'그리고 <FontIcon icon="iconfont icon-select"/> 에서 다음 항목을 활성화해야 한다.',tabindex:"0",loading:"lazy"},null,-1),sn=n("code",null,"[Preferences -> Advanced Settings]",-1),an=n("blockquote",null,[n("p",null,"1-05장의 Spring Boot Devtools를 설치한 후에 적용하자.")],-1),tn=n("h4",{id:"타임리프-thymeleaf",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#타임리프-thymeleaf"},[n("span",null,"타임리프(thymeleaf)")])],-1),pn=n("p",null,[s("템플릿 파일을 변경한 후 자동 적용되게 하려면 "),n("code",null,"application.properties"),s(" 파일에 다음과 같은 내용을 추가하자.")],-1),en=n("code",null,"sbb/src/main/resources/",-1),on=n("code",null,"application.properties",-1),cn=o(`<div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">//</span> <span class="token value attr-value">(... 생략 ...)</span></span>
<span class="line"><span class="token key attr-name">spring.thymeleaf.cache</span><span class="token punctuation">=</span><span class="token value attr-value">false</span></span>
<span class="line"><span class="token key attr-name">spring.thymeleaf.prefix</span><span class="token punctuation">=</span><span class="token value attr-value">file:src/main/resources/templates/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ln=n("code",null,"jar",-1),un=n("code",null,"spring.thymeleaf.prefix",-1),kn=n("h3",{id:"unused-경고-메시지-끄기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#unused-경고-메시지-끄기"},[n("span",null,"Unused 경고 메시지 끄기")])],-1),rn=n("p",null,"인텔리제이 커뮤니티 버전은 스프링을 지원하지 않기 때문에 스프링의 컨트롤러와 URL 매핑 메서드들에서 Unused 경고 메시지가 나타난다. 하지만 무시할수 없을 만큼 많은 경고 메시지가 나오기 때문에 이 항목은 설정에서 끄는게 좋다.",-1),dn=n("img",{src:"https://wikidocs.net/images/page/164891/C_A-01_8.png",alt:'다음처럼 <FontIcon icon="iconfont icon-select"/> 메뉴에서 "Java -> Declaration redundancy" 항목 중 <FontIcon icon="iconfont icon-select"/> 항목을 체크해제하자.',tabindex:"0",loading:"lazy"},null,-1),mn=n("code",null,"[Preferences -> Editor -> Inspections]",-1),vn=n("code",null,'["Unused declaration"]',-1),gn=n("h3",{id:"gradle",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gradle"},[n("span",null,"Gradle")])],-1),bn=n("p",null,[s("그레이들로 로컬 서버를 실행하는 방법과 배포 파일("),n("code",null,"jar"),s(")을 생성하는 방법에 대해서 알아보자.")],-1),hn=n("h4",{id:"로컬-서버-실행하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#로컬-서버-실행하기"},[n("span",null,"로컬 서버 실행하기")])],-1),fn=n("img",{src:"https://wikidocs.net/images/page/164891/O_A-01_9.png",alt:'다음과 같이 그레이들 창에서 <FontIcon icon="iconfont icon-select"/> 을 선택하자.',tabindex:"0",loading:"lazy"},null,-1),_n=n("code",null,"[sbb -> Tasks -> application -> bootRun]",-1),yn=n("img",{src:"https://wikidocs.net/images/page/164891/O_A-01_10.png",alt:'그리고 우측 마우스 버튼을 눌러 <FontIcon icon="iconfont icon-select"/>을 선택한다.',tabindex:"0",loading:"lazy"},null,-1),wn=n("code",null,"[Run sbb bootRun]",-1),qn=n("figure",null,[n("img",{src:"https://wikidocs.net/images/page/164891/O_A-01_11.png",alt:"그러면 다음과 같이 로컬서버가 실행되는 모습을 인텔리제이 하단에서 확인할수 있다.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"그러면 다음과 같이 로컬서버가 실행되는 모습을 인텔리제이 하단에서 확인할수 있다.")],-1),jn=n("h4",{id:"배포파일-생성하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#배포파일-생성하기"},[n("span",null,"배포파일 생성하기")])],-1),xn=n("img",{src:"https://wikidocs.net/images/page/164891/O_A-01_12.png",alt:'다음과 같이 그레이들 창에서 <FontIcon icon="iconfont icon-select"/> 을 선택하자.',tabindex:"0",loading:"lazy"},null,-1),Sn=n("code",null,"[sbb -> Tasks -> build -> bootJar]",-1),Cn=n("code",null,"Run sbb [bootJar]",-1),An=n("code",null,"build/libs/",-1),Pn=n("code",null,"sbb-0.0.1-SNAPSHOT.jar",-1),In=n("hr",null,null,-1),Rn=n("h2",{id:"_02-aws-라이트세일-사용-취소",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_02-aws-라이트세일-사용-취소"},[n("span",null,"02. AWS 라이트세일 사용 취소")])],-1),En=n("p",null,"AWS 서비스를 더 이상 운영하지 않는다면 인스턴스와 고정IP 그리고 데이터베이스를 삭제하여 의도하지 않은 요금 발생을 막자.",-1),zn=n("h3",{id:"인스턴스와-고정-ip-삭제",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#인스턴스와-고정-ip-삭제"},[n("span",null,"인스턴스와 고정 IP 삭제")])],-1),On=n("p",null,"AWS 라이트세일 인스턴스는 3달간 무료로 사용할 수 있고 이후엔 비용이 발생한다. 이를 원치 않는다면 인스턴스와 고정 IP를 삭제해야 한다.",-1),Dn=n("img",{src:"https://wikidocs.net/images/page/163575/C_001.png",alt:'인스턴스는 다음처럼 AWS 라이트세일 홈페이지 화면의 <FontIcon icon="iconfont icon-select"/> 탭에서 삭제할 수 있다',tabindex:"0",loading:"lazy"},null,-1),Mn=n("code",null,"[인스턴스]",-1),Fn=n("img",{src:"https://wikidocs.net/images/page/163575/C_002.png",alt:'고정 IP는 다음처럼 <FontIcon icon="iconfont icon-select"/> 탭에서 삭제할 수 있다.',tabindex:"0",loading:"lazy"},null,-1),Tn=n("code",null,"[네트워킹]",-1),Un=n("h3",{id:"데이터베이스-삭제",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#데이터베이스-삭제"},[n("span",null,"데이터베이스 삭제")])],-1),Qn=n("img",{src:"https://wikidocs.net/images/page/163575/C_003.png",alt:'데이터베이스는 다음처럼 <FontIcon icon="iconfont icon-select"/> 탭에서 삭제할 수 있다.',tabindex:"0",loading:"lazy"},null,-1),Bn=n("code",null,"[데이터베이스]",-1),Gn=o('<hr><h2 id="_03-스프링부트-2-x-버전-안내" tabindex="-1"><a class="header-anchor" href="#_03-스프링부트-2-x-버전-안내"><span>03. 스프링부트 2.x 버전 안내</span></a></h2><p>이 책은 스프링부트 3.x 버전을 기준으로 한다. 만약 스프링부트 2.x 버전으로 이 책의 내용을 공부하고 싶다면 다음의 안내에 따라 스프링부트 2.x 버전을 사용할수 있다.</p><h3 id="jakarta-패키지-변경" tabindex="-1"><a class="header-anchor" href="#jakarta-패키지-변경"><span><code>jakarta</code> 패키지 변경</span></a></h3><p>이 책에 사용한 <code>import jakarta.*</code> 패키지를 모두 <code>import javax.*</code> 패키지를 사용하도록 변경해야 한다. 즉, <code>jakarta</code>로 되어 있는 <code>import</code> 문은 전부 <code>javax</code>로 교체하여 사용해야 한다.</p>',5),Ln={id:"securityconfig-java",tabindex:"-1"},Nn={class:"header-anchor",href:"#securityconfig-java"},$n=n("code",null,"SecurityConfig.java",-1),Hn=n("code",null,"SecurityCofnig.java",-1),Wn=n("code",null,"antMatchers",-1),Vn=n("code",null,"ignoringAntMatchers",-1),Jn=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>authentication<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">AuthenticationManagerBuilder</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>method<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableGlobalMethodSecurity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">HttpSecurity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableWebSecurity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">WebSecurityConfigurerAdapter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>bcrypt<span class="token punctuation">.</span></span><span class="token class-name">BCryptPasswordEncoder</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>password<span class="token punctuation">.</span></span><span class="token class-name">PasswordEncoder</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>web<span class="token punctuation">.</span>header<span class="token punctuation">.</span>writers<span class="token punctuation">.</span>frameoptions<span class="token punctuation">.</span></span><span class="token class-name">XFrameOptionsHeaderWriter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>web<span class="token punctuation">.</span>util<span class="token punctuation">.</span>matcher<span class="token punctuation">.</span></span><span class="token class-name">AntPathRequestMatcher</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">UserSecurityService</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@EnableWebSecurity</span></span>
<span class="line"><span class="token annotation punctuation">@EnableGlobalMethodSecurity</span><span class="token punctuation">(</span>prePostEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserSecurityService</span> userSecurityService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoringAntMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/h2-console/**&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">addHeaderWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XFrameOptionsHeaderWriter</span><span class="token punctuation">(</span></span>
<span class="line">                        <span class="token class-name">XFrameOptionsHeaderWriter<span class="token punctuation">.</span>XFrameOptionsMode</span><span class="token punctuation">.</span><span class="token constant">SAMEORIGIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">&quot;/user/login&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">defaultSuccessUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">logoutRequestMatcher</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AntPathRequestMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/user/logout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">logoutSuccessUrl</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">invalidateHttpSession</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">PasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span> auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        auth<span class="token punctuation">.</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span>userSecurityService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="스프링부트-2-x-깃허브-주소" tabindex="-1"><a class="header-anchor" href="#스프링부트-2-x-깃허브-주소"><span>스프링부트 2.x 깃허브 주소</span></a></h3><p>이 책은 스프링부트 2.x 버전부터 작성된 책이다. 스프링부트 2.x 버전으로 작성된 소스코드는 다음의 깃허브 주소에서 확인할 수 있다.</p>`,3),Kn={href:"https://github.com/pahkey/sbb",target:"_blank",rel:"noopener noreferrer"},Xn=n("code",null,"pahkey/sbb",-1),Zn=o('<hr><h2 id="_04-댓글-삭제예정" tabindex="-1"><a class="header-anchor" href="#_04-댓글-삭제예정"><span>04. 댓글 (삭제예정)</span></a></h2><p>::: warn 주의</p><p>아래 내용은 &quot;점프 투 스프링부트&quot; 예전 버전의 내용이므로 현재까지 진행한 소스코드에 적용할때는 주의해야 함 질문 또는 답변에 대하여 짤막하게 답해서 올리는 글을 댓글이라고 한다. 이번에는 질문과 답변에 댓글(<code>Comment</code>) 기능을 추가해 보자.</p><p>:::</p><h3 id="댓글-도메인" tabindex="-1"><a class="header-anchor" href="#댓글-도메인"><span>댓글 도메인</span></a></h3><p>댓글 역시 질문과 답변처럼 하나의 도메인으로 취급하자.</p><figure><img src="https://wikidocs.net/images/page/162570/3-11_1.png" alt="먼저 다음처럼  패키지를 생성하자." tabindex="0" loading="lazy"><figcaption>먼저 다음처럼 <code>com.mysite.sbb.comment</code> 패키지를 생성하자.</figcaption></figure><h3 id="댓글-모델" tabindex="-1"><a class="header-anchor" href="#댓글-모델"><span>댓글 모델</span></a></h3><h4 id="comment-모델" tabindex="-1"><a class="header-anchor" href="#comment-모델"><span><code>Comment</code> 모델</span></a></h4><p>댓글 작성을 위해서 가장 먼저 준비해야 할 것은 댓글 모델이다.</p>',11),Yn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/comment/",-1),ns=n("code",null,"Comment.java",-1),ss=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Column</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GeneratedValue</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GenerationType</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Id</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">ManyToOne</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>answer<span class="token punctuation">.</span></span><span class="token class-name">Answer</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question<span class="token punctuation">.</span></span><span class="token class-name">Question</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Setter</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Entity</span></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Comment</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Id</span></span>
<span class="line">    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">IDENTITY</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ManyToOne</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SiteUser</span> author<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>columnDefinition <span class="token operator">=</span> <span class="token string">&quot;TEXT&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createDate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> modifyDate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ManyToOne</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Question</span> question<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ManyToOne</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Answer</span> answer<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Comment</code> 모델의 속성은 다음과 같다.</p><table><thead><tr><th style="text-align:left;">필드</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;">댓글의 고유번호</td></tr><tr><td style="text-align:left;"><code>author</code></td><td style="text-align:left;">댓글 작성자</td></tr><tr><td style="text-align:left;"><code>content</code></td><td style="text-align:left;">댓글 내용</td></tr><tr><td style="text-align:left;"><code>createDate</code></td><td style="text-align:left;">댓글 작성일시</td></tr><tr><td style="text-align:left;"><code>modifyDate</code></td><td style="text-align:left;">댓글 수정일시</td></tr><tr><td style="text-align:left;"><code>question</code></td><td style="text-align:left;">이 댓글이 달린 질문</td></tr><tr><td style="text-align:left;"><code>answer</code></td><td style="text-align:left;">이 댓글이 달린 답변</td></tr></tbody></table><p>만약 질문에 댓글이 작성될 경우에는 <code>question</code>에 값이 저장되고 답변에 댓글이 작성될 경우에는 <code>answer</code>에 값이 저장될 것이다. 한 사람이 여러개의 댓글을 달수 있고 질문 또는 답변 한개에 여러개의 댓글을 달수 있기 때문에 <code>author</code>, <code>question</code>, <code>answer</code> 속성에는 <code>@ManyToOne</code> 애너테이션을 설정해야 한다.</p><figure><img src="https://wikidocs.net/images/page/162570/3-11_2.png" alt="위와 같이 댓글 모델을 작성하면 다음과 같은 테이블이 생성될 것이다." tabindex="0" loading="lazy"><figcaption>위와 같이 댓글 모델을 작성하면 다음과 같은 테이블이 생성될 것이다.</figcaption></figure><p>그리고 댓글을 수정하거나 삭제한 후에 질문 상세 페이지로 리다이렉트 하기 위해서는 댓글을 통해 질문의 <code>id</code>를 알아내는 <code>getQuestionId</code> 메서드가 필요하다. 이후 진행할 댓글 수정, 삭제에서 필요한 기능이지만 편의를 위해 여기서 먼저 만들고 가도록 하자.</p><p>다음과 같이 <code>Comment</code> 모델에 <code>getQuestionId</code> 메서드를 추가하자.</p>`,7),as=n("code",null,"/sbb/src/main/java/com/mysite/sbb/comment/",-1),ts=n("code",null,"Comment.java",-1),ps=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Entity</span></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Comment</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getQuestionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">Integer</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>question <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>question<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>answer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> result<span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getQuestionId</code> 메서드는 댓글을 통해 질문의 id 값을 리턴하는 메서드로 <code>question</code> 속성이 <code>null</code>이 아닌 경우는 질문에 달린 댓글이므로 <code>this.question.getId()</code> 값을 리턴하고 답변에 달린 댓글인 경우 <code>this.answer.getQuestion().getId()</code> 값을 리턴하다.</p><h4 id="question-모델" tabindex="-1"><a class="header-anchor" href="#question-모델"><span><code>Question</code> 모델</span></a></h4><p>그리고 질문에서 댓글을 참조하기 위해 다음과 같이 질문 모델을 수정하자.</p>`,4),es=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question",-1),os=n("code",null,"Question.java",-1),cs=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment<span class="token punctuation">.</span></span><span class="token class-name">Comment</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token annotation punctuation">@Entity</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Question</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;question&quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> commentList<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>질문에 작성된 댓글 리스트를 참조하기 위해 <code>commentList</code> 속성을 <code>@OneToMany</code> 애너테이션으로 생성했다. <code>Comment</code> 모델에서 <code>Question</code>을 연결하기 위한 속성명이 <code>question</code>이므로 <code>mappedBy</code>의 값으로 &quot;question&quot;이 전달되어야 한다.</p><h4 id="answer-모델" tabindex="-1"><a class="header-anchor" href="#answer-모델"><span><code>Answer</code> 모델</span></a></h4><p>마찬가지로 답변에서 댓글을 참조하기 위해 다음과 같이 답변 모델을 수정하자.</p>`,4),ls=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/ ",-1),is=n("code",null,"Answer.java",-1),us=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>answer</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment<span class="token punctuation">.</span></span><span class="token class-name">Comment</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Entity</span></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Answer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>mappedBy <span class="token operator">=</span> <span class="token string">&quot;answer&quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> commentList<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>답변에 작성된 댓글 리스트를 참조하기 위해 <code>commentList</code> 속성을 <code>@OneToMany</code> 애너테이션으로 생성했다.</p><h3 id="질문-댓글" tabindex="-1"><a class="header-anchor" href="#질문-댓글"><span>질문 댓글</span></a></h3><p>질문에 댓글을 등록할 수 있는 기능을 추가해 보자. 이제 스프링부트에 새 기능을 추가하는 패턴에 익숙해졌을 것이다. 질문 댓글은 질문 작성과 거의 차이가 없으므로 코드작성을 빠르게(한번에) 진행해 보자.</p><h4 id="질문-댓글-링크" tabindex="-1"><a class="header-anchor" href="#질문-댓글-링크"><span>질문 댓글 링크</span></a></h4><p>질문 상세 템플릿을 다음과 같이 수정하자.</p>`,6),ks=n("code",null," C:\\projects\\mysite\\templates\\pybo",-1),rs=n("code",null,"question_detail.html",-1),ds=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border-bottom py-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.subject}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.author != null and #authentication.getPrincipal().getUsername() == question.author.username}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/modify/\${question.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>수정<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span></span>
<span class="line">                    <span class="token attr-name"><span class="token namespace">th:</span>data-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/delete/\${question.id}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>삭제<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token comment">&lt;!-- 질문 댓글 Start --&gt;</span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${not #lists.isEmpty(question.commentList)}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>comment,index : \${question.commentList}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>comment py-2 text-muted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">white-space</span><span class="token punctuation">:</span> pre-line<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${comment.content}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${comment.modifyDate != null}<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                        <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>| - \${comment.author.username}, \${#temporals.format(comment.createDate, &#39;yyyy-MM-dd HH:mm&#39;)} (수정: \${#temporals.format(comment.modifyDate, &#39;yyyy-MM-dd HH:mm&#39;)})|<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${comment.modifyDate == null}<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                        <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>| - \${comment.author.username}, \${#temporals.format(comment.createDate, &#39;yyyy-MM-dd HH:mm&#39;)}|<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                        <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${#authentication.getPrincipal().getUsername() == comment.author.username}<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                        <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/comment/modify/\${comment.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>수정<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>,</span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                        <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${#authentication.getPrincipal().getUsername() == comment.author.username}<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                        <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small delete<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/comment/delete/\${comment.id}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>삭제<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/comment/create/question/\${question.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">&gt;</span></span>댓글 추가 ..<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token comment">&lt;!-- 질문 댓글 End --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border-bottom my-3 py-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>|\${#lists.size(question.answerList)}개의 답변이 있습니다.|<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>내용이 많지만 어렵지 않다. 찬찬히 살펴보자.</p><p>질문에 등록된 댓글 전부를 보여 주기위해 <code>question.commentList</code> 루프를 돌며 댓글 내용과 글쓴이, 작성일시, 수정일시를 출력했다. 또 댓글 글쓴이와 로그인한 사용자가 같으면 &#39;수정&#39;, &#39;삭제&#39; 링크가 보이도록 했다. 그리고 루프 바깥쪽에는 댓글을 작성할 수 있는 &#39;댓글 추가 ..&#39; 링크도 추가했다.</p>`,3),ms=n("code",null,"comment",-1),vs=n("code",null,"style.css",-1),gs=n("code",null,"comment",-1),bs=n("code",null,"/sbb/src/main/resources/static",-1),hs=n("code",null,"style.css",-1),fs=o(`<div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.comment</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">border-top</span><span class="token punctuation">:</span>dotted 1px #ddd<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">font-size</span><span class="token punctuation">:</span>0.7em<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>comment</code> 클래스는 댓글 각각의 상단에 점선을 추가하고 글꼴 크기를 <code>0.7em</code>으로 설정하는 스타일이다.</p>`,2),_s={id:"commentrepository",tabindex:"-1"},ys={class:"header-anchor",href:"#commentrepository"},ws=n("code",null,"CommentRepository",-1),qs=n("p",null,[s("댓글 데이터를 처리하기 위해 다음과 같이 "),n("code",null,"Comment"),s(" 리포지터리를 작성하자.")],-1),js=n("code",null,"/sbb/src/main/java/com/mysite/sbb/comment/",-1),xs=n("code",null,"CommentRepository.java",-1),Ss=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CommentRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Cs={id:"commentservice",tabindex:"-1"},As={class:"header-anchor",href:"#commentservice"},Ps=n("code",null,"CommentService",-1),Is=n("p",null,"그리고 리포지터리를 사용하여 댓글을 조회하고 생성, 수정, 삭제하는 서비스를 다음과 같이 만들자.",-1),Rs=n("code",null,"/sbb/src/main/java/com/mysite/sbb/comment/",-1),Es=n("code",null,"CommentService.java",-1),zs=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question<span class="token punctuation">.</span></span><span class="token class-name">Question</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">CommentRepository</span> commentRepository<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Comment</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Question</span> question<span class="token punctuation">,</span> <span class="token class-name">SiteUser</span> author<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Comment</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">setCreateDate</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">setQuestion</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> c<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> <span class="token function">getComment</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Comment</span> <span class="token function">modify</span><span class="token punctuation">(</span><span class="token class-name">Comment</span> c<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">setModifyDate</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> c<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">Comment</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>commentRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>CommentService</code> 클래스에 생성(<code>create</code>), 조회(<code>getComment</code>), 수정(<code>modify</code>), 삭제(<code>delete</code>) 메서드를 생성했다.</p>`,2),Os={id:"commentform",tabindex:"-1"},Ds={class:"header-anchor",href:"#commentform"},Ms=n("code",null,"CommentForm",-1),Fs=n("p",null,[s("그리고 댓글 작성시 필요한 "),n("code",null,"CommentForm"),s("을 다음과 같이 작성하자.")],-1),Ts=n("code",null,"/sbb/src/main/java/com/mysite/sbb/comment/",-1),Us=n("code",null,"CommentForm.java",-1),Qs=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotEmpty</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Setter</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentForm</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;내용은 필수항목입니다.&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>CommentForm</code>에 필요한 속성은 &quot;내용(<code>content</code>)&quot; 하나 뿐이다.</p>`,2),Bs={id:"commentcontroller",tabindex:"-1"},Gs={class:"header-anchor",href:"#commentcontroller"},Ls=n("code",null,"CommentController",-1),Ns=n("p",null,"그리고 질문 댓글을 작성, 수정, 삭제하기 위한 댓글 컨트롤러를 다음과 같이 작성하자.",-1),$s=n("code",null,"/sbb/src/main/java/com/mysite/sbb/comment/",-1),Hs=n("code",null,"CommentController.java",-1),Ws=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>comment</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Principal</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Valid</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpStatus</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>access<span class="token punctuation">.</span>prepost<span class="token punctuation">.</span></span><span class="token class-name">PreAuthorize</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">BindingResult</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ResponseStatusException</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question<span class="token punctuation">.</span></span><span class="token class-name">Question</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question<span class="token punctuation">.</span></span><span class="token class-name">QuestionService</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Controller</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/comment&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">CommentService</span> commentService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">QuestionService</span> questionService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/create/question/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createQuestionComment</span><span class="token punctuation">(</span><span class="token class-name">CommentForm</span> commentForm<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;comment_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/create/question/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createQuestionComment</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@Valid</span> <span class="token class-name">CommentForm</span> commentForm<span class="token punctuation">,</span></span>
<span class="line">            <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> question <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SiteUser</span><span class="token punctuation">&gt;</span></span> user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token string">&quot;comment_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token class-name">Comment</span> c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>question<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> commentForm<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">getQuestionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">,</span> <span class="token string">&quot;entity not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/modify/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">modifyComment</span><span class="token punctuation">(</span><span class="token class-name">CommentForm</span> commentForm<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> comment <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentService<span class="token punctuation">.</span><span class="token function">getComment</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>comment<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Comment</span> c <span class="token operator">=</span> comment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">,</span> <span class="token string">&quot;수정권한이 없습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            commentForm<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;comment_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/modify/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">modifyComment</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">CommentForm</span> commentForm<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">,</span></span>
<span class="line">            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;comment_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> comment <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentService<span class="token punctuation">.</span><span class="token function">getComment</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>comment<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Comment</span> c <span class="token operator">=</span> comment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">,</span> <span class="token string">&quot;수정권한이 없습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            c <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentService<span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> commentForm<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">getQuestionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">,</span> <span class="token string">&quot;entity not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/delete/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deleteComment</span><span class="token punctuation">(</span><span class="token class-name">Principal</span> principal<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> comment <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>commentService<span class="token punctuation">.</span><span class="token function">getComment</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>comment<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Comment</span> c <span class="token operator">=</span> comment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">,</span> <span class="token string">&quot;삭제권한이 없습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>commentService<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">getQuestionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">NOT_FOUND</span><span class="token punctuation">,</span> <span class="token string">&quot;entity not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Vs=n("code",null,"comment_form.html",-1),Js=n("code",null,"c.getQuestionId()",-1),Ks={id:"comment-form-html",tabindex:"-1"},Xs={class:"header-anchor",href:"#comment-form-html"},Zs=n("code",null,"comment_form.html",-1),Ys=n("p",null,[s("그리고 댓글 작성과 수정시 필요한 "),n("code",null,"comment_form"),s(" 템플릿을 다음과 같이 작성하자.")],-1),na=n("code",null,"/sbb/src/main/resources/templates/",-1),sa=n("code",null,"comment_form.html",-1),aa=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-3 border-bottom pb-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>댓글 등록<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${commentForm}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${_csrf.parameterName}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${_csrf.token}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form_errors :: formErrorsFragment<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>내용<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{content}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>저장하기<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>질문, 답변과 마찬가지로 댓글 등록과 수정에 함께 사용하기 위해 <code>action</code> 속성을 사용하지 않고 CSRF 항목도 수동으로 추가했다.</p><h4 id="질문-댓글-기능-확인" tabindex="-1"><a class="header-anchor" href="#질문-댓글-기능-확인"><span>질문 댓글 기능 확인</span></a></h4>`,3),ta=n("img",{src:"https://wikidocs.net/images/page/162570/3-11_3.png",alt:'이와 같이 수정 후 질문 상세 화면에서 <FontIcon icon="iconfont icon-select"/>를 눌러 댓글을 추가해 보고 수정과 삭제 기능도 잘 작동하는지 확인해 보자.',tabindex:"0",loading:"lazy"},null,-1),pa=n("code",null,"<댓글 추가 ..>",-1),ea=n("h3",{id:"답변-댓글",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#답변-댓글"},[n("span",null,"답변 댓글")])],-1),oa=n("p",null,"질문 댓글과 동일한 방법으로 구현 가능하므로 생략한다.",-1),ca=n("hr",null,null,-1);function la(l,ia){const e=c("router-link"),t=c("FontIcon"),i=c("VPCard"),u=c("RouteLink");return g(),r("div",null,[n("h1",h,[n("a",f,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),n("nav",_,[n("ul",null,[n("li",null,[a(e,{to:"#_01-인텔리제이-사용하기"},{default:p(()=>[s("01. 인텔리제이 사용하기")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#spring-initializr"},{default:p(()=>[s("Spring Initializr")]),_:1})]),n("li",null,[a(e,{to:"#인텔리제이-설치"},{default:p(()=>[s("인텔리제이 설치")]),_:1})]),n("li",null,[a(e,{to:"#롬복-플러그인-설치"},{default:p(()=>[s("롬복 플러그인 설치")]),_:1})]),n("li",null,[a(e,{to:"#auto-reload-설정"},{default:p(()=>[s("Auto Reload 설정")]),_:1})]),n("li",null,[a(e,{to:"#unused-경고-메시지-끄기"},{default:p(()=>[s("Unused 경고 메시지 끄기")]),_:1})]),n("li",null,[a(e,{to:"#gradle"},{default:p(()=>[s("Gradle")]),_:1})])])]),n("li",null,[a(e,{to:"#_02-aws-라이트세일-사용-취소"},{default:p(()=>[s("02. AWS 라이트세일 사용 취소")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#인스턴스와-고정-ip-삭제"},{default:p(()=>[s("인스턴스와 고정 IP 삭제")]),_:1})]),n("li",null,[a(e,{to:"#데이터베이스-삭제"},{default:p(()=>[s("데이터베이스 삭제")]),_:1})])])]),n("li",null,[a(e,{to:"#_03-스프링부트-2-x-버전-안내"},{default:p(()=>[s("03. 스프링부트 2.x 버전 안내")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#jakarta-패키지-변경"},{default:p(()=>[s("jakarta 패키지 변경")]),_:1})]),n("li",null,[a(e,{to:"#securityconfig-java"},{default:p(()=>[a(t,{icon:"fa-brands fa-java"}),s("SecurityConfig.java")]),_:1})]),n("li",null,[a(e,{to:"#스프링부트-2-x-깃허브-주소"},{default:p(()=>[s("스프링부트 2.x 깃허브 주소")]),_:1})])])]),n("li",null,[a(e,{to:"#_04-댓글-삭제예정"},{default:p(()=>[s("04. 댓글 (삭제예정)")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#댓글-도메인"},{default:p(()=>[s("댓글 도메인")]),_:1})]),n("li",null,[a(e,{to:"#댓글-모델"},{default:p(()=>[s("댓글 모델")]),_:1})]),n("li",null,[a(e,{to:"#질문-댓글"},{default:p(()=>[s("질문 댓글")]),_:1})]),n("li",null,[a(e,{to:"#답변-댓글"},{default:p(()=>[s("답변 댓글")]),_:1})])])])])]),y,a(i,m(v({title:"A. 부록",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/163574",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),w,n("p",null,[s("위와 같이 설정하고 "),a(t,{icon:"iconfont icon-select"}),q,s(" 버튼을 누르자. 그러면 다음과 같은 팝업창이 나타난다.")]),n("figure",null,[j,n("figcaption",null,[a(t,{icon:"iconfont icon-select"}),x,s('을 선택하자. 그러면 다음과 같이 "Spring Web"이 추가된다.')])]),n("figure",null,[S,n("figcaption",null,[s("마지막으로 "),a(t,{icon:"iconfont icon-select"}),C,s(" 버튼을 누른다.")])]),n("p",null,[s("그러면 "),a(t,{icon:"fas fa-file-zipper"}),A,s(" 파일이 다운로드 된다. "),a(t,{icon:"fas fa-file-zipper"}),P,s(' 파일을 "프로젝트 홈 디렉터리"에 압축해제하자.')]),n("blockquote",null,[n("p",null,[s("프로젝트 홈 디렉터리: 윈도우는 "),a(t,{icon:"fas fa-file-lines"}),I,s(" 디렉터리를 사용하고 맥 OS라면 "),a(t,{icon:"fas fa-file-lines"}),R,s("를 사용하자.")])]),n("p",null,[s("그러면 프로젝트 홈 디렉터리 밑에 "),a(t,{icon:"fas fa-folder-open"}),E,s(" 디렉터리가 생성될 것이다. 이제 인텔리제이를 설치하고 "),a(t,{icon:"fas fa-folder-open"}),z,s(" 디렉터리를 인텔리제이에서 "),a(t,{icon:"iconfont icon-select"}),O,s(" 하여 스프링부트 프로젝트를 시작할수 있다.")]),D,M,F,T,U,Q,n("p",null,[s("."),a(t,{icon:"iconfont icon-select"}),B,s(" 버튼을 누르고 위에서 압축해제한 "),a(t,{icon:"fas fa-folder-open"}),G,s(" 디렉터리를 선택한다.")]),L,N,n("div",$,[H,n("p",null,[s("."),a(t,{icon:"fas fa-folder-open"}),W,a(t,{icon:"fa-brands fa-java"}),V,s(' 파일을 열었을 때 오류가 발생한다면 SDK가 지정되지 않은 경우이므로 에디터 창 상단에 표시되는 "SDK" 설정을 통해 설치된 자바 SDK를 지정하자.')])]),J,n("p",null,[s("다음처럼 "),a(t,{icon:"iconfont icon-select"}),K,s(" 에서 롬복(Lombok)을 검색하여 설치하자.")]),X,n("figure",null,[Z,n("figcaption",null,[s("자바 파일을 변경한 후 자동 적용되게 하려면 다음처럼 "),a(t,{icon:"iconfont icon-select"}),Y,s(" 에서 다음 항목을 활성화해야 한다.")])]),n("figure",null,[nn,n("figcaption",null,[s("그리고 "),a(t,{icon:"iconfont icon-select"}),sn,s(" 에서 다음 항목을 활성화해야 한다.")])]),an,tn,pn,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),en,a(t,{icon:"fas fa-file-lines"}),on])]),cn,n("p",null,[s("템플릿을 사용하는 "),a(u,{to:"/java/jump-to-spring-boot/02G.html"},{default:p(()=>[s("2-07장")]),_:1}),s(" 부터 필요. "),ln,s(" 배포시에는 "),un,s(" 항목을 주석처리해야 한다. (오류 보고가 있음)")]),kn,rn,n("figure",null,[dn,n("figcaption",null,[s("다음처럼 "),a(t,{icon:"iconfont icon-select"}),mn,s(' 메뉴에서 "Java -> Declaration redundancy" 항목 중 '),a(t,{icon:"iconfont icon-select"}),vn,s(" 항목을 체크해제하자.")])]),gn,bn,hn,n("figure",null,[fn,n("figcaption",null,[s("다음과 같이 그레이들 창에서 "),a(t,{icon:"iconfont icon-select"}),_n,s(" 을 선택하자.")])]),n("figure",null,[yn,n("figcaption",null,[s("그리고 우측 마우스 버튼을 눌러 "),a(t,{icon:"iconfont icon-select"}),wn,s("을 선택한다.")])]),qn,jn,n("figure",null,[xn,n("figcaption",null,[s("다음과 같이 그레이들 창에서 "),a(t,{icon:"iconfont icon-select"}),Sn,s(" 을 선택하자.")])]),n("p",null,[s("그리고 우측 마우스 버튼을 눌러 "),a(t,{icon:"iconfont icon-select"}),Cn,s("를 선택한다. 그러면 "),a(t,{icon:"fas fa-folder-open"}),An,s(" 디렉터리에 "),a(t,{icon:"fa-brands fa-java"}),Pn,s("와 같은 배포 파일이 생성된다.")]),In,Rn,En,zn,On,n("figure",null,[Dn,n("figcaption",null,[s("인스턴스는 다음처럼 AWS 라이트세일 홈페이지 화면의 "),a(t,{icon:"iconfont icon-select"}),Mn,s(" 탭에서 삭제할 수 있다")])]),n("figure",null,[Fn,n("figcaption",null,[s("고정 IP는 다음처럼 "),a(t,{icon:"iconfont icon-select"}),Tn,s(" 탭에서 삭제할 수 있다.")])]),Un,n("figure",null,[Qn,n("figcaption",null,[s("데이터베이스는 다음처럼 "),a(t,{icon:"iconfont icon-select"}),Bn,s(" 탭에서 삭제할 수 있다.")])]),Gn,n("h3",Ln,[n("a",Nn,[n("span",null,[a(t,{icon:"fa-brands fa-java"}),$n])])]),n("p",null,[s("스프링부트 2.x 버전의 스프링 시큐리티 설정은 다음의 "),a(t,{icon:"fa-brands fa-java"}),Hn,s(" 파일로 대체해야 한다. "),Wn,s(", "),Vn,s(" 등의 URL 패턴 매치하는 부분들이 변경되었다.")]),Jn,n("p",null,[n("a",Kn,[a(t,{icon:"iconfont icon-github"}),Xn])]),Zn,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),Yn,a(t,{icon:"fa-brands fa-java"}),ns])]),ss,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),as,a(t,{icon:"fa-brands fa-java"}),ts])]),ps,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),es,a(t,{icon:"fa-brands fa-java"}),os])]),cs,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),ls,a(t,{icon:"fa-brands fa-java"}),is])]),us,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),ks,a(t,{icon:"fa-brands fa-html5"}),rs])]),ds,n("p",null,[s("루프에 의해 반복되는 댓글 각각은 "),ms,s("라는 스타일 클래스를 따로 지정했다. 댓글 영역은 좀 작은 글씨로 보여질 필요가 있기 때문이다. 지금까지 빈 파일로 되어있던 "),a(t,{icon:"fa-brands fa-css3-alt"}),vs,s("에 "),gs,s(" 클래스에 대한 내용을 다음처럼 추가하도록 하자.")]),n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),bs,a(t,{icon:"fa-brands fa-css3-alt"}),hs])]),fs,n("h4",_s,[n("a",ys,[n("span",null,[a(t,{icon:"fa-brands fa-java"}),ws])])]),qs,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),js,a(t,{icon:"iconfont icon-name"}),xs])]),Ss,n("h4",Cs,[n("a",As,[n("span",null,[a(t,{icon:"fa-brands fa-java"}),Ps])])]),Is,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),Rs,a(t,{icon:"iconfont icon-name"}),Es])]),zs,n("h4",Os,[n("a",Ds,[n("span",null,[a(t,{icon:"fa-brands fa-java"}),Ms])])]),Fs,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),Ts,a(t,{icon:"iconfont icon-name"}),Us])]),Qs,n("h4",Bs,[n("a",Gs,[n("span",null,[a(t,{icon:"fa-brands fa-java"}),Ls])])]),Ns,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),$s,a(t,{icon:"iconfont icon-name"}),Hs])]),Ws,n("p",null,[s("질문을 작성, 수정, 삭제하는 것과 동일한 방법이라서 각각의 메서드를 따로 설명하지는 않겠다. 다만 댓글을 작성하기 위해 "),a(t,{icon:"fa-brands fa-html5"}),Vs,s(" 템플릿이 필요하고 댓글을 작성, 수정, 삭제한 후에는 해당 질문의 상세 페이지로 이동하기 위해 질문의 id 값이 필요하여 "),Js,s("를 사용했다는 점에 유의하자.")]),n("h4",Ks,[n("a",Xs,[n("span",null,[a(t,{icon:"fa-brands fa-html5"}),Zs])])]),Ys,n("blockquote",null,[n("p",null,[s("파일명: "),a(t,{icon:"fas fa-folder-open"}),na,a(t,{icon:"fa-brands fa-html5 "}),sa])]),aa,n("figure",null,[ta,n("figcaption",null,[s("이와 같이 수정 후 질문 상세 화면에서 "),a(t,{icon:"iconfont icon-select"}),pa,s("를 눌러 댓글을 추가해 보고 수정과 삭제 기능도 잘 작동하는지 확인해 보자.")])]),ea,oa,ca])}const ra=k(b,[["render",la],["__file","a.html.vue"]]),da=JSON.parse('{"path":"/java/jump-to-spring-boot/a.html","title":"A. 부록","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"A. 부록","description":"Jump to Spring Boot > A. 부록","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > A. 부록"},{"property":"og:description","content":"A. 부록"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/a.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/a.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"A. 부록"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > A. 부록"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/164891/C_A-01_3.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A. 부록\\",\\"image\\":[\\"https://wikidocs.net/images/page/164891/C_A-01_3.png\\",\\"https://wikidocs.net/images/page/164891/C_A-01_4.png\\",\\"https://wikidocs.net/images/page/164891/C_A-01_5.png\\",\\"https://wikidocs.net/images/page/164891/C_A-01_2.png\\",\\"https://wikidocs.net/images/page/164891/O_A-01_6.png\\",\\"https://wikidocs.net/images/page/164891/O_A-01_7.png\\",\\"https://wikidocs.net/images/page/164891/C_A-01_13.png\\",\\"https://wikidocs.net/images/page/164891/C_A-01_1.png\\",\\"https://wikidocs.net/images/page/164891/C_A-01_8.png\\",\\"https://wikidocs.net/images/page/164891/O_A-01_9.png\\",\\"https://wikidocs.net/images/page/164891/O_A-01_10.png\\",\\"https://wikidocs.net/images/page/164891/O_A-01_11.png\\",\\"https://wikidocs.net/images/page/164891/O_A-01_12.png\\",\\"https://wikidocs.net/images/page/163575/C_001.png\\",\\"https://wikidocs.net/images/page/163575/C_002.png\\",\\"https://wikidocs.net/images/page/163575/C_003.png\\",\\"https://wikidocs.net/images/page/162570/3-11_1.png\\",\\"https://wikidocs.net/images/page/162570/3-11_2.png\\",\\"https://wikidocs.net/images/page/162570/3-11_3.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"01. 인텔리제이 사용하기","slug":"_01-인텔리제이-사용하기","link":"#_01-인텔리제이-사용하기","children":[{"level":3,"title":"Spring Initializr","slug":"spring-initializr","link":"#spring-initializr","children":[]},{"level":3,"title":"인텔리제이 설치","slug":"인텔리제이-설치","link":"#인텔리제이-설치","children":[]},{"level":3,"title":"롬복 플러그인 설치","slug":"롬복-플러그인-설치","link":"#롬복-플러그인-설치","children":[]},{"level":3,"title":"Auto Reload 설정","slug":"auto-reload-설정","link":"#auto-reload-설정","children":[]},{"level":3,"title":"Unused 경고 메시지 끄기","slug":"unused-경고-메시지-끄기","link":"#unused-경고-메시지-끄기","children":[]},{"level":3,"title":"Gradle","slug":"gradle","link":"#gradle","children":[]}]},{"level":2,"title":"02. AWS 라이트세일 사용 취소","slug":"_02-aws-라이트세일-사용-취소","link":"#_02-aws-라이트세일-사용-취소","children":[{"level":3,"title":"인스턴스와 고정 IP 삭제","slug":"인스턴스와-고정-ip-삭제","link":"#인스턴스와-고정-ip-삭제","children":[]},{"level":3,"title":"데이터베이스 삭제","slug":"데이터베이스-삭제","link":"#데이터베이스-삭제","children":[]}]},{"level":2,"title":"03. 스프링부트 2.x 버전 안내","slug":"_03-스프링부트-2-x-버전-안내","link":"#_03-스프링부트-2-x-버전-안내","children":[{"level":3,"title":"jakarta 패키지 변경","slug":"jakarta-패키지-변경","link":"#jakarta-패키지-변경","children":[]},{"level":3,"title":"SecurityConfig.java","slug":"securityconfig-java","link":"#securityconfig-java","children":[]},{"level":3,"title":"스프링부트 2.x 깃허브 주소","slug":"스프링부트-2-x-깃허브-주소","link":"#스프링부트-2-x-깃허브-주소","children":[]}]},{"level":2,"title":"04. 댓글 (삭제예정)","slug":"_04-댓글-삭제예정","link":"#_04-댓글-삭제예정","children":[{"level":3,"title":"댓글 도메인","slug":"댓글-도메인","link":"#댓글-도메인","children":[]},{"level":3,"title":"댓글 모델","slug":"댓글-모델","link":"#댓글-모델","children":[]},{"level":3,"title":"질문 댓글","slug":"질문-댓글","link":"#질문-댓글","children":[]},{"level":3,"title":"답변 댓글","slug":"답변-댓글","link":"#답변-댓글","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":6.37,"words":1911},"filePathRelative":"java/jump-to-spring-boot/a.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{ra as comp,da as data};
