import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as n,t as d,b as a,w as o,n as g,g as m,d as s,e as t,r as i,o as k}from"./app-U_bew1in.js";const v={},h={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},_={class:"table-of-contents"},f=n("hr",null,null,-1),y=n("hr",null,null,-1),j={href:"https://github.com/pahkey/sbb3/tree/4-09",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"pahkey/sbb3",-1),w=n("code",null,"4-09",-1),x=n("code",null,"sbb.log",-1),S=n("hr",null,null,-1),A=n("h2",{id:"서버-로그의-문제점",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#서버-로그의-문제점"},[n("span",null,"서버 로그의 문제점")])],-1),R=n("p",null,"하지만 현재 서버에 생성되는 로그 파일에는 다음과 같은 몇가지 문제가 있다.",-1),B=n("code",null,"stop.sh",-1),T=n("code",null,"start.sh",-1),C=n("li",null,"로그 파일이 쌓일수록 로그파일의 사이즈가 커지며 무한대로 증가할수 있다.",-1),I=n("li",null,"로그의 시간이 시스템 시간이 아닌 UTC시간으로 출력된다.",-1),M=n("hr",null,null,-1),E=n("h2",{id:"서버-로그-분리",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#서버-로그-분리"},[n("span",null,"서버 로그 분리")])],-1),N=n("code",null,"application-prod.properties",-1),P=n("code",null,"/sbb/src/main/resources/",-1),D=n("code",null,"application-prod.properties",-1),J=t(`<div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># DATABASE</span></span>
<span class="line"><span class="token key attr-name">spring.h2.console.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.h2.console.path</span><span class="token punctuation">=</span><span class="token value attr-value">/h2-console</span></span>
<span class="line"><span class="token key attr-name">spring.h2.console.settings.web-allow-others</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:h2:~/local</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.driverClassName</span><span class="token punctuation">=</span><span class="token value attr-value">org.h2.Driver</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token value attr-value">sa</span></span>
<span class="line"><span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">1234</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># JPA</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.properties.hibernate.dialect</span><span class="token punctuation">=</span><span class="token value attr-value">org.hibernate.dialect.H2Dialect</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.hibernate.ddl-auto</span><span class="token punctuation">=</span><span class="token value attr-value">update</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.properties.hibernate.format_sql</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">spring.jpa.properties.hibernate.show_sql</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># logging</span></span>
<span class="line"><span class="token key attr-name">logging.logback.rollingpolicy.max-history</span><span class="token punctuation">=</span><span class="token value attr-value">30</span></span>
<span class="line"><span class="token key attr-name">logging.logback.rollingpolicy.max-file-size</span><span class="token punctuation">=</span><span class="token value attr-value">100MB</span></span>
<span class="line"><span class="token key attr-name">logging.file.name</span><span class="token punctuation">=</span><span class="token value attr-value">logs/sbb.log</span></span>
<span class="line"><span class="token key attr-name">logging.logback.rollingpolicy.file-name-pattern</span><span class="token punctuation">=</span><span class="token value attr-value">\${LOG_FILE}.%d{yyyy-MM-dd}-%i.log</span></span>
<span class="line"><span class="token key attr-name">logging.pattern.dateformat</span><span class="token punctuation">=</span><span class="token value attr-value">yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V=n("code",null,"application-prod.properties",-1),G=n("li",null,[n("code",null,"logging.logback.rollingpolicy.max-history"),s(": 로그 파일을 유지할 기간(일수)을 설정한다. (30일간의 로그만 유지하도록 했다.)")],-1),O=n("li",null,[n("code",null,"logging.logback.rollingpolicy.max-file-size"),s(": 로그 파일의 한 개의 최대 사이즈를 설정한다. (100MB로 설정했다.)")],-1),F=n("code",null,"logging.file.name",-1),L=n("code",null,"logs/",-1),z=n("code",null,"sbb.log",-1),U=n("code",null,"sbb.log",-1),$=n("li",null,[n("code",null,"logging.logback.rollingpolicy.file-name-pattern"),s(": 로그 파일의 사이즈가 설정한 용량을 초과하거나 날짜가 변경될 경우 명명할 로그파일의 이름에 대한 설정이다.")],-1),H=n("code",null,"logging.pattern.dateformat",-1),K=n("code",null,"sbb-0.0.3.jar",-1),Q={id:"start-sh-변경",tabindex:"-1"},W={class:"header-anchor",href:"#start-sh-변경"},Z=n("code",null,"start.sh",-1),X=n("code",null,"start.sh",-1),Y=n("code",null,"/home/ubuntu/sbb/",-1),nn=n("code",null,"start.sh",-1),sn=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">JAR</span><span class="token operator">=</span>sbb-0.0.3.jar</span>
<span class="line"><span class="token assign-left variable">LOG</span><span class="token operator">=</span>/dev/null</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">spring_profiles_active</span><span class="token operator">=</span>prod</span>
<span class="line"></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token variable">$JAR</span> <span class="token operator">&gt;</span> <span class="token variable">$LOG</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),an=n("code",null,"start.sh",-1),en=n("code",null,"sbb.log",-1),tn=n("code",null,"/dev/null",-1),ln=n("code",null,"logs",-1),on=n("code",null,"/dev/null",-1),pn=t(`<p>그리고 기존의 로그는 더이상 필요하지 않으므로 다음과 같이 삭제하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">rm</span> sbb.log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>그리고 SBB 서비스를 다음과 같이 재시작하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">stop.sh</span>
<span class="line">start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),cn=n("code",null,"logs",-1),rn=n("code",null,"logs",-1),un=n("code",null,"sbb.log",-1),dn=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># sbb.log</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 기존 로그도 사라지지 않고 30 일간의 로그가 날짜별(사이즈별)로 유지되며 출력되는 시간도 한국시간 기준으로 잘 출력될 것이다.</p><h3 id="사용자-로그" tabindex="-1"><a class="header-anchor" href="#사용자-로그"><span>사용자 로그</span></a></h3><p>지금까지는 스프링부트 프레임워크가 출력하는 로그들에 대해서 알아보았다. 하지만 사용자가 직접 코드를 작성하여 로그를 출력할 수도 있다. 그 방법에 대해서 알아보자.</p><p>다음은 질문 목록 조회시 GET으로 요청되는 page, kw 파라미터의 입력값을 로그로 출력하는 예제이다.</p>`,5),gn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),mn=n("code",null,"QuestionController.java",-1),kn=t(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token annotation punctuation">@Controller</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/question&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> page<span class="token punctuation">,</span> </span>
<span class="line">            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;kw&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> kw<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;page:{}, kw:{}&quot;</span><span class="token punctuation">,</span> page<span class="token punctuation">,</span> kw<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> paging <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> kw<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;paging&quot;</span><span class="token punctuation">,</span> paging<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;kw&quot;</span><span class="token punctuation">,</span> kw<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;question_list&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>롬복이 제공하는 <code>@Slf4</code> 애너테이션을 사용하면 <code>log</code> 객체를 사용할수 있다. <code>log</code> 객체를 사용하여 debug, error 등의 로그를 출력할 수 있다. 로그 레벨은 다음과 같이 6단계로 구성된다. 각 단계의 로그는 <code>log.trace</code>, <code>log.debug</code>, <code>log.info</code>, <code>log.warn</code>, <code>log.error</code>, <code>log.fatal</code> 로 출력할 수 있다.</p><ul><li><code>trace</code> (1단계) - debug 보다 훨씬 상세한 정보를 나타낼 경우에 사용</li><li><code>debug</code> (2단계) - 디버깅 목적으로 사용</li><li><code>info</code> (3단계) - 일반 정보를 출력할 목적으로 사용</li><li><code>warn</code> (4단계) - 경고 정보를 출력할 목적으로(작은 문제) 사용</li><li><code>error</code> (5단계) - 오류 정보를 출력할 목적으로(큰 문제) 사용</li><li><code>fatal</code> (6단계) - 아주 심각한 문제를 출력할 목적으로 사용</li></ul><p>설명에서 짐작할 수 있듯이 로그 레벨의 순서는 다음과 같다.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR &lt; FATAL</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,5),vn=n("code",null,"application.properties",-1),hn=n("code",null,"logging.level.root=info",-1),bn=n("code",null,"log.trace",-1),_n=n("code",null,"log.debug",-1),fn=n("code",null,"logging.info",-1),yn=n("code",null,"logging.warn",-1),jn=n("code",null,"logging.error",-1),qn=n("code",null,"logging.fatal",-1),wn=n("code",null,"logging.level.root=error",-1),xn=n("code",null,"logging.error",-1),Sn=n("code",null,"logging.fatal",-1),An=n("blockquote",null,[n("p",null,[n("code",null,"logging.level.root"),s("의 디폴트 값은 info이다. 특별히 설정하지 않으면 info로 설정된다.")])],-1),Rn=n("hr",null,null,-1);function Bn(p,Tn){const l=i("router-link"),e=i("FontIcon"),c=i("VPCard");return k(),u("div",null,[n("h1",h,[n("a",b,[n("span",null,d(p.$frontmatter.title)+" 관련",1)])]),n("nav",_,[n("ul",null,[n("li",null,[a(l,{to:"#서버-로그의-문제점"},{default:o(()=>[s("서버 로그의 문제점")]),_:1})]),n("li",null,[a(l,{to:"#서버-로그-분리"},{default:o(()=>[s("서버 로그 분리")]),_:1}),n("ul",null,[n("li",null,[a(l,{to:"#start-sh-변경"},{default:o(()=>[a(e,{icon:"iconfont icon-shell"}),s("start.sh 변경")]),_:1})]),n("li",null,[a(l,{to:"#사용자-로그"},{default:o(()=>[s("사용자 로그")]),_:1})])])])])]),f,a(c,g(m({title:"4-09. 로깅",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/163118",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),y,n("blockquote",null,[n("p",null,[n("a",j,[a(e,{icon:"iconfont icon-github"}),s(),q,s(" - "),a(e,{icon:"fas fa-folder-open"}),s(),w])])]),n("p",null,[s("스프링부트는 기본적으로 logback이라는 로깅 툴을 사용하여 로그를 출력한다. STS의 콘솔에 출력되는 문자열과 서버에서 "),a(e,{icon:"fas fa-file-lines"}),x,s(" 파일에 출력되는 문자열이 모두 logback에 의해 출력되는 로그이다.")]),S,A,R,n("ul",null,[n("li",null,[s("SBB 서비스를 재 실행할 경우 이전 로그가 삭제된다. ("),a(e,{icon:"iconfont icon-shell"}),B,s("을 하고 "),a(e,{icon:"iconfont icon-shell"}),T,s("을 실행할 경우)")]),C,I]),M,E,n("p",null,[s("위에서 말한 서버 로그의 문제점을 해결하려면 다음과 같이 "),a(e,{icon:"fas fa-file-lines"}),N,s(" 파일을 수정해야 한다.")]),n("blockquote",null,[n("p",null,[s("파일명: "),a(e,{icon:"fas fa-folder-open"}),P,a(e,{icon:"fas fa-file-lines"}),D])]),J,n("p",null,[s("."),a(e,{icon:"fas fa-file-lines"}),V,s(" 파일에 위와 같이 logging 설정을 추가했다. 각각의 항목에 대해서 알아보자.")]),n("ul",null,[G,O,n("li",null,[F,s(": 로그 파일의 이름을 설정한다. "),a(e,{icon:"fas fa-folder-open"}),L,a(e,{icon:"fas fa-file-lines"}),z,s("는 logs 디렉터리의 하위에 "),a(e,{icon:"fas fa-file-lines"}),U,s("라는 이름으로 로그파일을 생성하라는 의미이다.")]),$,n("li",null,[H,s(": 로그 출력시 출력하는 날짜와 시간에 대한 포맷과 타임존(timezone)을 설정한다. 타임존을 설정하지 않을 경우 UTC 시간을 기준으로 출력한다. 이와 같이 수정하고 배포 파일("),a(e,{icon:"fa-brands fa-java"}),K,s(")을 새로 작성하여 서버에 업로드하자.")])]),n("h3",Q,[n("a",W,[n("span",null,[a(e,{icon:"iconfont icon-shell"}),Z,s(" 변경")])])]),n("p",null,[s("서버의 로깅 설정을 변경했으므로 서버의 "),a(e,{icon:"iconfont icon-shell"}),X,s(" 파일도 다음과 같이 수정하자.")]),n("blockquote",null,[n("p",null,[s("파일명: "),a(e,{icon:"fas fa-folder-open"}),Y,a(e,{icon:"iconfont icon-shell"}),nn])]),sn,n("p",null,[s("."),a(e,{icon:"iconfont icon-shell"}),an,s(" 실행시 생성되는 로그 파일을 "),a(e,{icon:"fas fa-file-lines"}),en,s(" 에서 "),a(e,{icon:"fas fa-folder-open"}),tn,s("로 변경했다. 왜냐하면 로깅설정을 통해 "),a(e,{icon:"fas fa-folder-open"}),ln,s(" 디렉터리 하위에 로그파일이 생성되도록 설정했기 때문이다. 자바 프로그램의 출력을 "),a(e,{icon:"fas fa-folder-open"}),on,s("로 지정하면 콘솔 출력이 무시된다.")]),pn,n("p",null,[s("그러면 다음처럼 "),a(e,{icon:"fas fa-folder-open"}),cn,s(" 디렉터리가 생성되고 "),a(e,{icon:"fas fa-folder-open"}),rn,s(" 디렉터리 밑에 "),a(e,{icon:"fas fa-file-lines"}),un,s(" 파일이 생성되는 것을 확인할수 있다.")]),dn,n("blockquote",null,[n("p",null,[s("파일명: "),a(e,{icon:"fas fa-folder-open"}),gn,a(e,{icon:"fa-brands fa-java"}),mn])]),kn,n("p",null,[s("로그는 설정한 레벨 이상의 로그만 출력된다. 예를 들어 "),a(e,{icon:"fas fa-file-lines"}),vn,s(" 파일에 "),hn,s("로 설정하면 TRACE, DEBUG 로그는 출력되지 않고 INFO 이상의 로그만 출력된다. 즉, "),bn,s(" 또는 "),_n,s("로 출력하는 로그는 출력되지 않고 "),fn,s(", "),yn,s(", "),jn,s(", "),qn,s("로 출력한 로그만 출력된다는 말이다. 만약 로그 레벨을 "),wn,s("로 설정한다면 "),xn,s(", "),Sn,s("로 출력한 로그만 출력될 것이다.")]),An,Rn])}const Mn=r(v,[["render",Bn],["__file","04I.html.vue"]]),En=JSON.parse('{"path":"/java/jump-to-spring-boot/04I.html","title":"4-09. 로깅","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"4-09. 로깅","description":"Jump to Spring Boot > 4-09. 로깅","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 4-09. 로깅"},{"property":"og:description","content":"4-09. 로깅"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/04I.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/04I.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"4-09. 로깅"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 4-09. 로깅"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4-09. 로깅\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"서버 로그의 문제점","slug":"서버-로그의-문제점","link":"#서버-로그의-문제점","children":[]},{"level":2,"title":"서버 로그 분리","slug":"서버-로그-분리","link":"#서버-로그-분리","children":[{"level":3,"title":"start.sh 변경","slug":"start-sh-변경","link":"#start-sh-변경","children":[]},{"level":3,"title":"사용자 로그","slug":"사용자-로그","link":"#사용자-로그","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":1.89,"words":567},"filePathRelative":"java/jump-to-spring-boot/04I.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{Mn as comp,En as data};
