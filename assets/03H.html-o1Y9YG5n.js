import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as n,t as k,b as s,w as c,n as m,g as v,d as t,e,r as o,o as b}from"./app-U_bew1in.js";const h={},g={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},f={class:"table-of-contents"},q=n("hr",null,null,-1),w=n("hr",null,null,-1),_={href:"https://github.com/pahkey/sbb3/tree/3-08",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"pahkey/sbb3",-1),S=n("code",null,"3-08",-1),A=e('<p>게시판의 질문, 답변에는 누가 글을 작성했는지 알려주는 &quot;글쓴이&quot; 항목이 필요하다. 이번에는 <code>Question</code>과 <code>Answer</code> 엔티티에 &quot;글쓴이&quot;에 해당되는 <code>author</code> 속성을 추가해 보자.</p><hr><h2 id="question-속성-추가" tabindex="-1"><a class="header-anchor" href="#question-속성-추가"><span><code>Question</code> 속성 추가</span></a></h2><p>먼저 <code>Question</code> 엔티티에 <code>author</code> 속성을 추가하자.</p>',4),C=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),U=n("code",null,"Question.java",-1),x=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">ManyToOne</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Question</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@ManyToOne</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token class-name">SiteUser</span> author<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>author</code> 속성은 <code>SiteUser</code> 엔티티를 <code>@ManyToOne</code>으로 적용했다.</p><blockquote><p>여러개의 질문이 한 명의 사용자에게 작성될 수 있으므로 <code>@ManyToOne</code> 관계가 성립한다.</p></blockquote><hr><h2 id="answer-속성-추가" tabindex="-1"><a class="header-anchor" href="#answer-속성-추가"><span><code>Answer</code> 속성 추가</span></a></h2><p><code>Question</code> 엔티티와 같은 방법으로 <code>Answer</code> 엔티티에도 <code>author</code> 속성을 추가하자.</p>`,6),P=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),Q=n("code",null,"Answer.java",-1),z=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Answer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@ManyToOne</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token class-name">SiteUser</span> author<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="테이블-확인" tabindex="-1"><a class="header-anchor" href="#테이블-확인"><span>테이블 확인</span></a></h2><p>위와 같이 <code>Question</code>, <code>Answer</code> 엔티티를 변경하고 H2 콘솔에 접속하여 <code>question</code>, <code>answer</code> 테이블을 확인해 보자.</p><figure><img src="https://wikidocs.net/images/page/162330/C_3-08_1.png" alt=",  테이블에  컬럼이 생성된 것을 확인할 수 있다. 이 컬럼에는  테이블의  값이 저장되어  엔티티와 연결된다." tabindex="0" loading="lazy"><figcaption><code>question</code>, <code>answer</code> 테이블에 <code>author_id</code> 컬럼이 생성된 것을 확인할 수 있다. 이 컬럼에는 <code>site_user</code> 테이블의 <code>id</code> 값이 저장되어 <code>SiteUser</code> 엔티티와 연결된다.</figcaption></figure><hr><h2 id="author-저장" tabindex="-1"><a class="header-anchor" href="#author-저장"><span><code>author</code> 저장</span></a></h2><p>이제 <code>Question</code>, <code>Answer</code> 엔티티에 <code>author</code> 속성이 추가되었으므로 질문과 답변 저장시에 <code>author</code>도 함께 저장할 수 있다.</p><blockquote><p>질문, 답변에 글쓴이를 추가한다는 느낌으로 작업을 진행하자.</p></blockquote><h3 id="답변에-작성자-저장하기" tabindex="-1"><a class="header-anchor" href="#답변에-작성자-저장하기"><span>답변에 작성자 저장하기</span></a></h3><p>먼저 답변을 작성하는 <code>AnswerController</code>를 수정하자.</p>`,11),F=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),R=n("code",null,"AnswerController.java",-1),M=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Principal</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> </span>
<span class="line highlighted">            <span class="token annotation punctuation">@Valid</span> <span class="token class-name">AnswerForm</span> answerForm<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// (... 생략 ...)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>현재 로그인한 사용자에 대한 정보를 알기 위해서는 스프링 시큐리티가 제공하는 <code>Principal</code> 객체를 사용해야 한다. 위와 같이 <code>createAnswer</code> 메서드에 <code>Principal</code> 객체를 매개변수로 지정하면 된다.</p><blockquote><p><code>principal.getName()</code>을 호출하면 현재 로그인한 사용자의 사용자명(사용자ID)을 알수 있다.</p></blockquote><p><code>principal</code> 객체를 사용하면 이제 로그인한 사용자의 사용자명을 알수 있으므로 사용자명을 통해 <code>SiteUser</code>객체를 조회할 수 있다. 먼저 <code>User</code> 서비스를 통해 <code>SiteUser</code>를 조회할 수 있는 <code>getUser</code> 메서드를 <code>UserService</code>에 추가하자.</p>`,4),T=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),V=n("code",null,"UserService.java",-1),H=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span></span><span class="token class-name">DataNotFoundException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">SiteUser</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SiteUser</span><span class="token punctuation">&gt;</span></span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userRepository<span class="token punctuation">.</span><span class="token function">findByusername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">if</span> <span class="token punctuation">(</span>siteUser<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            <span class="token keyword">return</span> siteUser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">DataNotFoundException</span><span class="token punctuation">(</span><span class="token string">&quot;siteuser not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>UserRepository</code>에 이미 <code>findByusername</code>을 선언했으므로 쉽게 만들수 있다. 그리고 답변 저장시 작성자를 저장할 수 있도록 다음과 같이 <code>AnswerService</code>를 수정하자.</p>`,2),B=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),E=n("code",null,"AnswerService.java",-1),D=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">Answer</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Question</span> question<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">SiteUser</span> author<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Answer</span> answer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Answer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setCreateDate</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setQuestion</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        answer<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> answer<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>create</code> 메서드에 <code>SiteUser</code> 객체를 추가로 전달받아 답변 저장시 <code>author</code> 속성에 세팅했다. 이제 답변을 작성하면 작성자도 함께 저장될 것이다.</p><p>이제 다음과 같이 <code>AnswerController</code>의 <code>createAnswer</code> 메서드를 완성해 보자.</p>`,3),N=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),O=n("code",null,"AnswerController.java",-1),I=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">QuestionService</span> questionService<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AnswerService</span> answerService<span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> </span>
<span class="line">            <span class="token annotation punctuation">@Valid</span> <span class="token class-name">AnswerForm</span> answerForm<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Question</span> question <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token class-name">SiteUser</span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;question&quot;</span><span class="token punctuation">,</span> question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;question_detail&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line highlighted">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>question<span class="token punctuation">,</span> answerForm<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>principal</code> 객체를 통해 사용자명을 얻은 후에 사용자명을 통해 <code>SiteUser</code> 객체를 얻어서 답변을 등록하는 <code>AnswerService</code>의 <code>create</code> 메서드에 전달하여 답변을 저장하도록 했다.</p><h3 id="질문에-작성자-저장하기" tabindex="-1"><a class="header-anchor" href="#질문에-작성자-저장하기"><span>질문에 작성자 저장하기</span></a></h3><p>질문도 답변과 동일한 방법이므로 빠르게 작성해 보자. 먼저 작성자 정보를 저장하기 위해 <code>QuestionService</code>를 다음과 같이 수정하자.</p>`,4),J=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),K=n("code",null,"QuestionService.java",-1),W=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">SiteUser</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Question</span> q <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Question</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        q<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        q<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        q<span class="token punctuation">.</span><span class="token function">setCreateDate</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        q<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>create</code> 메서드에 <code>SiteUser</code> 매개변수를 추가하여 <code>Question</code> 데이터를 생성했다.</p><p>이어서 <code>QuestionController</code>도 다음과 같이 수정하자.</p>`,3),Z=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),$=n("code",null,"QuestionController.java",-1),L=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Principal</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">SiteUser</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">QuestionService</span> questionService<span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">questionCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">QuestionForm</span> questionForm<span class="token punctuation">,</span> </span>
<span class="line highlighted">            <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;question_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line highlighted">        <span class="token class-name">SiteUser</span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>questionForm<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> questionForm<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;redirect:/question/list&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 다시 로컬 서버를 시작하고 로그인한 다음 질문 · 답변 등록을 테스트해보자. 잘 될 것이다.</p><div class="hint-container info"><p class="hint-container-title">SbbApplicationTests.java</p><p><code>QuestionService</code>의 <code>create</code> 메서드의 매개변수로 <code>SiteUser</code>가 추가되었기 때문에 이전에 작성한 테스트 케이스가 오류가 발생할 것이다. 테스트 케이스의 오류를 임시 해결하기 위해 다음과 같이 수정하자.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//(... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">testJpa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">300</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">String</span> subject <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;테스트 데이터입니다:[%03d]&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;내용무&quot;</span><span class="token punctuation">;</span></span>
<span class="line highlighted">            <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>subject<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="로그인이-필요한-메서드" tabindex="-1"><a class="header-anchor" href="#로그인이-필요한-메서드"><span>로그인이 필요한 메서드</span></a></h2><p>하지만 로그아웃 상태에서 질문 또는 답변을 등록하면 다음과 같은 서버오류(500 오류)가 발생한다.</p><figure><img src="https://wikidocs.net/images/page/162330/C_3-08_2.png" alt="이 오류는 principal 객체가 널()값이라서 발생한 오류이다.  객체는 로그인을 해야만 생성되는 객체이기 때문이다." tabindex="0" loading="lazy"><figcaption>이 오류는 principal 객체가 널(<code>null</code>)값이라서 발생한 오류이다. <code>principal</code> 객체는 로그인을 해야만 생성되는 객체이기 때문이다.</figcaption></figure><p>이 문제를 해결하려면 <code>principal</code> 객체를 사용하는 메서드에 <code>@PreAuthorize(&quot;isAuthenticated()&quot;)</code> 애너테이션을 사용해야 한다.<code>@PreAuthorize(&quot;isAuthenticated()&quot;)</code> 애너테이션이 붙은 메서드는 로그인이 필요한 메서드를 의미한다. 만약 <code>@PreAuthorize(&quot;isAuthenticated()&quot;)</code> 애너테이션이 적용된 메서드가 로그아웃 상태에서 호출되면 로그인 페이지로 이동된다.</p><p><code>QuestionController</code>를 다음과 같이 수정하자.</p>`,8),G=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),X=n("code",null,"QuestionController.java",-1),Y=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>access<span class="token punctuation">.</span>prepost<span class="token punctuation">.</span></span><span class="token class-name">PreAuthorize</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">questionCreate</span><span class="token punctuation">(</span><span class="token class-name">QuestionForm</span> questionForm<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;question_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">questionCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">QuestionForm</span> questionForm<span class="token punctuation">,</span> </span>
<span class="line">            <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// (... 생략 ...)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>로그인이 필요한 메서드들에 <code>@PreAuthorize(&quot;isAuthenticated()&quot;)</code> 애너테이션을 적용했다.</p><p><code>AnswerController</code>도 다음과 같이 수정하자.</p>`,3),nn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),sn=n("code",null,"AnswerController.java",-1),an=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>access<span class="token punctuation">.</span>prepost<span class="token punctuation">.</span></span><span class="token class-name">PreAuthorize</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@Valid</span> <span class="token class-name">AnswerForm</span> answerForm<span class="token punctuation">,</span></span>
<span class="line">            <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// (... 생략 ...)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 <code>@PreAuthorize</code> 애너테이션이 동작할 수 있도록 <code>SecurityConfig</code>를 다음과 같이 수정해야 한다.</p>`,2),tn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/SecurityConfig.",-1),en=n("code",null,"java",-1),pn=e(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>method<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableMethodSecurity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@EnableWebSecurity</span></span>
<span class="line highlighted"><span class="token annotation punctuation">@EnableMethodSecurity</span><span class="token punctuation">(</span>prePostEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SecurityConfig</code>에 적용한 <code>@EnableMethodSecurity</code> 애너테이션의 <code>prePostEnabled = true</code> 설정은 <code>QuestionController</code>와 <code>AnswerController</code>에서 로그인 여부를 판별하기 위해 사용했던 <code>@PreAuthorize</code> 애너테이션을 사용하기 위해 반드시 필요하다.</p><p>이렇게 수정한후 로그아웃 상태에서 질문을 등록하거나 답변을 등록하면 자동으로 로그인 화면으로 이동하는 것을 확인할 수 있을 것이다.</p><blockquote><p>로그인 하지 않은 상태에서 &quot;질문 등록&quot; 버튼을 누르면 &quot;로그인&quot; 화면으로 이동한다. 그리고 로그인을 진행하면 원래 하려고 했던 &quot;질문 등록&quot; 화면으로 이동한다. 이것은 로그인 후에 원래 하려고 했던 페이지로 리다이렉트 시키는 스프링 시큐리티의 기능이다.</p></blockquote><h2 id="disabled" tabindex="-1"><a class="header-anchor" href="#disabled"><span>disabled</span></a></h2>`,5),cn=n("code",null,"[저장하기]",-1),on=n("p",null,"작성한 글이 사라지는 문제를 해결하려면 로그아웃 상태에서는 아예 답변 작성을 못하게 막는 것이 좋을 것이다.",-1),ln=n("code",null,"question_detail.html",-1),un=n("code",null,"/sbb/src/main/resources/templates/",-1),rn=n("code",null,"question_detail.html",-1),dn=e(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- 답변 작성 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/answer/create/\${question.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${answerForm}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{form_errors :: formErrorsFragment}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAnonymous()<span class="token punctuation">&quot;</span></span> <span class="token attr-name">disabled</span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{content}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{content}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>답변등록<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary my-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>로그인 상태가 아닌 경우 <code>textarea</code> 태그에 <code>disabled</code> 속성을 적용하여 입력을 못하게 만들었다. <code>sec:authorize=&quot;isAnonymous()&quot;</code>, <code>sec:authorize=&quot;isAuthenticated()&quot;</code> 속성은 현재 사용자의 로그인 상태를 체크하는 속성이다.</p><ul><li><code>sec:authorize=&quot;isAnonymous()&quot;</code> - 현재 로그아웃 상태</li><li><code>sec:authorize=&quot;isAuthenticated()&quot;</code> - 현재 로그인 상태</li></ul><figure><img src="https://wikidocs.net/images/page/162330/C_3-08_3.png" alt="다음은 로그아웃 상태에서 disabled가 적용된 화면이다." tabindex="0" loading="lazy"><figcaption>다음은 로그아웃 상태에서 disabled가 적용된 화면이다.</figcaption></figure><hr>`,5);function kn(l,mn){const p=o("router-link"),i=o("VPCard"),a=o("FontIcon"),u=o("VidStack");return b(),d("div",null,[n("h1",g,[n("a",y,[n("span",null,k(l.$frontmatter.title)+" 관련",1)])]),n("nav",f,[n("ul",null,[n("li",null,[s(p,{to:"#question-속성-추가"},{default:c(()=>[t("Question 속성 추가")]),_:1})]),n("li",null,[s(p,{to:"#answer-속성-추가"},{default:c(()=>[t("Answer 속성 추가")]),_:1})]),n("li",null,[s(p,{to:"#테이블-확인"},{default:c(()=>[t("테이블 확인")]),_:1})]),n("li",null,[s(p,{to:"#author-저장"},{default:c(()=>[t("author 저장")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#답변에-작성자-저장하기"},{default:c(()=>[t("답변에 작성자 저장하기")]),_:1})]),n("li",null,[s(p,{to:"#질문에-작성자-저장하기"},{default:c(()=>[t("질문에 작성자 저장하기")]),_:1})])])]),n("li",null,[s(p,{to:"#로그인이-필요한-메서드"},{default:c(()=>[t("로그인이 필요한 메서드")]),_:1})]),n("li",null,[s(p,{to:"#disabled"},{default:c(()=>[t("disabled")]),_:1})])])]),q,s(i,m(v({title:"3-08. 엔티티 변경",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162255",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),w,n("blockquote",null,[n("p",null,[n("a",_,[s(a,{icon:"iconfont icon-github"}),t(),j,t(" - "),s(a,{icon:"fas fa-folder-open"}),t(),S])])]),s(u,{src:"youtube/Tryl1M2b9Iw"}),A,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),C,s(a,{icon:"fa-brands fa-java"}),U])]),x,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),P,s(a,{icon:"fa-brands fa-java"}),Q])]),z,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),F,s(a,{icon:"fa-brands fa-java"}),R])]),M,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),T,s(a,{icon:"fa-brands fa-java"}),V])]),H,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),B,s(a,{icon:"fa-brands fa-java"}),E])]),D,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),N,s(a,{icon:"fa-brands fa-java"}),O])]),I,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),J,s(a,{icon:"fa-brands fa-java"}),K])]),W,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),Z,s(a,{icon:"fa-brands fa-java"}),$])]),L,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),G,s(a,{icon:"fa-brands fa-java"}),X])]),Y,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),nn,s(a,{icon:"fa-brands fa-java"}),sn])]),an,n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),tn,s(a,{icon:"fa-brands fa-java"}),en])]),pn,n("p",null,[t("한가지 더 생각해 봐야 할 것이 있다. 현재 질문 등록은 로그아웃 상태에서는 아예 글을 작성할 수 없어서 만족스럽다. 하지만 답변 등록은 로그아웃 상태에서도 글을 작성할 수 있다. 물론 답변 작성 후 "),s(a,{icon:"iconfont icon-select"}),cn,t("를 누르면 자동으로 로그인 화면으로 이동되므로 큰 문제는 아니지만 작성한 답변이 사라지는 문제가 있다.")]),on,n("p",null,[t("."),s(a,{icon:"fa-brands fa-html5"}),ln,t(" 파일을 다음과 같이 수정하자.")]),n("blockquote",null,[n("p",null,[t("파일명: "),s(a,{icon:"fas fa-folder-open"}),un,s(a,{icon:"fa-brands fa-html5"}),rn])]),dn])}const hn=r(h,[["render",kn],["__file","03H.html.vue"]]),gn=JSON.parse('{"path":"/java/jump-to-spring-boot/03H.html","title":"03H. 엔티티 변경","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"03H. 엔티티 변경","description":"Jump to Spring Boot > 03H. 엔티티 변경","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 03H. 엔티티 변경"},{"property":"og:description","content":"03H. 엔티티 변경"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/03H.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/03H.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"03H. 엔티티 변경"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 03H. 엔티티 변경"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162330/C_3-08_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03H. 엔티티 변경\\",\\"image\\":[\\"https://wikidocs.net/images/page/162330/C_3-08_1.png\\",\\"https://wikidocs.net/images/page/162330/C_3-08_2.png\\",\\"https://wikidocs.net/images/page/162330/C_3-08_3.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Question 속성 추가","slug":"question-속성-추가","link":"#question-속성-추가","children":[]},{"level":2,"title":"Answer 속성 추가","slug":"answer-속성-추가","link":"#answer-속성-추가","children":[]},{"level":2,"title":"테이블 확인","slug":"테이블-확인","link":"#테이블-확인","children":[]},{"level":2,"title":"author 저장","slug":"author-저장","link":"#author-저장","children":[{"level":3,"title":"답변에 작성자 저장하기","slug":"답변에-작성자-저장하기","link":"#답변에-작성자-저장하기","children":[]},{"level":3,"title":"질문에 작성자 저장하기","slug":"질문에-작성자-저장하기","link":"#질문에-작성자-저장하기","children":[]}]},{"level":2,"title":"로그인이 필요한 메서드","slug":"로그인이-필요한-메서드","link":"#로그인이-필요한-메서드","children":[]},{"level":2,"title":"disabled","slug":"disabled","link":"#disabled","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":3.45,"words":1035},"filePathRelative":"java/jump-to-spring-boot/03H.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{hn as comp,gn as data};
