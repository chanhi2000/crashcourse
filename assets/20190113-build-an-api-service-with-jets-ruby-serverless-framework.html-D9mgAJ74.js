import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as e,t as m,b as a,w as l,n as h,g as b,d as s,e as o,r as i,o as v}from"./app-U_bew1in.js";const g={},k={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"},_=e("hr",null,null,-1),w=e("hr",null,null,-1),j=o(`<p>In this blog post, I’ll cover how to build a simple API service on AWS Lambda with the <a href="http://rubyonjets.com/" target="_blank" rel="noopener noreferrer">Jets</a> Ruby Serverless Framework.</p><h2 id="jets-new-api-mode" tabindex="-1"><a class="header-anchor" href="#jets-new-api-mode"><span>Jets New API Mode</span></a></h2><p>The <a href="http://rubyonjets.com/reference/jets-new/" target="_blank" rel="noopener noreferrer"><code>jets new</code></a> command has a few different modes: html, api, and job. We’ll use the handy api mode for this tutorial to create a starter project designed for APIs.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jets new demo <span class="token parameter variable">--mode</span> api</span>
<span class="line"><span class="token builtin class-name">cd</span> demo</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>We’ve successfully generated a starter Jets project. The nice thing about api mode is that it generates a lighter starter project that does not include things not needed like bootstrap and webpacker assets.</p><p>We are ready to now add some API code.</p><hr><h2 id="scaffold" tabindex="-1"><a class="header-anchor" href="#scaffold"><span>Scaffold</span></a></h2><p>We’ll use a scaffold to generate some basic CRUD.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jets generate scaffold Post title:string</span>
<span class="line"><span class="token function">vim</span> .env.development <span class="token comment"># adjust to your local database creds</span></span>
<span class="line">jets db:create db:migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="local-testing" tabindex="-1"><a class="header-anchor" href="#local-testing"><span>Local Testing</span></a></h2>`,12),S=e("code",null,"db/",-1),T=e("code",null,"seeds.rb",-1),A=o(`<div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line"><span class="token number">3.</span>times <span class="token keyword">do</span> <span class="token operator">|</span>i<span class="token operator">|</span></span>
<span class="line">  Post<span class="token punctuation">.</span>create<span class="token punctuation">(</span><span class="token symbol">title</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;Title </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">i<span class="token operator">+</span><span class="token number">1</span></span><span class="token delimiter punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line">puts <span class="token string-literal"><span class="token string">&quot;Seeding data completed&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q=e("code",null,"db/",-1),P=e("code",null,"seeds.rb",-1),x=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jets db:seed</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Now let’s do some quick local testing with <code>jets console</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jets console</span>
<span class="line"><span class="token comment"># &gt;&gt; item = Post.find(1)</span></span>
<span class="line"><span class="token comment"># &gt;&gt; item.title = &quot;Title 1 Edit&quot;</span></span>
<span class="line"><span class="token comment"># &gt;&gt; item.save!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can also test with a local server with <code>jets server</code>:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jets server <span class="token comment"># Check out site at http://localhost:8888/posts</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check out the API at <a href="http://localhost:8888/posts" target="_blank" rel="noopener noreferrer">http://localhost:8888/posts</a></p><figure><img src="https://blog.boltops.com/img/posts/2019/01/api-posts.png" alt="it should look something like this" tabindex="0" loading="lazy"><figcaption>it should look something like this</figcaption></figure><p>Since this is an API, we can also test with curl.</p>`,8),I=e("code",null,"data.json",-1),R=e("code",null,"curl",-1),E=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#39;EOF&#39;<span class="token bash punctuation"> <span class="token operator">&gt;</span> data.json</span></span>
<span class="line">{</span>
<span class="line">  &quot;post&quot;: {</span>
<span class="line">    &quot;title&quot;: &quot;My Test Post 1&quot;</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line">EOF</span></span>
<span class="line"></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> POST http://localhost:8888/posts <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> <span class="token parameter variable">--data</span> @data.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>curl</code> output looks something like this:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-X</span> POST http://localhost:8888/posts <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> <span class="token parameter variable">--data</span> @data.json</span>
<span class="line"><span class="token comment"># HTTP/1.1 201 Created</span></span>
<span class="line"><span class="token comment"># Access-Control-Allow-Origin: *</span></span>
<span class="line"><span class="token comment"># Access-Control-Allow-Credentials: true</span></span>
<span class="line"><span class="token comment"># Content-Type: application/json</span></span>
<span class="line"><span class="token comment"># X-Jets-Base64: no</span></span>
<span class="line"><span class="token comment"># X-Runtime: 0.115564</span></span>
<span class="line"><span class="token comment"># Server: WEBrick/1.4.2 (Ruby/2.5.3/2018-10-18)</span></span>
<span class="line"><span class="token comment"># Date: Sun, 13 Jan 2019 19:21:00 GMT</span></span>
<span class="line"><span class="token comment"># Content-Length: 113</span></span>
<span class="line"><span class="token comment"># Connection: Keep-Alive</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># {&quot;id&quot;:4,&quot;title&quot;:&quot;My Test Post 1&quot;,&quot;created_at&quot;:&quot;2019-01-13T19:20:59.000Z&quot;,&quot;updated_at&quot;:&quot;2019-01-13T19:20:59.000Z&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="deploy" tabindex="-1"><a class="header-anchor" href="#deploy"><span>Deploy</span></a></h2><p>Before we deploy, we need to create a database that AWS Lambda will have access to. You can follow the AWS RDS docs. <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateDBInstance.html" target="_blank" rel="noopener noreferrer">Step 1: Create an RDS DB Instance</a>. It is also briefly mentioned in this video: <a href="https://blog.boltops.com/2018/09/08/jets-tutorial-deploy-to-aws-lambda-part-2" target="_blank" rel="noopener noreferrer">Jets Tutorial Deploy to AWS Lambda Part 2: AWS Lambda Ruby</a>.</p><p>We’ll also have to create and migrate the RDS database.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">vim</span> .env.development.remote <span class="token comment"># configure a remote RDS DB</span></span>
<span class="line"><span class="token assign-left variable">JETS_ENV_REMOTE</span><span class="token operator">=</span><span class="token number">1</span> jets db:create db:migrate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Once that is completed, let’s deploy our application to AWS Lambda.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">jets deploy</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># 07:28:53PM UPDATE_COMPLETE AWS::CloudFormation::Stack demo-dev</span></span>
<span class="line"><span class="token comment"># Stack success status: UPDATE_COMPLETE</span></span>
<span class="line"><span class="token comment"># Time took for stack deployment: 2m 27s.</span></span>
<span class="line"><span class="token comment"># Prewarming application.</span></span>
<span class="line"><span class="token comment"># API Gateway Endpoint: https://7bfi3qwj61.execute-api.us-west-2.amazonaws.com/dev/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>At the end of the deploy, you’ll see the API Gateway url that looks something like this <code>https://7bfi3qwj61.execute-api.us-west-2.amazonaws.com/dev/</code>. Note, your URL will be different.</p><figure><img src="https://blog.boltops.com/img/posts/2019/01/api-posts-on-lambda.png" alt="Go to that url, and you’ll see something like this" tabindex="0" loading="lazy"><figcaption>Go to that url, and you’ll see something like this</figcaption></figure><figure><img src="https://blog.boltops.com/img/posts/2019/01/api-lambda-console.png" alt="You’ll be able to see the Lambda functions." tabindex="0" loading="lazy"><figcaption>You’ll be able to see the Lambda functions.</figcaption></figure><figure><img src="https://blog.boltops.com/img/posts/2019/01/api-gateway-console.png" alt="You’ll also be able to see the API Gateway resources." tabindex="0" loading="lazy"><figcaption>You’ll also be able to see the API Gateway resources.</figcaption></figure><hr><h2 id="testing-it" tabindex="-1"><a class="header-anchor" href="#testing-it"><span>Testing It</span></a></h2>`,16),J=e("code",null,"data.json",-1),C=o(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST https://7bfi3qwj61.execute-api.us-west-2.amazonaws.com/dev/posts <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> <span class="token parameter variable">--data</span> @data.json</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># {&quot;id&quot;:7,&quot;title&quot;:&quot;My Test Post 1&quot;,&quot;body&quot;:null,&quot;published&quot;:null,&quot;created_at&quot;:&quot;2019-01-13T19:34:29.000Z&quot;,&quot;updated_at&quot;:&quot;2019-01-13T19:34:29.000Z&quot;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="extra-environments" tabindex="-1"><a class="header-anchor" href="#extra-environments"><span>Extra Environments</span></a></h2><p>An interesting benefit of running applications on AWS Lambda is that you only get charged for actual requests. So <a href="https://blog.boltops.com/2018/09/13/jets-tutorial-extra-environments-part-7" target="_blank" rel="noopener noreferrer">extra environments</a> are likely in the <a href="https://aws.amazon.com/free/" target="_blank" rel="noopener noreferrer">AWS free tier</a>. You could do this:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">JETS_ENV_EXTRA</span><span class="token operator">=</span><span class="token number">2</span> jets deploy</span>
<span class="line"><span class="token assign-left variable">JETS_ENV_EXTRA</span><span class="token operator">=</span><span class="token number">3</span> jets deploy</span>
<span class="line"><span class="token punctuation">..</span>.</span>
<span class="line"><span class="token assign-left variable">JETS_ENV_EXTRA</span><span class="token operator">=</span><span class="token number">8</span> jets deploy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You essentially get unlimited free environments, each of them taking a few minutes to provision.</p><hr><h2 id="live-demo" tabindex="-1"><a class="header-anchor" href="#live-demo"><span>Live Demo</span></a></h2><p>A live demo of this tutorial is available at <a href="https://api.demo.rubyonjets.com/" target="_blank" rel="noopener noreferrer">https://api.demo.rubyonjets.com</a>.</p><p>That’s it! That’s all it took to create a RESTful API on AWS Lambda with the <a href="http://rubyonjets.com/" target="_blank" rel="noopener noreferrer">Jets Ruby Serverless Framework</a>.</p>`,10),L=e("a",{href:"http://rubyonjets.com/",target:"_blank",rel:"noopener noreferrer"},"Ruby on Jets",-1),D={href:"https://github.com/tongueroo/jets",target:"_blank",rel:"noopener noreferrer"},B=e("code",null,"tongueroo/jets",-1),W=e("hr",null,null,-1);function F(r,N){const n=i("router-link"),p=i("VPCard"),c=i("VidStack"),t=i("FontIcon");return v(),u("div",null,[e("h1",k,[e("a",f,[e("span",null,m(r.$frontmatter.title)+" 관련",1)])]),e("nav",y,[e("ul",null,[e("li",null,[a(n,{to:"#jets-new-api-mode"},{default:l(()=>[s("Jets New API Mode")]),_:1})]),e("li",null,[a(n,{to:"#scaffold"},{default:l(()=>[s("Scaffold")]),_:1})]),e("li",null,[a(n,{to:"#local-testing"},{default:l(()=>[s("Local Testing")]),_:1})]),e("li",null,[a(n,{to:"#deploy"},{default:l(()=>[s("Deploy")]),_:1})]),e("li",null,[a(n,{to:"#testing-it"},{default:l(()=>[s("Testing It")]),_:1})]),e("li",null,[a(n,{to:"#extra-environments"},{default:l(()=>[s("Extra Environments")]),_:1})]),e("li",null,[a(n,{to:"#live-demo"},{default:l(()=>[s("Live Demo")]),_:1})])])]),_,a(p,h(b({title:"Build an API with the Jets Ruby Serverless Framework",desc:"...",link:"https://blog.boltops.com/2019/01/13/build-an-api-service-with-jets-ruby-serverless-framework",logo:"https://res.cloudinary.com/boltops/image/fetch/c_limit,f_auto,q_auto,w_590/https://blog.boltops.com/img/posts/2019/01/build-an-api-v2.png",background:"rgba(54,70,153,0.2)"})),null,16),w,a(c,{src:"youtube/7nB1kfNz5Vs"}),j,e("p",null,[s("Let’s seed some data by creating a "),a(t,{icon:"fas fa-folder-open"}),S,a(t,{icon:"iconfont icon-advanced"}),T,s(":")]),A,e("p",null,[s("Here’s the command to load the "),a(t,{icon:"fas fa-folder-open"}),q,a(t,{icon:"iconfont icon-advanced"}),P,s(" data:")]),x,e("p",null,[s("Here’s how we create a "),a(t,{icon:"iconfont icon-json"}),I,s(" file and send it via "),R,s(".")]),E,e("p",null,[s("We’ll use the curl commands again to create some posts with AWS Lambda using the "),a(t,{icon:"iconfont icon-json"}),J,s(" file we created earlier.:")]),C,e("p",null,[s("Hope you’ve enjoyed this article. If you find "),L,s(" interesting, please give it ⭐️ on "),e("a",D,[a(t,{icon:"iconfont icon-github"}),B]),s(". I’d appreciate it. 👍")]),W])}const M=d(g,[["render",F],["__file","20190113-build-an-api-service-with-jets-ruby-serverless-framework.html.vue"]]),O=JSON.parse('{"path":"/ruby/rubyonjets-learning-content/20190113-build-an-api-service-with-jets-ruby-serverless-framework.html","title":"Build an API with the Jets Ruby Serverless Framework","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Build an API with the Jets Ruby Serverless Framework","description":"Jets - Learning Content > Build an API with the Jets Ruby Serverless Framework","category":["Ruby"],"tag":["crashcourse","ruby","jets","aws","aws-lambda","cloudwatch"],"head":[[{"meta":null},{"property":"og:title","content":"Jets - Learning Content > Build an API with the Jets Ruby Serverless Framework"},{"property":"og:description","content":"Build an API with the Jets Ruby Serverless Framework"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/ruby/rubyonjets-learning-content/20190113-build-an-api-service-with-jets-ruby-serverless-framework.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/ruby/rubyonjets-learning-content/20190113-build-an-api-service-with-jets-ruby-serverless-framework.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"Build an API with the Jets Ruby Serverless Framework"}],["meta",{"property":"og:description","content":"Jets - Learning Content > Build an API with the Jets Ruby Serverless Framework"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.boltops.com/img/posts/2019/01/api-posts.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"ruby"}],["meta",{"property":"article:tag","content":"jets"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-lambda"}],["meta",{"property":"article:tag","content":"cloudwatch"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Build an API with the Jets Ruby Serverless Framework\\",\\"image\\":[\\"https://blog.boltops.com/img/posts/2019/01/api-posts.png\\",\\"https://blog.boltops.com/img/posts/2019/01/api-posts-on-lambda.png\\",\\"https://blog.boltops.com/img/posts/2019/01/api-lambda-console.png\\",\\"https://blog.boltops.com/img/posts/2019/01/api-gateway-console.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Jets New API Mode","slug":"jets-new-api-mode","link":"#jets-new-api-mode","children":[]},{"level":2,"title":"Scaffold","slug":"scaffold","link":"#scaffold","children":[]},{"level":2,"title":"Local Testing","slug":"local-testing","link":"#local-testing","children":[]},{"level":2,"title":"Deploy","slug":"deploy","link":"#deploy","children":[]},{"level":2,"title":"Testing It","slug":"testing-it","link":"#testing-it","children":[]},{"level":2,"title":"Extra Environments","slug":"extra-environments","link":"#extra-environments","children":[]},{"level":2,"title":"Live Demo","slug":"live-demo","link":"#live-demo","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":3.22,"words":965},"filePathRelative":"ruby/rubyonjets-learning-content/20190113-build-an-api-service-with-jets-ruby-serverless-framework.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{M as comp,O as data};
