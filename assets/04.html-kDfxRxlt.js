import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as t,t as p,b as a,n as l,g as d,w as g,e as m,r as e,o as u,d as v}from"./app-U_bew1in.js";const h={},f={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},b={class:"table-of-contents"},k=t("hr",null,null,-1),_=m(`<h2 id="enforce-noninstantiability-with-a-private-constructor" tabindex="-1"><a class="header-anchor" href="#enforce-noninstantiability-with-a-private-constructor"><span>Enforce noninstantiability with a private constructor</span></a></h2><p>정적 메서드나 필드만 모은 클래스를 만들고 싶을 때가 있다. 이런 클래스들은 악명이 높은데, 객체 지향적으로 생각하지 않으려는 사람들이 남용하는 경향이 있기 때문이다. 하지만 이런 클래스들도 분명 필요할 때가 있다. 자바의 기본 자료형 값(primitive value) 또는 배열에 적용되는 메서드를 한군데 모아둘 때 유용하다.</p><p><code>java.lang.Math</code>나 <code>java.util.Arrays</code>가 좋은 예다. 특정 인터페이스를 구현하는 객체를 만드는 팩토리 메서드 등의 정적 메서드를 모아놓을 때도 사용할 수 있다. <code>java.util.Collections</code>는 그 좋은 예다 (자바8에서는 인터페이스에 직접 메서드를 추가할 수 있다). 마지막으로 <code>final</code> 클래스에 적용할 메서드들을 모아놓을 때도 활용할 수 있다. 클래스를 계승하여 메서드를 추가할 수 없으니 말이다.</p><p>그런 유틸리티 클래스(utility class)들은 객체를 만들 목적의 클래스가 아니다. 객체를 만들면 오히려 이상하다. 하지만 생성자를 생략하면 컴파일러는 자동으로 기본 생성자를 만들어 버린다. 객체를 만들 수 없도록 하려고 클래스를 <code>abstract</code>로 선언해 봤자 소용없다. 하위 클래스를 정의하는 순간 객체 생성이 가능해지기 때문. 게다가 <code>abstract</code> 클래스니까 계승해서 사용하는 것이 맞다고 착각하는 사용자도 있을 수 있다. 이럴 때 <strong><code>private</code> 생성자를 클래스에 넣어서 객체 생성을 방지하자는 것이다.</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Utility</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token class-name">Utility</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AssertionError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>AssertionError</code>는 반드시 필요한 것은 아니지만, 클래스 안에서 실수로 생성자를 호출하면 바로 알 수 있게 하기 위한 것이다.</p><hr>`,7);function j(n,w){const o=e("VPCard"),i=e("router-link"),s=e("SiteInfo");return u(),c("div",null,[t("h1",f,[t("a",y,[t("span",null,p(n.$frontmatter.title)+" 관련",1)])]),a(o,l(d({title:"목차",desc:"Effective Java",link:"/java/effective-java/README.md",logo:"https://81465973-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/spaces%2F-Lej4tgjCgS0Wyj6JGe2%2Favatar.png?generation=1557720343650540&alt=media",background:"rgba(31,31,31,0.2)"})),null,16),t("nav",b,[t("ul",null,[t("li",null,[a(i,{to:"#enforce-noninstantiability-with-a-private-constructor"},{default:g(()=>[v("Enforce noninstantiability with a private constructor")]),_:1})])])]),k,a(s,{name:"객체의 생성과 삭제 | 양봉수 블로그",desc:"객체를 만들어야하는 시점과 그 방법, 객체 생성을 피해야 하는 경우와 그 방법, 적절한 순간에 객체가 삭제되도록 보장하는 방법, 그리고 삭제 전에 반드시 이루어져야 하는 청소 작업들을 관리하는 방법을 살펴본다.",url:"https://yangbongsoo.gitbook.io/study/effective-java/creating_and_destroying_objects",logo:"https://81465973-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/spaces%2F-Lej4tgjCgS0Wyj6JGe2%2Favatar.png?generation=1557720343650540&alt=media",preview:"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"}),_])}const U=r(h,[["render",j],["__file","04.html.vue"]]),x=JSON.parse('{"path":"/java/effective-java/04.html","title":"규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라","description":"Effective Java > 규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라","category":["Java"],"tag":["crashcourse","java","jdk","jdk8"],"head":[[{"meta":null},{"property":"og:title","content":"Effective Java > 규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라"},{"property":"og:description","content":"규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/effective-java/04.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/effective-java/04.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라"}],["meta",{"property":"og:description","content":"Effective Java > 규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"}],["meta",{"name":"twitter:image:alt","content":"규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"규칙4 : 객체 생성을 막을 때는 private 생성자를 사용하라\\",\\"image\\":[\\"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"isOriginal":false,"cover":"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"},"headers":[{"level":2,"title":"Enforce noninstantiability with a private constructor","slug":"enforce-noninstantiability-with-a-private-constructor","link":"#enforce-noninstantiability-with-a-private-constructor","children":[]}],"git":{"createdTime":1720075859000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"java/effective-java/04.md","localizedDate":"2024년 7월 4일","excerpt":"\\n"}');export{U as comp,x as data};
