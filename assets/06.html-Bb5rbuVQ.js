import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as n,t as i,b as s,n as u,g as r,w as k,e as d,r as a,o as m,d as v}from"./app-U_bew1in.js";const g={},b={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"},f=n("hr",null,null,-1),j=d(`<h2 id="avoid-creating-unneccesary-objects" tabindex="-1"><a class="header-anchor" href="#avoid-creating-unneccesary-objects"><span>Avoid creating unneccesary objects</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>위의 문장은 실행될 때마다 <code>String</code> 객체를 만든다 만일 위의 문장이 순환문이나 자주 호출되는 메서드 안에 있다면, 수백만 개의 <code>String</code> 객체가 쓸데없이 만들어질 것이다.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>이렇게 하면 실행할 때마다 객체를 만드는 대신, 동일한 String 객체를 사용한다. 게다가 같은 가상 머신에서 실행되는 모든 코드가 해당 객체를 재사용하게 된다.</p><p><code>Person</code> 클래스는 어떤 사람이 베이비 붐 세대에 속하는지 아닌지를 알려주는 <code>isBabyBoomer</code> 메서드 (1946년과 1964년 사이에 태어난 사람이면 참을 반환) 를 갖고 있다.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Date</span> birthDate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">//다른 필드와 메서드, 생성자는 생략 </span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">//이렇게 하면 안된다!</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isBabyBoomer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//생성 비용이 높은 객체를 쓸데없이 생성한다. </span></span>
<span class="line">    <span class="token class-name">Calendar</span> gtmCal <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">TimeZone</span><span class="token punctuation">.</span><span class="token function">getTimeZone</span><span class="token punctuation">(</span><span class="token string">&quot;GMT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    gmtCal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1946</span><span class="token punctuation">,</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">JANUARY</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Date</span> boomStart <span class="token operator">=</span> gmtCal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    gmtCal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1965</span><span class="token punctuation">,</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">JANUARY</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Date</span> boomEnd <span class="token operator">=</span> gmtCal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> birthDate<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>boomStart<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> birthDate<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>boomEnd<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위에 보인 <code>isBabyBoomer</code> 메서드는 호출될 때마다 <code>Calendar</code> 객체 하나, <code>TimeZone</code> 객체 하나, 그리고 <code>Date</code> 객체 두 개를 쓸데없이 만들어 댄다. 이렇게 비효율적인 코드는 정적 초기화 블록을 통해 개선하는 것이 좋다.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Date</span> birthDate<span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 다른 필드와 메서드, 생성자는 생략 </span></span>
<span class="line"></span>
<span class="line">  <span class="token doc-comment comment">/**</span>
<span class="line">   * 베이비 붐 시대의 시작과 끝 </span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Date</span> <span class="token constant">BOOM_START</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Date</span> <span class="token constant">BOOM_END</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">static</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Calendar</span> gtmCal <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">TimeZone</span><span class="token punctuation">.</span><span class="token function">getTimeZone</span><span class="token punctuation">(</span><span class="token string">&quot;GMT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    gmtCal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1946</span><span class="token punctuation">,</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">JANUARY</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">BOOM_START</span> <span class="token operator">=</span> gmtCal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    gmtCal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1965</span><span class="token punctuation">,</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">JANUARY</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">BOOM_END</span> <span class="token operator">=</span> gmtCal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isBabyBoomer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> birthDate<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token constant">BOOM_START</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> birthDate<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token constant">BOOM_END</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 개선된 <code>Person</code> 클래스는 <code>Calendar</code>, <code>TimeZone</code> 그리고 <code>Date</code> 객체를 클래스가 초기화 될 때 한 번만 만든다.</p><p>JDK 1.5부터는 쓸데없이 객체를 만들 새로운 방법이 더 생겼다. autoboxing을 통해 자바의 기본 자료형과 그 객체 표현형을 섞어 사용할 수 있다. 둘 간의 변환은 자동으로 이뤄진다.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Long</span> sum <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">long</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    sum <span class="token operator">+=</span> i<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sum은</code> <code>long</code>이 아니라 <code>Long</code>으로 선언되어 있는데 그 덕에 <code>long i</code>가 <code>Long sum</code>에 더해질때마다 하나씩 객체가 생긴다.</p><hr>`,14);function _(e,w){const t=a("VPCard"),p=a("router-link"),o=a("SiteInfo");return m(),l("div",null,[n("h1",b,[n("a",h,[n("span",null,i(e.$frontmatter.title)+" 관련",1)])]),s(t,u(r({title:"목차",desc:"Effective Java",link:"/java/effective-java/README.md",logo:"https://81465973-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/spaces%2F-Lej4tgjCgS0Wyj6JGe2%2Favatar.png?generation=1557720343650540&alt=media",background:"rgba(31,31,31,0.2)"})),null,16),n("nav",y,[n("ul",null,[n("li",null,[s(p,{to:"#avoid-creating-unneccesary-objects"},{default:k(()=>[v("Avoid creating unneccesary objects")]),_:1})])])]),f,s(o,{name:"객체의 생성과 삭제 | 양봉수 블로그",desc:"객체를 만들어야하는 시점과 그 방법, 객체 생성을 피해야 하는 경우와 그 방법, 적절한 순간에 객체가 삭제되도록 보장하는 방법, 그리고 삭제 전에 반드시 이루어져야 하는 청소 작업들을 관리하는 방법을 살펴본다.",url:"https://yangbongsoo.gitbook.io/study/effective-java/creating_and_destroying_objects",logo:"https://81465973-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/spaces%2F-Lej4tgjCgS0Wyj6JGe2%2Favatar.png?generation=1557720343650540&alt=media",preview:"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"}),j])}const D=c(g,[["render",_],["__file","06.html.vue"]]),S=JSON.parse('{"path":"/java/effective-java/06.html","title":"규칙6 : 불필요한 객체는 만들지 말라","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"규칙6 : 불필요한 객체는 만들지 말라","description":"Effective Java > 규칙6 : 불필요한 객체는 만들지 말라","category":["Java"],"tag":["crashcourse","java","jdk","jdk8"],"head":[[{"meta":null},{"property":"og:title","content":"Effective Java > 규칙6 : 불필요한 객체는 만들지 말라"},{"property":"og:description","content":"규칙6 : 불필요한 객체는 만들지 말라"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/effective-java/06.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/effective-java/06.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"규칙6 : 불필요한 객체는 만들지 말라"}],["meta",{"property":"og:description","content":"Effective Java > 규칙6 : 불필요한 객체는 만들지 말라"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"}],["meta",{"name":"twitter:image:alt","content":"규칙6 : 불필요한 객체는 만들지 말라"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"규칙6 : 불필요한 객체는 만들지 말라\\",\\"image\\":[\\"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"isOriginal":false,"cover":"https://yangbongsoo.gitbook.io/study/~gitbook/ogimage/-Lf3aHUKi8T1aUZM7Y49"},"headers":[{"level":2,"title":"Avoid creating unneccesary objects","slug":"avoid-creating-unneccesary-objects","link":"#avoid-creating-unneccesary-objects","children":[]}],"git":{"createdTime":1720075859000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":0.92,"words":276},"filePathRelative":"java/effective-java/06.md","localizedDate":"2024년 7월 4일","excerpt":"\\n"}');export{D as comp,S as data};
