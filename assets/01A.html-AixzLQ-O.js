import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as n,t as u,b as a,n as g,g as m,w as t,e as h,r as s,o as k,d as i}from"./app-U_bew1in.js";const b={},v={id:"frontmatter-title-관련",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"},f=n("hr",null,null,-1),w=h(`<p>Let&#39;s enable CSS Grid in a container element and explore the difference between <code>grid</code> and <code>inline-grid</code>.</p><hr><h2 id="turning-on-grid" tabindex="-1"><a class="header-anchor" href="#turning-on-grid"><span>Turning on Grid</span></a></h2><p>First, let&#39;s look at a simple container with 10 colored boxes inside it:</p><figure><img src="https://res.cloudinary.com/dwppkb069/image/upload/v1684351360/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_4_00-18520-so-this-is-what-it-looks-like-when-i-have-no-grid-involved_esurth.png" alt="screenshot" tabindex="0" loading="lazy"><figcaption>screenshot</figcaption></figure><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> #FF5722<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>FIRST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  ...</span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> #3F51B5<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>TENTH<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With no grid involved, the container is centered with a black border and each colored box is an individual <code>div</code>. Each <code>div</code> goes all the way across the screen, and the height is dictated by the text inside.</p><figure><img src="https://res.cloudinary.com/dwppkb069/image/upload/v1684351359/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_7_00-27240-and-then-each-of-these-little-rainbow-boxes_ook46y.png" alt="screenshot rainbow" tabindex="0" loading="lazy"><figcaption>screenshot rainbow</figcaption></figure><p>Here&#39;s the starting point of the CSS:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">#container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span></span>
<span class="line">  <span class="token property">border</span><span class="token punctuation">:</span> 4px solid black<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To turn on grid, set the <code>display</code> property of the container element to <code>grid</code>:</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">#container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* styles from above */</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here&#39;s what the result looks like:</p><figure><img src="https://res.cloudinary.com/dwppkb069/image/upload/v1684351359/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_16_01-31480-so-there-isnt-any-empty-space_rvs25p.png" alt="empty space screenshot" tabindex="0" loading="lazy"><figcaption>empty space screenshot</figcaption></figure><p>The elements go all the way across the container, but they&#39;re taller. Each element grows to take up as much available space as possible.</p><hr><h2 id="inline-grid" tabindex="-1"><a class="header-anchor" href="#inline-grid"><span>Inline Grid</span></a></h2><p>There&#39;s a second grid-related option for the display property: <code>inline-grid</code>.</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">#container</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">/* other styles */</span></span>
<span class="line">  <span class="token property">display</span><span class="token punctuation">:</span> inline-grid<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>At first, it looks the same as what we saw before.</p><p>However, the difference is that the overall container now behaves as an inline element.</p><p>For example, a <code>span</code> element and the container will share the same space.</p><p>Update the HTML to include a <code>span</code> with &quot;I AM INLINE!!&quot;:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>I AM INLINE!!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token comment">&lt;!-- colored boxes --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And notice that the container is inline:</p><figure><img src="https://res.cloudinary.com/dwppkb069/image/upload/v1684351362/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_32_02-17600-our-span-and-this-whole-container-are-both-inline_o4ecba.png" alt="grid container" tabindex="0" loading="lazy"><figcaption>grid container</figcaption></figure><p>Switching the CSS back to <code>display: grid</code>, the container behaves as a block element and doesn&#39;t share space like an inline element:</p><figure><img src="https://res.cloudinary.com/dwppkb069/image/upload/v1684351361/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_35_02-31880-because-it-is-not-an-inline-element_cp3ygi.png" alt="enabling grid" tabindex="0" loading="lazy"><figcaption>enabling grid</figcaption></figure><hr><h2 id="recap" tabindex="-1"><a class="header-anchor" href="#recap"><span>Recap</span></a></h2><p>You have two choices to turn on the grid system in a container:</p><ul><li><code>display: grid</code>: The container behaves as a block element.</li><li><code>display: inline-grid</code>: The container behaves as an inline element.</li></ul><hr>`,33);function S(l,x){const o=s("VPCard"),e=s("router-link"),p=s("SiteInfo"),c=s("VidStack");return k(),d("div",null,[n("h1",v,[n("a",_,[n("span",null,u(l.$frontmatter.title)+" 관련",1)])]),a(o,g(m({title:"Mastering CSS Grid | Colt Steele",desc:"Learn web development with Colt Steele",link:"/css/colt-steele-mastering-css-grid/README.md",logo:"https://www.coltsteele.com/favicon.ico",background:"rgba(206,115,90,0.2)"})),null,16),n("nav",y,[n("ul",null,[n("li",null,[a(e,{to:"#turning-on-grid"},{default:t(()=>[i("Turning on Grid")]),_:1})]),n("li",null,[a(e,{to:"#inline-grid"},{default:t(()=>[i("Inline Grid")]),_:1})]),n("li",null,[a(e,{to:"#recap"},{default:t(()=>[i("Recap")]),_:1})])])]),f,a(p,{name:"Enabling CSS Grid | Colt Steele",desc:"Learn how to activate CSS Grid for a container element and the difference between 'display: grid' and 'display: inline-grid'.",url:"https://www.coltsteele.com/tutorials/mastering-css-grid/css-grid-basics/enabling-css-grid",logo:"https://res.cloudinary.com/dwppkb069/image/upload/v1684239486/css-grid-tutorial_dfsfgn.png",preview:"https://www.coltsteele.com/api/og?title=Enabling+CSS+Grid"}),a(c,{src:"https://stream.mux.com/qr7EZ02ekkXDffeBlUmE8nwBabUJpk74Vnmqprm301HgU.m3u8?redundant_streams=true"}),w])}const C=r(b,[["render",S],["__file","01A.html.vue"]]),q=JSON.parse('{"path":"/css/colt-steele-mastering-css-grid/01A.html","title":"01A. Enabling CSS Grid","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"01A. Enabling CSS Grid","description":"Colt Steele - Mastering CSS Grid > 01A. Enabling CSS Grid","category":["CSS"],"tag":["crashcourse","colt-steele","css","grid"],"head":[[{"meta":null},{"property":"og:title","content":"Colt Steele - Mastering CSS Grid > 01A. Enabling CSS Grid"},{"property":"og:description","content":"01A. Enabling CSS Grid"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/css/colt-steele-mastering-css-grid/01A.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/css/colt-steele-mastering-css-grid/01A.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"01A. Enabling CSS Grid"}],["meta",{"property":"og:description","content":"Colt Steele - Mastering CSS Grid > 01A. Enabling CSS Grid"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://res.cloudinary.com/dwppkb069/image/upload/v1684351360/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_4_00-18520-so-this-is-what-it-looks-like-when-i-have-no-grid-involved_esurth.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"colt-steele"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"grid"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01A. Enabling CSS Grid\\",\\"image\\":[\\"https://res.cloudinary.com/dwppkb069/image/upload/v1684351360/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_4_00-18520-so-this-is-what-it-looks-like-when-i-have-no-grid-involved_esurth.png\\",\\"https://res.cloudinary.com/dwppkb069/image/upload/v1684351359/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_7_00-27240-and-then-each-of-these-little-rainbow-boxes_ook46y.png\\",\\"https://res.cloudinary.com/dwppkb069/image/upload/v1684351359/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_16_01-31480-so-there-isnt-any-empty-space_rvs25p.png\\",\\"https://res.cloudinary.com/dwppkb069/image/upload/v1684351362/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_32_02-17600-our-span-and-this-whole-container-are-both-inline_o4ecba.png\\",\\"https://res.cloudinary.com/dwppkb069/image/upload/v1684351361/tutorials/images-01_Enabling_Grid.mp4/01_enabling_grid_35_02-31880-because-it-is-not-an-inline-element_cp3ygi.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"prev":"/css/colt-steele-mastering-css-grid/README.md"},"headers":[{"level":2,"title":"Turning on Grid","slug":"turning-on-grid","link":"#turning-on-grid","children":[]},{"level":2,"title":"Inline Grid","slug":"inline-grid","link":"#inline-grid","children":[]},{"level":2,"title":"Recap","slug":"recap","link":"#recap","children":[]}],"git":{"createdTime":1716366673000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.84,"words":552},"filePathRelative":"css/colt-steele-mastering-css-grid/01A.md","localizedDate":"2024년 5월 22일","excerpt":"\\n"}');export{C as comp,q as data};
