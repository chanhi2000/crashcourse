import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as e,t as d,b as t,w as s,n as r,g as i,e as h,r as n,o as g,d as l}from"./app-U_bew1in.js";const w={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},y={class:"table-of-contents"},k=e("hr",null,null,-1),_=h('<h2 id="project-2-part-3" tabindex="-1"><a class="header-anchor" href="#project-2-part-3"><span>Project 2, part 3</span></a></h2><p>In this project you‚Äôve learned about images, stacks, gradients, buttons, and more, along with a whole host of new modifiers to help bring your UI designs to life.</p><p>All of these skills <em>will</em> come in useful in your own SwiftUI apps ‚Äì not maybe or might, but <em>will</em>. As Dr Seuss said, ‚Äúthe more that you read, the more things you will know; the more that you learn, the more places you&#39;ll go.‚Äù And that‚Äôs what this course is about: giving you the ability to go anywhere with SwiftUI, and build whatever apps help you reach your goals.</p><p>Before we move on to the next topic, it‚Äôs time to pause and review: did you fully understand everything you learned? That means another test, but it also means three more coding challenges to make sure you‚Äôre writing your own code as often as possible.</p><p><strong>Today you should work through the wrap up chapter for project 2, complete its review, then work through all three of its challenges.</strong></p><h3 id="guess-the-flag-wrap-up" tabindex="-1"><a class="header-anchor" href="#guess-the-flag-wrap-up"><span>Guess the Flag: Wrap up</span></a></h3>',6),b={class:"hint-container details"},v=e("summary",null,"Guess the Flag: Wrap up",-1),j=h('<p>That‚Äôs another SwiftUI app completed, including lots of important new techniques. You‚Äôll use <code>VStack</code>, <code>HStack</code>, and <code>ZStack</code> in almost every project you make, and you‚Äôll find you can quickly build complex layouts by combining them together.</p><p>Many people find SwiftUI‚Äôs way of showing alerts a little odd at first: creating it, adding a condition, then simply triggering that condition at some point in the future seems like a lot more work than just asking the alert to show itself. But like I said, it‚Äôs important that our views always be a reflection of our program state, and that rules out us just showing alerts whenever we want to.</p><h4 id="review-what-you-learned" tabindex="-1"><a class="header-anchor" href="#review-what-you-learned"><span>Review what you learned</span></a></h4><p>Anyone can sit through a tutorial, but it takes actual work to remember what was taught. It‚Äôs my job to make sure you take as much from these tutorials as possible, so I‚Äôve prepared a short review to help you check your learning.</p><p><a href="https://www.hackingwithswift.com/review/ios-swiftui/guess-the-flag" target="_blank" rel="noopener noreferrer">Click here to review what you learned in this project.</a></p><h4 id="challenge" tabindex="-1"><a class="header-anchor" href="#challenge"><span>Challenge</span></a></h4><p>One of the best ways to learn is to write your own code as often as possible, so here are three ways you should try extending this app to make sure you fully understand what‚Äôs going on:</p><ol><li>Add an <code>@State</code> property to store the user‚Äôs score, modify it when they get an answer right or wrong, then display it in the alert and in the score label.</li><li>When someone chooses the wrong flag, tell them their mistake in your alert message ‚Äì something like ‚ÄúWrong! That‚Äôs the flag of France,‚Äù for example.</li><li>Make the game show only 8 questions, at which point they see a final alert judging their score and can restart the game.</li></ol><p><strong>Note</strong>: That last one takes a little more thinking than the others. A good place to start would be to add a second <code>alert()</code> modifier watching a different Boolean property, then connect its button to a <code>reset()</code> method to set the game back to its initial state.</p>',9),S=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"Guess the Flag: Wrap up - Additional"),e("p",null,[e("a",{href:"https://www.hackingwithswift.com/review/ios-swiftui/guess-the-flag",target:"_blank",rel:"noopener noreferrer"},"Review for Project 2: Guess the Flag")])],-1),x=e("p",null,"Once you‚Äôre done, tell other people: you‚Äôve completed your second SwiftUI project, you‚Äôve passed the test, and you‚Äôve even extended it with your own code.",-1),D=e("p",null,"You should be proud of what you‚Äôve accomplished ‚Äì good job!",-1),I=e("hr",null,null,-1);function T(c,U){const o=n("router-link"),a=n("VPCard");return g(),u("div",null,[e("h1",m,[e("a",f,[e("span",null,d(c.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e("nav",y,[e("ul",null,[e("li",null,[t(o,{to:"#project-2-part-3"},{default:s(()=>[l("Project 2, part 3")]),_:1}),e("ul",null,[e("li",null,[t(o,{to:"#guess-the-flag-wrap-up"},{default:s(()=>[l("Guess the Flag: Wrap up")]),_:1})])])])])]),k,t(a,r(i({title:"100 Days of SwiftUI - Day 22",desc:"Project 2, part 3",link:"https://www.hackingwithswift.com/100/swiftui/22",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),_,e("details",b,[v,t(a,r(i({title:"100 Days of SwiftUI - Day 22 - Guess the Flag: Wrap up",desc:"Guess the Flag: Wrap up",link:"https://www.hackingwithswift.com/books/ios-swiftui/guess-the-flag-wrap-up",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),j]),S,x,D,I])}const W=p(w,[["render",T],["__file","22.html.vue"]]),A=JSON.parse('{"path":"/swift/100-days-of-swiftui/22.html","title":"Day 22","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Day 22","description":"100 Days of SwiftUI > Day 22","category":["Swift"],"tag":["crashcourse","paul-hudson","swift","swiftui","hacking-with-swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"100 Days of SwiftUI > Day 22"},{"property":"og:description","content":"Day 22"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/100-days-of-swiftui/22.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/swift/100-days-of-swiftui/22.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"Day 22"}],["meta",{"property":"og:description","content":"100 Days of SwiftUI > Day 22"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"paul-hudson"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"hacking-with-swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day 22\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Project 2, part 3","slug":"project-2-part-3","link":"#project-2-part-3","children":[{"level":3,"title":"Guess the Flag: Wrap up","slug":"guess-the-flag-wrap-up","link":"#guess-the-flag-wrap-up","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":2.37,"words":711},"filePathRelative":"swift/100-days-of-swiftui/22.md","localizedDate":"2023ÎÖÑ 12Ïõî 27Ïùº","excerpt":"\\n\\n<hr>\\n"}');export{W as comp,A as data};
