import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,a as e,t as g,b as l,w as n,n as k,g as _,d as s,e as p,r,o as f}from"./app-U_bew1in.js";const x={},y={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},N={class:"table-of-contents"},A=e("hr",null,null,-1),E=e("hr",null,null,-1),T=e("p",null,"When it comes to automation and scripting, you'd often need to construct commands that can accept input from the user, incorporate data from a file or the output of a tool and so on.",-1),I=e("p",null,[s("In this chapter, you'll see how to pass information saved in shell variables to "),e("code",null,"awk"),s(" commands. As mentioned before, this book assumes "),e("code",null,"bash"),s(" as the shell being used.")],-1),C={class:"hint-container info"},R=e("p",{class:"hint-container-title"},"Info",-1),V=e("p",null,[s("As an example, see my repo "),e("a",{href:"https://github.com/learnbyexample/command_help/blob/master/ch",target:"_blank",rel:"noopener noreferrer"},[e("code",null,"ch"),s(": command help")]),s(" for a practical shell script where commands are constructed dynamically.")],-1),B={href:"https://github.com/learnbyexample/learn_gnuawk/tree/master/example_files",target:"_blank",rel:"noopener noreferrer"},O=e("hr",null,null,-1),U=e("h2",{id:"v-option",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v-option"},[e("span",null,[e("code",null,"-v"),s(" option")])])],-1),$=e("p",null,[s("The most common method is to use the "),e("code",null,"-v"),s(" command line option.")],-1),j=e("p",null,[s("assume that the '"),e("code",null,"s"),s("' variable is part of some bash script or perhaps a variable that stores the output of a shell command")],-1),G=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"s"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'cake'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token parameter variable"},"-v"),s(),e("span",{class:"token assign-left variable"},"word"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$s"),s('"')]),s(),e("span",{class:"token string"},"'$2==word'"),s(" table.txt")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# blue cake mug shirt -7")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),L=e("hr",null,null,-1),P=e("h2",{id:"environ",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#environ"},[e("span",null,[e("code",null,"ENVIRON")])])],-1),S=e("p",null,[s("To access environment variables of the shell, you can call the special array variable "),e("code",null,"ENVIRON"),s(" with the name of the environment variable as a string key.")],-1),H=e("p",null,"existing environment variable output shown here is for my machine, would differ for you",-1),Q=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token string"},`'BEGIN{print ENVIRON["HOME"]}'`)]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# /home/learnbyexample")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token string"},`'BEGIN{print ENVIRON["SHELL"]}'`)]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# /bin/bash")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),J=e("p",null,"defined along with the awk command note that the variable is placed as a prefix to the command",-1),K=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"word"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'hello'"),s(),e("span",{class:"token function"},"awk"),s(),e("span",{class:"token string"},`'BEGIN{print ENVIRON["word"]}'`)]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# hello")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),W=e("code",null,"ENVIRON",-1),Z=e("code",null,"awk",-1),q=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">&#39;hi\\nbye&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),z=e("p",null,[s("when passed via "),e("code",null,"-v"),s(" option")],-1),D=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token parameter variable"},"-v"),s(),e("span",{class:"token assign-left variable"},"ip"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$s"),s('"')]),s(),e("span",{class:"token string"},"'BEGIN{print ip}'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# hi")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# bye")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),F=e("p",null,"when passed as an environment variable",-1),M=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"ip"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$s"),s('"')]),s(),e("span",{class:"token function"},"awk"),s(),e("span",{class:"token string"},`'BEGIN{print ENVIRON["ip"]}'`)]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# hi\\nbye")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Y=e("p",null,[s("Here's another example when a regexp is passed to an "),e("code",null,"awk"),s(" command.")],-1),X=e("p",null,[s("when passed via "),e("code",null,"-v"),s(" option")],-1),ee=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"r"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'\\Bpar\\B'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token parameter variable"},"-v"),s(),e("span",{class:"token assign-left variable"},"rgx"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$r"),s('"')]),s(),e("span",{class:"token string"},"'$0 ~ rgx'"),s(" anchors.txt")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# awk: warning: escape sequence '\\B' treated as plain 'B'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"r"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'\\\\Bpar\\\\B'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token parameter variable"},"-v"),s(),e("span",{class:"token assign-left variable"},"rgx"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$r"),s('"')]),s(),e("span",{class:"token string"},"'$0 ~ rgx'"),s(" anchors.txt")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# apparent effort")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# two spare computers")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),se=e("p",null,"when passed as an environment variable",-1),ne=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"r"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'\\Bpar\\B'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"rgx"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$r"),s('"')]),s(),e("span",{class:"token function"},"awk"),s(),e("span",{class:"token string"},`'$0 ~ ENVIRON["rgx"]'`),s(" anchors.txt")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# apparent effort")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# two spare computers")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ae=p('<hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>This short chapter revisited the <code>-v</code> command line option and introduced the <code>ENVIRON</code> special array. These are particularly useful when the <code>awk</code> command is part of a shell script. Arrays will be discussed in more detail in the later chapters.</p><p>The next chapter will cover control structures.</p><hr><h2 id="exercises" tabindex="-1"><a class="header-anchor" href="#exercises"><span>Exercises</span></a></h2>',6),te={class:"hint-container info"},le=e("p",{class:"hint-container-title"},"Info",-1),ie={href:"https://github.com/learnbyexample/learn_gnuawk/tree/master/exercises",target:"_blank",rel:"noopener noreferrer"},oe=e("h3",{id:"exercise-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exercise-1"},[e("span",null,"Exercise 1")])],-1),re=e("code",null,"sample.txt",-1),ce=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"s"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'do'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"##### add your solution here")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# Just do-it")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),pe=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token function"},"awk"),s(),e("span",{class:"token parameter variable"},"-v"),s(),e("span",{class:"token assign-left variable"},"s"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$s"),s('"')]),s(),e("span",{class:"token string"},`'$0 ~ "\\\\<" s "\\\\>"'`),s(" sample.txt")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# Just do-it")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),de=e("h3",{id:"exercise-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exercise-2"},[e("span",null,"Exercise 2")])],-1),ue=e("code",null,"o",-1),he=e("code",null,"addr.txt",-1),me=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"s"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'\\&/'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"##### add your solution here")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# Hell\\&/ W\\&/rld")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# H\\&/w are y\\&/u")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# This game is g\\&/\\&/d")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# T\\&/day is sunny")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# 12345")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# Y\\&/u are funny")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ve=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"s"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'\\&/'")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token assign-left variable"},"s"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},[s('"'),e("span",{class:"token variable"},"$s"),s('"')]),s(),e("span",{class:"token function"},"awk"),s(),e("span",{class:"token string"},`'BEGIN{gsub(/[\\\\&]/, "\\\\\\\\&", ENVIRON["s"])} {gsub(/o/, ENVIRON["s"])} 1'`),s(" addr.txt")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# Hell\\&/ W\\&/rld")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# H\\&/w are y\\&/u")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# This game is g\\&/\\&/d")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# T\\&/day is sunny")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# 12345")]),s(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"# Y\\&/u are funny")]),s(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),be=e("hr",null,null,-1);function ge(d,ke){const i=r("router-link"),u=r("VPCard"),c=r("FontIcon"),o=r("Tabs"),h=r("RouteLink"),m=r("TagLinks");return f(),b("div",null,[e("h1",y,[e("a",w,[e("span",null,g(d.$frontmatter.title)+" 관련",1)])]),e("nav",N,[e("ul",null,[e("li",null,[l(i,{to:"#v-option"},{default:n(()=>[s("-v option")]),_:1})]),e("li",null,[l(i,{to:"#environ"},{default:n(()=>[s("ENVIRON")]),_:1})]),e("li",null,[l(i,{to:"#summary"},{default:n(()=>[s("Summary")]),_:1})]),e("li",null,[l(i,{to:"#exercises"},{default:n(()=>[s("Exercises")]),_:1}),e("ul",null,[e("li",null,[l(i,{to:"#exercise-1"},{default:n(()=>[s("Exercise 1")]),_:1})]),e("li",null,[l(i,{to:"#exercise-2"},{default:n(()=>[s("Exercise 2")]),_:1})])])])])]),A,l(u,k(_({title:"7. Using shell variables",desc:"CLI Text Processing with GNU awk",link:"https://learnbyexample.github.io/learn_gnuawk/using-shell-variables.html",logo:"https://learnbyexample.github.io/favicon.svg",background:"rgba(22,25,35,0.2)"})),null,16),E,T,I,e("div",C,[R,V,e("p",null,[s("The "),e("a",B,[l(c,{icon:"iconfont icon-github"}),s(" example_files")]),s(" directory has all the files used in the examples.")])]),O,U,$,l(o,{id:"30",data:[{id:"Case 1"}],active:0},{title0:n(({value:a,isActive:t})=>[s("Case 1")]),tab0:n(({value:a,isActive:t})=>[j,G]),_:1}),L,P,S,l(o,{id:"45",data:[{id:"Case 1"},{id:"Case 2"}],active:0},{title0:n(({value:a,isActive:t})=>[s("Case 1")]),title1:n(({value:a,isActive:t})=>[s("Case 2")]),tab0:n(({value:a,isActive:t})=>[H,Q]),tab1:n(({value:a,isActive:t})=>[J,K]),_:1}),e("p",null,[W,s(" is a good way to get around "),Z,s("'s interpretation of escape sequences. This is especially helpful for fixed string matching (see the "),l(h,{to:"/cli/text-processing-w-gnu-awk/09-built-in-functions.html#index"},{default:n(()=>[s("index")]),_:1}),s(" section for examples).")]),q,l(o,{id:"63",data:[{id:"Case 1"},{id:"Case 2"}],active:0},{title0:n(({value:a,isActive:t})=>[s("Case 1")]),title1:n(({value:a,isActive:t})=>[s("Case 2")]),tab0:n(({value:a,isActive:t})=>[z,D]),tab1:n(({value:a,isActive:t})=>[F,M]),_:1}),Y,l(o,{id:"80",data:[{id:"Case 1"},{id:"Case 2"}],active:0},{title0:n(({value:a,isActive:t})=>[s("Case 1")]),title1:n(({value:a,isActive:t})=>[s("Case 2")]),tab0:n(({value:a,isActive:t})=>[X,ee]),tab1:n(({value:a,isActive:t})=>[se,ne]),_:1}),ae,e("div",te,[le,e("p",null,[s("The "),e("a",ie,[l(c,{icon:"iconfont icon-github"}),s(" exercises")]),s(" directory has all the files used in this section.")])]),oe,e("p",null,[s("Use contents of the s variable to display all matching lines from the input file "),l(c,{icon:"fas fa-file-lines"}),re,s(". Assume that the s variable doesn't have any regexp metacharacters and construct a solution such that only whole words are matched.")]),l(o,{id:"119",data:[{id:"Question"},{id:"Answer"}],active:0},{title0:n(({value:a,isActive:t})=>[s("Question")]),title1:n(({value:a,isActive:t})=>[s("Answer")]),tab0:n(({value:a,isActive:t})=>[ce]),tab1:n(({value:a,isActive:t})=>[pe]),_:1}),de,e("p",null,[s("Replace all occurrences of "),ue,s(" for the input file "),l(c,{icon:"fas fa-file-lines"}),he,s(" with the literal contents of the s variable. Assume that the s variable has regexp metacharacters.")]),l(o,{id:"133",data:[{id:"Question"},{id:"Answer"}],active:0},{title0:n(({value:a,isActive:t})=>[s("Question")]),title1:n(({value:a,isActive:t})=>[s("Answer")]),tab0:n(({value:a,isActive:t})=>[me]),tab1:n(({value:a,isActive:t})=>[ve]),_:1}),be,l(m)])}const xe=v(x,[["render",ge],["__file","07-using-shell-variables.html.vue"]]),ye=JSON.parse('{"path":"/cli/text-processing-w-gnu-awk/07-using-shell-variables.html","title":"7. Using shell variables","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"7. Using shell variables","description":"Text Processing with GNU awk > 7. Using shell variables","category":["CLI","Linux"],"tags":["crashcourse","cli","sh","shell","gnu","linux","awk"],"head":[[{"meta":null},{"property":"og:title","content":"Text Processing with GNU awk > 7. Using shell variables"},{"property":"og:description","content":"7. Using shell variables"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/cli/text-processing-w-gnu-awk/07-using-shell-variables.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/cli/text-processing-w-gnu-awk/07-using-shell-variables.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"7. Using shell variables"}],["meta",{"property":"og:description","content":"Text Processing with GNU awk > 7. Using shell variables"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-04-24T07:16:44.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"cli"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:tag","content":"shell"}],["meta",{"property":"article:tag","content":"gnu"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:tag","content":"awk"}],["meta",{"property":"article:modified_time","content":"2024-04-24T07:16:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7. Using shell variables\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-24T07:16:44.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"-v option","slug":"v-option","link":"#v-option","children":[]},{"level":2,"title":"ENVIRON","slug":"environ","link":"#environ","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]},{"level":2,"title":"Exercises","slug":"exercises","link":"#exercises","children":[{"level":3,"title":"Exercise 1","slug":"exercise-1","link":"#exercise-1","children":[]},{"level":3,"title":"Exercise 2","slug":"exercise-2","link":"#exercise-2","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1713943004000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":6}]},"readingTime":{"minutes":2.55,"words":765},"filePathRelative":"cli/text-processing-w-gnu-awk/07-using-shell-variables.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{xe as comp,ye as data};
