import{_ as v}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as s,t as b,b as a,n as u,g as m,w as l,d as n,e as c,r,o as g}from"./app-U_bew1in.js";const _={},f={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},w={class:"table-of-contents"},x=s("hr",null,null,-1),I=s("p",null,"AWS에 kOps로 Kubernetes 클러스터를 생성하는 구성도는 다음과 같습니다.",-1),S=s("figure",null,[s("img",{src:"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit07/5.png",alt:"kOps로 Kubernetes 클러스터 생성",tabindex:"0",loading:"lazy"}),s("figcaption",null,"kOps로 Kubernetes 클러스터 생성")],-1),A=s("hr",null,null,-1),T=s("h2",{id:"s3-버킷-생성하기",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#s3-버킷-생성하기"},[s("span",null,"S3 버킷 생성하기")])],-1),O=s("p",null,"kOps로 클러스터를 만들기 전에 인증서와 설정 정보를 저장할 S3 버킷을 만들어야 합니다. 다음 과정으로 S3 버킷을 생성합니다.",-1),C=s("li",null,"AWS 콘솔 접속",-1),q=s("code",null,"[버킷 만들기]",-1),E=s("li",null,[n("버킷 이름에 "),s("code",null,"clusters.k8s.hello.com"),n(" 입력("),s("code",null,"clusters.k8s.hello.com"),n("은 제가 생성했으므로 각자 다른 것을 입력합니다. 예: "),s("code",null,"clusters.k8s.hello.com-1"),n("). 만약 도메인을 구입했다면 "),s("code",null,"clusters.k8s.<구입한 도메인>"),n("으로 입력합니다("),s("code",null,"<S3 버킷 이름>"),n(").")],-1),P=s("code",null,"[ap-northeast-2]",-1),R=s("code",null,"[버킷 만들기]",-1),j=s("hr",null,null,-1),K=s("h2",{id:"ec2-키-페어-생성하기",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ec2-키-페어-생성하기"},[s("span",null,"EC2 키 페어 생성하기")])],-1),U=s("p",null,"이제 EC2 인스턴스에 접속할 키 페어를 생성할 차례입니다. 다음 과정으로 키 페어를 생성하고 다운로드합니다.",-1),W=s("li",null,"AWS 콘솔 접속",-1),L=s("li",null,"EC2로 이동",-1),F=s("code",null,"[키 페어]",-1),M=s("code",null,"[키 페어 생성]",-1),N=s("code",null,"[hello]",-1),D=s("code",null,"[.pem]",-1),V=s("code",null,"[키 페어 생성]",-1),Y=s("code",null,"hello.pem",-1),z=s("code",null,"hello.pem",-1),H=s("code",null,"[hello.pub]",-1),Z=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"chmod"),n(),s("span",{class:"token number"},"400"),n(" ./hello.pem")]),n(`
`),s("span",{class:"line"},[n("ssh-keygen "),s("span",{class:"token parameter variable"},"-y"),n(),s("span",{class:"token parameter variable"},"-f"),n(" ./hello.pem "),s("span",{class:"token operator"},">"),n(" hello.pub")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),B=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[n("icacls ."),s("span",{class:"token punctuation"},"\\"),n("hello.pem /reset")]),n(`
`),s("span",{class:"line"},[n("icacls ."),s("span",{class:"token punctuation"},"\\"),n("hello.pem /inheritance:r")]),n(`
`),s("span",{class:"line"},[n("icacls ."),s("span",{class:"token punctuation"},"\\"),n("hello.pem /c /t /grant "),s("span",{class:"token variable"},[n("${env"),s("span",{class:"token operator"},":"),n("UserName}")]),n(":F")]),n(`
`),s("span",{class:"line"},[n("ssh-keygen "),s("span",{class:"token parameter variable"},"-y"),n(),s("span",{class:"token parameter variable"},"-f"),n(" ."),s("span",{class:"token punctuation"},"\\"),n("hello.pem "),s("span",{class:"token operator"},"|"),n(" Out-File "),s("span",{class:"token parameter variable"},"-Encoding"),n(" ascii hello.pub")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),$=s("hr",null,null,-1),G=s("h2",{id:"route-53-호스팅-영역-생성하기",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#route-53-호스팅-영역-생성하기"},[s("span",null,"Route 53 호스팅 영역 생성하기")])],-1),J=s("p",null,"kOps로 쿠버네티스 클러스터를 생성하려면 Route 53 호스팅 영역(hosted zone)이 필요합니다.",-1),Q=s("h3",{id:"도메인을-구입한-경우",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#도메인을-구입한-경우"},[s("span",null,"도메인을 구입한 경우")])],-1),X=s("p",null,"도메인을 구입했다면 구입한 도메인에 대한 호스팅 영역을 생성합니다. AWS에서 도메인을 구입했다면 자동으로 생성됩니다.",-1),ss=s("li",null,"AWS 콘솔 접속",-1),ns=s("li",null,"Route 53으로 이동",-1),as=s("code",null,"[호스팅 영역]",-1),es=s("code",null,"[호스팅 영역 생성]",-1),ls=s("code",null,"[<구입한 도메인>]",-1),ts=s("code",null,"[호스팅 영역 생성]",-1),is=s("h3",{id:"도메인을-구입하지-않은-경우",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#도메인을-구입하지-않은-경우"},[s("span",null,"도메인을 구입하지 않은 경우")])],-1),os=s("p",null,"도메인을 구입하지 않은 경우 프라이빗 호스팅 영역을 생성합니다.",-1),cs=s("li",null,"AWS 콘솔 접속",-1),ps=s("li",null,"Route 53으로 이동",-1),rs=s("code",null,"[호스팅 영역]",-1),ds=s("code",null,"[호스팅 영역 생성]",-1),us=s("code",null,"[hello.com]",-1),ms=s("code",null,"[프라이빗 호스팅 영역]",-1),hs=s("li",null,[n("리전을 "),s("code",null,"아시아 태평양(서울) [ap-northeast-2]"),n(" 선택")],-1),vs=s("li",null,"VPC ID는 기본 VPC 선택",-1),ks=s("code",null,"[호스팅 영역 생성]",-1),bs=c('<hr><h2 id="yaml-파일-생성하기" tabindex="-1"><a class="header-anchor" href="#yaml-파일-생성하기"><span>YAML 파일 생성하기</span></a></h2><p>kOps는 커맨드라인 옵션을 사용하여 설정을 하는 방식이지만, 설정 파일을 Git 등으로 관리할 수 있도록 YAML로 만듭니다.</p><h3 id="도메인을-구입한-경우-1" tabindex="-1"><a class="header-anchor" href="#도메인을-구입한-경우-1"><span>도메인을 구입한 경우</span></a></h3><p>아래 <code>s3://clusters.k8s.&lt;구입한 도메인&gt;</code>은 본인이 생성한 S3 버킷의 이름으로 바꿔줍니다. 그리고 <code>--name</code>과 YAML 파일명에는 <code>k8s.ap-northeast-2.aws.&lt;구입한 도메인&gt;</code>을 입력합니다.</p>',5),gs=c(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">KOPS_STATE_STORE</span><span class="token operator">=</span>s3://clusters.k8s.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span></span>
<span class="line">kops create cluster <span class="token parameter variable">--name</span><span class="token operator">=</span>k8s.ap-northeast-2.aws.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span> <span class="token parameter variable">--cloud</span><span class="token operator">=</span>aws <span class="token parameter variable">--zones</span><span class="token operator">=</span><span class="token string">&#39;ap-northeast-2a,ap-northeast-2b,ap-northeast-2c&#39;</span> --dry-run <span class="token parameter variable">-o</span> yaml <span class="token operator">&gt;</span> k8s.ap-northeast-2.aws.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span>.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_s=c(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token variable">$env</span>:KOPS_STATE_STORE<span class="token operator">=</span><span class="token string">&quot;s3://clusters.k8s.&lt;구입한 도메인&gt;&quot;</span></span>
<span class="line">kops create cluster <span class="token parameter variable">--name</span><span class="token operator">=</span>k8s.ap-northeast-2.aws.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span> <span class="token parameter variable">--cloud</span><span class="token operator">=</span>aws <span class="token parameter variable">--zones</span><span class="token operator">=</span><span class="token string">&#39;ap-northeast-2a,ap-northeast-2b,ap-northeast-2c&#39;</span> --dry-run <span class="token parameter variable">-o</span> yaml <span class="token operator">&gt;</span> k8s.ap-northeast-2.aws.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span>.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>인그레스를 생성했을 때 Route 53에 레코드를 자동 생성할 수 있도록 <code>k8s.ap-northeast-2.aws.&lt;구입한 도메인&gt;.yaml</code> 파일을 다음과 같이 수정해줍니다. 즉, <code>spec</code> 아래에 <code>externalDns.watchIngress</code>를 <code>true</code>로 설정해줍니다.</p>`,3),fs=s("code",null,"k8s.ap-northeast-2.aws.<구입한 도메인>.yaml",-1),ys=c(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> kops.k8s.io/v1alpha2</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Cluster</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">creationTimestamp</span><span class="token punctuation">:</span> <span class="token null important">null</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> k8s.ap<span class="token punctuation">-</span>northeast<span class="token punctuation">-</span>2.aws.&lt;구입한 도메인<span class="token punctuation">&gt;</span></span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">externalDns</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">watchIngress</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">  <span class="token key atrule">api</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">dns</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">authorization</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">rbac</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="도메인을-구입하지-않은-경우-1" tabindex="-1"><a class="header-anchor" href="#도메인을-구입하지-않은-경우-1"><span>도메인을 구입하지 않은 경우</span></a></h3><p>아래 <code>s3://&lt;S3 버킷 이름&gt;</code>은 본인이 생성한 S3 버킷의 이름으로 바꿔줍니다. 하지만, <code>--name</code>과 YAML 파일명에는 <code>k8s.ap-northeast-2.aws.hello.com</code>을 그대로 입력해야 합니다.</p><p>::: tab</p>`,4),ws=c(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">KOPS_STATE_STORE</span><span class="token operator">=</span>s3://<span class="token operator">&lt;</span>S3 버킷 이름<span class="token operator">&gt;</span></span>
<span class="line">kops create cluster <span class="token parameter variable">--name</span><span class="token operator">=</span>k8s.ap-northeast-2.aws.hello.com <span class="token parameter variable">--cloud</span><span class="token operator">=</span>aws <span class="token parameter variable">--zones</span><span class="token operator">=</span><span class="token string">&#39;ap-northeast-2a,ap-northeast-2b,ap-northeast-2c&#39;</span> <span class="token parameter variable">--dns</span> private --dry-run <span class="token parameter variable">-o</span> yaml <span class="token operator">&gt;</span> k8s.ap-northeast-2.aws.hello.com.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),xs=c(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token variable">$env</span>:KOPS_STATE_STORE<span class="token operator">=</span><span class="token string">&quot;s3://&lt;S3 버킷 이름&gt;&quot;</span></span>
<span class="line">kops create cluster <span class="token parameter variable">--name</span><span class="token operator">=</span>k8s.ap-northeast-2.aws.hello.com <span class="token parameter variable">--cloud</span><span class="token operator">=</span>aws <span class="token parameter variable">--zones</span><span class="token operator">=</span><span class="token string">&#39;ap-northeast-2a,ap-northeast-2b,ap-northeast-2c&#39;</span> <span class="token parameter variable">--dns</span> private --dry-run <span class="token parameter variable">-o</span> yaml <span class="token operator">&gt;</span> k8s.ap-northeast-2.aws.hello.com.yaml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><hr><h2 id="yaml-파일로-클러스터-생성하기" tabindex="-1"><a class="header-anchor" href="#yaml-파일로-클러스터-생성하기"><span>YAML 파일로 클러스터 생성하기</span></a></h2><p>이제 앞에서 만든 YAML 파일로 클러스터를 생성해보겠습니다. 먼저 다음 명령을 실행하여 S3에 클러스터 설정 및 <code>sshpublickey</code>를 적용합니다. 아직은 EC2 인스턴스가 생성되지 않습니다.</p><h3 id="도메인을-구입한-경우-2" tabindex="-1"><a class="header-anchor" href="#도메인을-구입한-경우-2"><span>도메인을 구입한 경우</span></a></h3>`,6),Is=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"cat"),n(" ./k8s.ap-northeast-2.aws."),s("span",{class:"token operator"},"<"),n("구입한 도메인"),s("span",{class:"token operator"},">"),n(".yaml "),s("span",{class:"token operator"},"|"),n(" kops create "),s("span",{class:"token parameter variable"},"-f"),n(" -")]),n(`
`),s("span",{class:"line"},[n("kops create sshpublickey "),s("span",{class:"token parameter variable"},"--name"),n(" k8s.ap-northeast-2.aws."),s("span",{class:"token operator"},"<"),n("구입한 도메인"),s("span",{class:"token operator"},">"),n(),s("span",{class:"token parameter variable"},"-i"),n(" hello.pub")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),Ss=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"cat"),n(" ."),s("span",{class:"token punctuation"},"\\"),n("k8s.ap-northeast-2.aws."),s("span",{class:"token operator"},"<"),n("구입한 도메인"),s("span",{class:"token operator"},">"),n(".yaml "),s("span",{class:"token operator"},"|"),n(" kops create "),s("span",{class:"token parameter variable"},"-f"),n(" -")]),n(`
`),s("span",{class:"line"},[n("kops create sshpublickey "),s("span",{class:"token parameter variable"},"--name"),n(" k8s.ap-northeast-2.aws."),s("span",{class:"token operator"},"<"),n("구입한 도메인"),s("span",{class:"token operator"},">"),n(),s("span",{class:"token parameter variable"},"-i"),n(" hello.pub")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),As=c(`<p>이상이 없으면 실제로 적용을 해봅니다. 이제 실제로 EC2 인스턴스가 생성됩니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kops update cluster <span class="token parameter variable">--name</span> k8s.ap-northeast-2.aws.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span> <span class="token parameter variable">--yes</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># *********************************************************************************</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># A new kops version is available: 1.25.2</span></span>
<span class="line"><span class="token comment"># Upgrading is recommended</span></span>
<span class="line"><span class="token comment"># More information: https://github.com/kubernetes/kops/blob/master/permalinks/upgrade_kops.md#1.25.2</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># *********************************************************************************</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.581824    9528 executor.go:111] Tasks: 0 done / 109 total; 48 can run</span></span>
<span class="line"><span class="token comment"># W1125 12:16:09.693436    9528 vfs_castore.go:379] CA private key was not found</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.699437    9528 keypair.go:225] Issuing new certificate: &quot;etcd-manager-ca-events&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.712633    9528 keypair.go:225] Issuing new certificate: &quot;apiserver-aggregator-ca&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.727296    9528 keypair.go:225] Issuing new certificate: &quot;etcd-peers-ca-events&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.730567    9528 keypair.go:225] Issuing new certificate: &quot;etcd-manager-ca-main&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.732792    9528 keypair.go:225] Issuing new certificate: &quot;etcd-peers-ca-main&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.733800    9528 keypair.go:225] Issuing new certificate: &quot;etcd-clients-ca&quot;</span></span>
<span class="line"><span class="token comment"># W1125 12:16:09.734626    9528 vfs_castore.go:379] CA private key was not found</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.757601    9528 keypair.go:225] Issuing new certificate: &quot;kubernetes-ca&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.765643    9528 keypair.go:225] Issuing new certificate: &quot;service-account&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:10.774088    9528 executor.go:111] Tasks: 48 done / 109 total; 23 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:11.666874    9528 executor.go:111] Tasks: 71 done / 109 total; 30 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:12.317385    9528 executor.go:111] Tasks: 101 done / 109 total; 4 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:13.289549    9528 executor.go:155] No progress made, sleeping before retrying 4 task(s)</span></span>
<span class="line"><span class="token comment"># I1125 12:16:23.304076    9528 executor.go:111] Tasks: 101 done / 109 total; 4 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:25.822231    9528 executor.go:111] Tasks: 105 done / 109 total; 4 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:25.919122    9528 executor.go:111] Tasks: 109 done / 109 total; 0 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:27.221437    9528 dns.go:238] Pre-creating DNS records</span></span>
<span class="line"><span class="token comment"># I1125 12:16:27.817503    9528 update_cluster.go:326] Exporting kubeconfig for cluster</span></span>
<span class="line"><span class="token comment"># kOps has set your kubectl context to k8s.ap-northeast-2.aws.&lt;구입한 도메인&gt;</span></span>
<span class="line"><span class="token comment"># W1125 12:16:27.845592    9528 update_cluster.go:350] Exported kubeconfig with no user authentication; use --admin, --user or --auth-plugin flags with \`kops export kubeconfig\`</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Cluster is starting.  It should be ready in a few minutes.</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Suggestions:</span></span>
<span class="line"><span class="token comment">#  * validate cluster: kops validate cluster --wait 10m</span></span>
<span class="line"><span class="token comment">#  * list nodes: kubectl get nodes --show-labels</span></span>
<span class="line"><span class="token comment">#  * ssh to the master: ssh -i ~/.ssh/id_rsa ubuntu@api.k8s.ap-northeast-2.aws.&lt;구입한 도메인&gt;</span></span>
<span class="line"><span class="token comment">#  * the ubuntu user is specific to Ubuntu. If not using Ubuntu please use the appropriate user based on your OS.</span></span>
<span class="line"><span class="token comment">#  * read about installing addons at: https://kops.sigs.k8s.io/addons.</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AWS 콘솔에서 EC2 인스턴스 목록을 확인해보면 마스터와 워커 노드들이 생성되고 있을 것입니다.</p><p>다음 명령을 입력하여 <code>~/.kube/config</code>에 방금 생성한 클러스터의 설정을 추가합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kops <span class="token builtin class-name">export</span> kubeconfig <span class="token parameter variable">--admin</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>잠시 기다리면 EC2 인스턴스가 생성되고 클러스터가 초기화됩니다. <code>kubectl get nodes</code> 명령을 입력하여 노듣 목록을 출력해봅니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl get nodes</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># NAME                  STATUS   ROLES           AGE    VERSION</span></span>
<span class="line"><span class="token comment"># i-01a4d885fd48acc61   Ready    control-plane   4m4s   v1.25.4</span></span>
<span class="line"><span class="token comment"># i-082f35a3d294a5e7d   Ready    node            54s    v1.25.4</span></span>
<span class="line"><span class="token comment"># i-0c48a73869254c456   Ready    node            37s    v1.25.4</span></span>
<span class="line"><span class="token comment"># i-0e5dad97f6500d40a   Ready    node            51s    v1.25.4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="도메인을-구입하지-않은-경우-2" tabindex="-1"><a class="header-anchor" href="#도메인을-구입하지-않은-경우-2"><span>도메인을 구입하지 않은 경우</span></a></h3>`,8),Ts=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"cat"),n(" ./k8s.ap-northeast-2.aws.hello.com.yaml "),s("span",{class:"token operator"},"|"),n(" kops create "),s("span",{class:"token parameter variable"},"-f"),n(" -")]),n(`
`),s("span",{class:"line"},[n("kops create sshpublickey "),s("span",{class:"token parameter variable"},"--name"),n(" k8s.ap-northeast-2.aws.hello.com "),s("span",{class:"token parameter variable"},"-i"),n(" hello.pub")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),Os=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"cat"),n(" ."),s("span",{class:"token punctuation"},"\\"),n("k8s.ap-northeast-2.aws.hello.com.yaml "),s("span",{class:"token operator"},"|"),n(" kops create "),s("span",{class:"token parameter variable"},"-f"),n(" -")]),n(`
`),s("span",{class:"line"},[n("kops create sshpublickey "),s("span",{class:"token parameter variable"},"--name"),n(" k8s.ap-northeast-2.aws.hello.com "),s("span",{class:"token parameter variable"},"-i"),n(" hello.pub")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),Cs=c(`<p>이상이 없으면 실제로 적용을 해봅니다. 이제 실제로 EC2 인스턴스가 생성됩니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kops update cluster <span class="token parameter variable">--name</span> k8s.ap-northeast-2.aws.hello.com <span class="token parameter variable">--yes</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># *********************************************************************************</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># A new kops version is available: 1.25.2</span></span>
<span class="line"><span class="token comment"># Upgrading is recommended</span></span>
<span class="line"><span class="token comment"># More information: https://github.com/kubernetes/kops/blob/master/permalinks/upgrade_kops.md#1.25.2</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># *********************************************************************************</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.581824    9528 executor.go:111] Tasks: 0 done / 109 total; 48 can run</span></span>
<span class="line"><span class="token comment"># W1125 12:16:09.693436    9528 vfs_castore.go:379] CA private key was not found</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.699437    9528 keypair.go:225] Issuing new certificate: &quot;etcd-manager-ca-events&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.712633    9528 keypair.go:225] Issuing new certificate: &quot;apiserver-aggregator-ca&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.727296    9528 keypair.go:225] Issuing new certificate: &quot;etcd-peers-ca-events&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.730567    9528 keypair.go:225] Issuing new certificate: &quot;etcd-manager-ca-main&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.732792    9528 keypair.go:225] Issuing new certificate: &quot;etcd-peers-ca-main&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.733800    9528 keypair.go:225] Issuing new certificate: &quot;etcd-clients-ca&quot;</span></span>
<span class="line"><span class="token comment"># W1125 12:16:09.734626    9528 vfs_castore.go:379] CA private key was not found</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.757601    9528 keypair.go:225] Issuing new certificate: &quot;kubernetes-ca&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:09.765643    9528 keypair.go:225] Issuing new certificate: &quot;service-account&quot;</span></span>
<span class="line"><span class="token comment"># I1125 12:16:10.774088    9528 executor.go:111] Tasks: 48 done / 109 total; 23 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:11.666874    9528 executor.go:111] Tasks: 71 done / 109 total; 30 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:12.317385    9528 executor.go:111] Tasks: 101 done / 109 total; 4 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:13.289549    9528 executor.go:155] No progress made, sleeping before retrying 4 task(s)</span></span>
<span class="line"><span class="token comment"># I1125 12:16:23.304076    9528 executor.go:111] Tasks: 101 done / 109 total; 4 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:25.822231    9528 executor.go:111] Tasks: 105 done / 109 total; 4 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:25.919122    9528 executor.go:111] Tasks: 109 done / 109 total; 0 can run</span></span>
<span class="line"><span class="token comment"># I1125 12:16:27.221437    9528 dns.go:238] Pre-creating DNS records</span></span>
<span class="line"><span class="token comment"># I1125 12:16:27.817503    9528 update_cluster.go:326] Exporting kubeconfig for cluster</span></span>
<span class="line"><span class="token comment"># kOps has set your kubectl context to k8s.ap-northeast-2.aws.hello.com</span></span>
<span class="line"><span class="token comment"># W1125 12:16:27.845592    9528 update_cluster.go:350] Exported kubeconfig with no user authentication; use --admin, --user or --auth-plugin flags with \`kops export kubeconfig\`</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Cluster is starting.  It should be ready in a few minutes.</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># Suggestions:</span></span>
<span class="line"><span class="token comment">#  * validate cluster: kops validate cluster --wait 10m</span></span>
<span class="line"><span class="token comment">#  * list nodes: kubectl get nodes --show-labels</span></span>
<span class="line"><span class="token comment">#  * ssh to the master: ssh -i ~/.ssh/id_rsa ubuntu@api.k8s.ap-northeast-2.aws.hello.com</span></span>
<span class="line"><span class="token comment">#  * the ubuntu user is specific to Ubuntu. If not using Ubuntu please use the appropriate user based on your OS.</span></span>
<span class="line"><span class="token comment">#  * read about installing addons at: https://kops.sigs.k8s.io/addons.</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AWS 콘솔에서 EC2 인스턴스 목록을 확인해보면 마스터와 워커 노드들이 생성되고 있을 것입니다.</p>`,3),qs=s("code",null,"~/.kube/config",-1),Es=c(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kops <span class="token builtin class-name">export</span> kubeconfig <span class="token parameter variable">--admin</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>잠시 기다리면 EC2 인스턴스가 생성되고 클러스터가 초기화됩니다.</p><p>우리는 실제로 <code>hello.com</code> 도메인을 구입하지 않았으므로, 로컬에서 임시로 사용할 수 있도록 설정해야 합니다. 운영체제별로 설정 파일이 조금 다른데, 각자 운영체제에 맞는 파일을 수정합니다.</p><p>IP 주소는 클러스터의 마스터 노드 IP 주소를 사용해야 하는데, 다음과 같은 과정으로 IP 주소를 찾을 수 있습니다.</p>`,4),Ps=s("li",null,"AWS 콘솔 접속",-1),Rs=s("li",null,"EC2로 이동",-1),js=s("code",null,"[인스턴스]",-1),Ks=s("li",null,[n("이름이 "),s("code",null,"master-ap-northeast-2a.masters.k8s.ap-northeast-2.aws.hello.com"),n("인 인스턴스 클릭 클릭")],-1),Us=s("code",null,"[퍼블릭 IPv4 주소]",-1),Ws=s("p",null,[n("리눅스, macOS는 "),s("code",null,"/etc/hosts"),n(" 파일을 수정해야 합니다. root 권한이 있어야 하므로 "),s("code",null,"sudo vim"),n("으로 수정합니다.")],-1),Ls=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"sudo"),n(),s("span",{class:"token function"},"vim"),n(" /etc/hosts")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),Fs=s("p",null,[s("code",null,"/etc/hosts"),n(" 파일의 마지막 부분에 다음 내용을 추가한 뒤 저장합니다.")],-1),Ms=s("code",null,"/etc/hosts",-1),Ns=s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text","data-title":"text"},[s("pre",null,[s("code",null,[s("span",{class:"line"},"<마스터 노드의 퍼블릭 IPv4 주소> api.k8s.ap-northeast-2.aws.hello.com"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),Ds=s("p",null,[n("윈도우는 "),s("code",null,"C:\\Windows\\System32\\drivers\\etc\\hosts"),n(" 파일을 수정해야 합니다. 관리자 권한이 필요하므로, 메모장을 관리자 권한으로 실행한 뒤 파일을 엽니다.")],-1),Vs=s("p",null,[s("code",null,"C:\\Windows\\System32\\drivers\\etc\\hosts"),n(" 파일의 마지막 부분에 다음 내용을 추가한 뒤 저장합니다.")],-1),Ys=s("code",null,"C:\\Windows\\System32\\drivers\\etc\\hoss",-1),zs=s("div",{class:"language-text line-numbers-mode","data-highlighter":"prismjs","data-ext":"text","data-title":"text"},[s("pre",null,[s("code",null,[s("span",{class:"line"},"<마스터 노드의 퍼블릭 IPv4 주소> api.k8s.ap-northeast-2.aws.hello.com"),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),Hs=c(`<div class="hint-container info"><p class="hint-container-title">메모장에서 hosts 파일이 보이지 않는다면</p><p>메모장에서 hosts 파일이 보이지 않는다면, 열기 창에서 <strong>열기(O)</strong> 버튼 위의 **텍스트 문서(<em>.txt)**를 **모든 파일 (</em>.*)**로 바꿔주면 됩니다.</p></div><p><code>kubectl get nodes</code> 명령을 입력하여 노듣 목록을 출력해봅니다. 노드 4개가 완전히 생성된 뒤 Ready 상태가 될 때까지 시간이 다소 걸립니다. 노드가 일부만 보인다면 조금 더 기다렸다가 명령을 실행해봅니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl get nodes</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># NAME                  STATUS   ROLES           AGE    VERSION</span></span>
<span class="line"><span class="token comment"># i-01a4d885fd48acc61   Ready    control-plane   4m4s   v1.25.4</span></span>
<span class="line"><span class="token comment"># i-082f35a3d294a5e7d   Ready    node            54s    v1.25.4</span></span>
<span class="line"><span class="token comment"># i-0c48a73869254c456   Ready    node            37s    v1.25.4</span></span>
<span class="line"><span class="token comment"># i-0e5dad97f6500d40a   Ready    node            51s    v1.25.4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 kOps로 AWS에 쿠버네티스 클러스터를 생성해보았습니다. 다음 장에서는 Nginx 인그레스 컨트롤러를 설치한 뒤 로드밸런서(AWS의 ELB)에 웹 서버 디플로이먼트와 서비스를 연결하는 방법을 알아보겠습니다.</p><div class="hint-container info"><p class="hint-container-title">클러스터 삭제 방법</p><p>여기서 더 이상 진행하지 않고 클러스터를 삭제하려면 다음 명령을 실행합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kops delete cluster <span class="token parameter variable">--name</span> k8s.ap-northeast-2.aws.<span class="token operator">&lt;</span>구입한 도메인<span class="token operator">&gt;</span> <span class="token parameter variable">--yes</span></span>
<span class="line"><span class="token comment"># 또는</span></span>
<span class="line">kops delete cluster <span class="token parameter variable">--name</span> k8s.ap-northeast-2.aws.hello.com <span class="token parameter variable">--yes</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><hr>`,6);function Zs(h,Bs){const d=r("VPCard"),o=r("router-link"),e=r("FontIcon"),p=r("Tabs");return g(),k("div",null,[s("h1",f,[s("a",y,[s("span",null,b(h.$frontmatter.title)+" 관련",1)])]),a(d,u(m({title:"목차",desc:"언제나 최신 Kubernetes",link:"/k8s/always-up-to-date-kubernetes/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),s("nav",w,[s("ul",null,[s("li",null,[a(o,{to:"#s3-버킷-생성하기"},{default:l(()=>[n("S3 버킷 생성하기")]),_:1})]),s("li",null,[a(o,{to:"#ec2-키-페어-생성하기"},{default:l(()=>[n("EC2 키 페어 생성하기")]),_:1})]),s("li",null,[a(o,{to:"#route-53-호스팅-영역-생성하기"},{default:l(()=>[n("Route 53 호스팅 영역 생성하기")]),_:1}),s("ul",null,[s("li",null,[a(o,{to:"#도메인을-구입한-경우"},{default:l(()=>[n("도메인을 구입한 경우")]),_:1})]),s("li",null,[a(o,{to:"#도메인을-구입하지-않은-경우"},{default:l(()=>[n("도메인을 구입하지 않은 경우")]),_:1})])])]),s("li",null,[a(o,{to:"#yaml-파일-생성하기"},{default:l(()=>[n("YAML 파일 생성하기")]),_:1}),s("ul",null,[s("li",null,[a(o,{to:"#도메인을-구입한-경우-1"},{default:l(()=>[n("도메인을 구입한 경우")]),_:1})]),s("li",null,[a(o,{to:"#도메인을-구입하지-않은-경우-1"},{default:l(()=>[n("도메인을 구입하지 않은 경우")]),_:1})])])]),s("li",null,[a(o,{to:"#yaml-파일로-클러스터-생성하기"},{default:l(()=>[n("YAML 파일로 클러스터 생성하기")]),_:1}),s("ul",null,[s("li",null,[a(o,{to:"#도메인을-구입한-경우-2"},{default:l(()=>[n("도메인을 구입한 경우")]),_:1})]),s("li",null,[a(o,{to:"#도메인을-구입하지-않은-경우-2"},{default:l(()=>[n("도메인을 구입하지 않은 경우")]),_:1})])])])])]),x,a(d,u(m({title:"Unit 7.3 kOps로 클러스터 생성하기",desc:"언제나 최신 Kubernetes",link:"https://pyrasis.com/jHLsAlwaysUpToDateKubernetes/Unit07/03",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),I,S,A,T,O,s("ol",null,[C,s("li",null,[n("S3으로 이동 3 "),a(e,{icon:"iconfont icon-select"}),q,n(" 버튼 클릭")]),E,s("li",null,[n("AWS 리전은 "),a(e,{icon:"iconfont icon-select"}),P,n("로 설정")]),s("li",null,[a(e,{icon:"iconfont icon-select"}),R,n(" 버튼 클릭")])]),j,K,U,s("ol",null,[W,L,s("li",null,[a(e,{icon:"iconfont icon-select"}),F,n(" 메뉴 클릭")]),s("li",null,[a(e,{icon:"iconfont icon-select"}),M,n(" 버튼 클릭")]),s("li",null,[n("이름에 "),a(e,{icon:"iconfont icon-select"}),N,n(" 입력")]),s("li",null,[n("프라이빗 키 파일 형식을 "),a(e,{icon:"iconfont icon-select"}),D,n(" 선택")]),s("li",null,[a(e,{icon:"iconfont icon-select"}),V,n(" 버튼 클릭")])]),s("p",null,[n("이렇게 하면 "),a(e,{icon:"iconfont icon-token"}),Y,n(" 파일이 다운로드됩니다.")]),s("p",null,[n("다음 명령을 실행하여 Private Key인 "),a(e,{icon:"iconfont icon-token"}),z,n(" 에서 Public Key "),a(e,{icon:"iconfont icon-select"}),H,n("를 추출해냅니다.")]),a(p,{id:"95",data:[{id:'<FontIcon icon="iconfont icon-macos"/>macOS, <FontIcon icon="fa-brands fa-linux"/>리눅스'},{id:'<FontIcon icon="iconfont icon-powershell"/>윈도우 PowerShell'}],active:0},{title0:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-macos"}),n("macOS, "),a(e,{icon:"fa-brands fa-linux"}),n("리눅스")]),title1:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-powershell"}),n("윈도우 PowerShell")]),tab0:l(({value:t,isActive:i})=>[Z]),tab1:l(({value:t,isActive:i})=>[B]),_:1}),$,G,J,Q,X,s("ol",null,[ss,ns,s("li",null,[a(e,{icon:"iconfont icon-select"}),as,n(" 메뉴 클릭")]),s("li",null,[a(e,{icon:"iconfont icon-select"}),es,n(" 버튼 클릭")]),s("li",null,[n("도메인 이름에 "),a(e,{icon:"iconfont icon-select"}),ls,n(" 입력")]),s("li",null,[a(e,{icon:"iconfont icon-select"}),ts,n(" 버튼 클릭")])]),is,os,s("ol",null,[cs,ps,s("li",null,[a(e,{icon:"iconfont icon-select"}),rs,n(" 메뉴 클릭")]),s("li",null,[a(e,{icon:"iconfont icon-select"}),ds,n(" 버튼 클릭")]),s("li",null,[n("도메인 이름에 "),a(e,{icon:"iconfont icon-select"}),us,n(" 입력")]),s("li",null,[n("유형을 "),a(e,{icon:"iconfont icon-select"}),ms,n(" 선택")]),hs,vs,s("li",null,[a(e,{icon:"iconfont icon-select"}),ks,n(" 버튼 클릭")])]),bs,s("p",null,[n("@tab "),a(e,{icon:"iconfont icon-macos"}),n("macOS, "),a(e,{icon:"fa-brands fa-linux"}),n("리눅스")]),gs,s("p",null,[n("@tab "),a(e,{icon:"iconfont icon-powershell"}),n("윈도우 PowerShell")]),_s,s("blockquote",null,[a(e,{icon:"iconfont icon-yaml"}),fs]),ys,s("p",null,[n("@tab:active "),a(e,{icon:"iconfont icon-macos"}),n("macOS, "),a(e,{icon:"fa-brands fa-linux"}),n("리눅스")]),ws,s("p",null,[n("@tab "),a(e,{icon:"iconfont icon-powershell"}),n("윈도우 PowerShell")]),xs,a(p,{id:"257",data:[{id:'<FontIcon icon="iconfont icon-macos"/>macOS, <FontIcon icon="fa-brands fa-linux"/>리눅스'},{id:'<FontIcon icon="iconfont icon-powershell"/>윈도우 PowerShell'}],active:0},{title0:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-macos"}),n("macOS, "),a(e,{icon:"fa-brands fa-linux"}),n("리눅스")]),title1:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-powershell"}),n("윈도우 PowerShell")]),tab0:l(({value:t,isActive:i})=>[Is]),tab1:l(({value:t,isActive:i})=>[Ss]),_:1}),As,a(p,{id:"283",data:[{id:'<FontIcon icon="iconfont icon-macos"/>macOS, <FontIcon icon="fa-brands fa-linux"/>리눅스'},{id:'<FontIcon icon="iconfont icon-powershell"/>윈도우 PowerShell'}],active:0},{title0:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-macos"}),n("macOS, "),a(e,{icon:"fa-brands fa-linux"}),n("리눅스")]),title1:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-powershell"}),n("윈도우 PowerShell")]),tab0:l(({value:t,isActive:i})=>[Ts]),tab1:l(({value:t,isActive:i})=>[Os]),_:1}),Cs,s("p",null,[n("다음 명령을 입력하여 "),a(e,{icon:"fas fa-folder-open"}),qs,n("에 방금 생성한 클러스터의 설정을 추가합니다.")]),Es,s("ol",null,[Ps,Rs,s("li",null,[a(e,{icon:"iconfont icon-select"}),js,n(" 메뉴 클릭")]),Ks,s("li",null,[n("세부 정보에 "),a(e,{icon:"iconfont icon-select"}),Us,n(" 부분을 복사(<마스터 노드의 퍼블릭 IPv4 주소>)")])]),Ws,a(p,{id:"340",data:[{id:'<FontIcon icon="iconfont icon-macos"/>macOS, <FontIcon icon="fa-brands fa-linux"/>리눅스'},{id:'<FontIcon icon="fa-brands fa-windows"/>윈도우'}],active:0},{title0:l(({value:t,isActive:i})=>[a(e,{icon:"iconfont icon-macos"}),n("macOS, "),a(e,{icon:"fa-brands fa-linux"}),n("리눅스")]),title1:l(({value:t,isActive:i})=>[a(e,{icon:"fa-brands fa-windows"}),n("윈도우")]),tab0:l(({value:t,isActive:i})=>[Ls,Fs,s("blockquote",null,[a(e,{icon:"fas fa-file-lines"}),Ms]),Ns]),tab1:l(({value:t,isActive:i})=>[Ds,Vs,s("blockquote",null,[a(e,{icon:"fas fa-file-lines"}),n(),Ys]),zs]),_:1}),Hs])}const Js=v(_,[["render",Zs],["__file","07C.html.vue"]]),Qs=JSON.parse('{"path":"/k8s/always-up-to-date-kubernetes/07C.html","title":"07C. kOps로 클러스터 생성하기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"07C. kOps로 클러스터 생성하기","description":"언제나 최신 Kubernetes > 07C. kOps로 클러스터 생성하기","category":["Kubernetes"],"tag":["crashcourse","digitalocean","kubernetes","minkube","kubctl"],"head":[[{"meta":null},{"property":"og:title","content":"언제나 최신 Kubernetes > 07C. kOps로 클러스터 생성하기"},{"property":"og:description","content":"07C. kOps로 클러스터 생성하기"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/k8s/always-up-to-date-kubernetes/07C.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/k8s/always-up-to-date-kubernetes/07C.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"07C. kOps로 클러스터 생성하기"}],["meta",{"property":"og:description","content":"언제나 최신 Kubernetes > 07C. kOps로 클러스터 생성하기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit07/5.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit07/5.png"}],["meta",{"name":"twitter:image:alt","content":"07C. kOps로 클러스터 생성하기"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"digitalocean"}],["meta",{"property":"article:tag","content":"kubernetes"}],["meta",{"property":"article:tag","content":"minkube"}],["meta",{"property":"article:tag","content":"kubctl"}],["meta",{"property":"article:published_time","content":"2022-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"07C. kOps로 클러스터 생성하기\\",\\"image\\":[\\"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit07/5.png\\"],\\"datePublished\\":\\"2022-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"date":"2022-10-22T00:00:00.000Z","isOrignial":false,"cover":"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit07/5.png"},"headers":[{"level":2,"title":"S3 버킷 생성하기","slug":"s3-버킷-생성하기","link":"#s3-버킷-생성하기","children":[]},{"level":2,"title":"EC2 키 페어 생성하기","slug":"ec2-키-페어-생성하기","link":"#ec2-키-페어-생성하기","children":[]},{"level":2,"title":"Route 53 호스팅 영역 생성하기","slug":"route-53-호스팅-영역-생성하기","link":"#route-53-호스팅-영역-생성하기","children":[{"level":3,"title":"도메인을 구입한 경우","slug":"도메인을-구입한-경우","link":"#도메인을-구입한-경우","children":[]},{"level":3,"title":"도메인을 구입하지 않은 경우","slug":"도메인을-구입하지-않은-경우","link":"#도메인을-구입하지-않은-경우","children":[]}]},{"level":2,"title":"YAML 파일 생성하기","slug":"yaml-파일-생성하기","link":"#yaml-파일-생성하기","children":[{"level":3,"title":"도메인을 구입한 경우","slug":"도메인을-구입한-경우-1","link":"#도메인을-구입한-경우-1","children":[]},{"level":3,"title":"도메인을 구입하지 않은 경우","slug":"도메인을-구입하지-않은-경우-1","link":"#도메인을-구입하지-않은-경우-1","children":[]}]},{"level":2,"title":"YAML 파일로 클러스터 생성하기","slug":"yaml-파일로-클러스터-생성하기","link":"#yaml-파일로-클러스터-생성하기","children":[{"level":3,"title":"도메인을 구입한 경우","slug":"도메인을-구입한-경우-2","link":"#도메인을-구입한-경우-2","children":[]},{"level":3,"title":"도메인을 구입하지 않은 경우","slug":"도메인을-구입하지-않은-경우-2","link":"#도메인을-구입하지-않은-경우-2","children":[]}]}],"git":{"createdTime":1712118043000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":6.09,"words":1827},"filePathRelative":"k8s/always-up-to-date-kubernetes/07C.md","localizedDate":"2022년 10월 22일","excerpt":"\\n"}');export{Js as comp,Qs as data};
