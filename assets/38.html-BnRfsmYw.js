import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as e,t as y,b as t,w as n,n as i,g as s,e as c,r as o,o as w,d as l}from"./app-U_bew1in.js";const m={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},k={class:"table-of-contents"},_=e("hr",null,null,-1),b=c('<h2 id="project-8-part-three" tabindex="-1"><a class="header-anchor" href="#project-8-part-three"><span>Project 8, part three</span></a></h2><p>There are many well-known quotes from Shakespeare, but there‚Äôs one I think is particularly apt today: ‚Äúthe fool doth think he is wise, but the wise man knows himself to be a fool.‚Äù I don‚Äôt know where you‚Äôd rank yourself in terms of Auto Layout knowledge, but I hope you‚Äôre at least aware that it‚Äôs a really big, complex space to work in!</p><p>In my <a href="http://vimeo.com/291590798" target="_blank" rel="noopener noreferrer">talk at NSSpain 2018</a> I said ‚ÄúAuto Layout makes hard things easy, and easy things hard‚Äù ‚Äì you‚Äôll find you can do relatively advanced layouts like today‚Äôs in about an hour, but occasionally you‚Äôll find yourself wanting one specific layout constraint that is really hard to get right.</p><p>Fortunately for all of us, this part of your Auto Layout learning is complete, so it‚Äôs time for us to review what you‚Äôve learned.</p><p><strong>Today you should work through the wrap up chapter for project 8, complete its review, then work through all three of its challenges.</strong></p><h3 id="wrap-up" tabindex="-1"><a class="header-anchor" href="#wrap-up"><span>Wrap up</span></a></h3>',6),v={class:"hint-container details"},j=e("summary",null,"Wrap up",-1),x=c('<p>Yes, it took quite a lot of user interface code to get this project going, but I hope it has shown you that you can make some great games using just the UIKit tools you already know. Building user interfaces programmatically is obviously much less visual than using storyboards, but the flip side is that everything is under your control ‚Äì there are no connections happening behind the scenes.</p><p>Of course, at the same time as making another game, you&#39;ve made several steps forward in your iOS development journey, this time learning about <code>addTarget()</code>, <code>enumerated()</code>, <code>joined()</code>, <code>replacingOccurrences()</code>, and more.</p><h4 id="review-what-you-learned" tabindex="-1"><a class="header-anchor" href="#review-what-you-learned"><span>Review what you learned</span></a></h4><p>Anyone can sit through a tutorial, but it takes actual work to remember what was taught. It‚Äôs my job to make sure you take as much from these tutorials as possible, so I‚Äôve prepared a short review to help you check your learning.</p><p><a href="https://www.hackingwithswift.com/review/hws/project-8-7-swifty-words" target="_blank" rel="noopener noreferrer">Click here to review what you learned in project 8.</a></p><h4 id="challenge" tabindex="-1"><a class="header-anchor" href="#challenge"><span>Challenge</span></a></h4><p>One of the best ways to learn is to write your own code as often as possible, so here are three ways you should try extending this app to make sure you fully understand what‚Äôs going on:</p><ol><li>Use the techniques you learned in project 2 to draw a thin gray line around the buttons view, to make it stand out from the rest of the UI.</li><li>If the user enters an incorrect guess, show an alert telling them they are wrong. You‚Äôll need to extend the <code>submitTapped()</code> method so that if <code>firstIndex(of:)</code> failed to find the guess you show the alert.</li><li>Try making the game also deduct points if the player makes an incorrect guess. Think about how you can move to the next level ‚Äì we can‚Äôt use a simple division remainder on the player‚Äôs <code>score</code> any more, because they might have lost some points.</li></ol>',8),D=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"Wrap up - Additional"),e("ul",null,[e("li",null,[e("a",{href:"https://www.hackingwithswift.com/review/hws/project-8-7-swifty-words",target:"_blank",rel:"noopener noreferrer"},"Review for Project 8: 7 Swifty Words")])])],-1),S=e("p",null,"Once you‚Äôre done, tell other people: you‚Äôve built another great app for iOS, and you‚Äôve learned how to build a complete user interface entirely in code.",-1),T=e("p",null,"You should be proud of what you‚Äôve accomplished ‚Äì keep it up!",-1),I=e("hr",null,null,-1);function P(h,O){const a=o("router-link"),r=o("VPCard"),p=o("VidStack");return w(),d("div",null,[e("h1",f,[e("a",g,[e("span",null,y(h.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e("nav",k,[e("ul",null,[e("li",null,[t(a,{to:"#project-8-part-three"},{default:n(()=>[l("Project 8, part three")]),_:1}),e("ul",null,[e("li",null,[t(a,{to:"#wrap-up"},{default:n(()=>[l("Wrap up")]),_:1})])])])])]),_,t(r,i(s({title:"100 Days of Swift - Day 38",desc:"Project 8, part three",link:"https://www.hackingwithswift.com/100/38",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(213,52,58,0.2)"})),null,16),b,e("details",v,[j,t(r,i(s({title:"100 Days of Swift - Day 38 - Wrap up",desc:"Wrap up",link:"https://www.hackingwithswift.com/read/8/6/wrap-up",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(213,52,58,0.2)"})),null,16),t(p,{src:"youtube/cODcGmJM-OQ"}),x]),D,S,T,I])}const C=u(m,[["render",P],["__file","38.html.vue"]]),R=JSON.parse('{"path":"/swift/100-days-of-swift/38.html","title":"Day 38","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Day 38","description":"100 Days of Swift > Day 38","category":["Swift"],"tag":["crashcourse","paul-hudson","swift","hacking-with-swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"100 Days of Swift > Day 38"},{"property":"og:description","content":"Day 38"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/100-days-of-swift/38.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/swift/100-days-of-swift/38.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"Day 38"}],["meta",{"property":"og:description","content":"100 Days of Swift > Day 38"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"paul-hudson"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"hacking-with-swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day 38\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Project 8, part three","slug":"project-8-part-three","link":"#project-8-part-three","children":[{"level":3,"title":"Wrap up","slug":"wrap-up","link":"#wrap-up","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":2.26,"words":678},"filePathRelative":"swift/100-days-of-swift/38.md","localizedDate":"2023ÎÖÑ 12Ïõî 27Ïùº","excerpt":"\\n\\n<hr>\\n"}');export{C as comp,R as data};
