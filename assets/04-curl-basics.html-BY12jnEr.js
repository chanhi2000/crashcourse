import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,a as s,t as b,b as t,w as e,n as h,g as k,d as n,e as p,r as o,o as g}from"./app-U_bew1in.js";const f={},y={id:"frontmatter-title-관련",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},q=s("hr",null,null,-1),T=p(`<hr><p>Now that we understand how curl handles URLs and options, let&#39;s talk about specific features.</p><h2 id="version" tabindex="-1"><a class="header-anchor" href="#version"><span>Version</span></a></h2><p><code>--version</code> (<code>-V</code>) knows everything about the installed version of curl:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-V</span></span>
<span class="line"><span class="token comment"># ➊ curl 8.2.1 (x86_64-alpine-linux-musl) libcurl/8.2.1 OpenSSL/3.1.2 zlib/1.2.13 brotli/1.0.9 libidn2/2.3.4 nghttp2/1.55.1</span></span>
<span class="line"><span class="token comment"># ➋ Release-Date: 2023-07-26</span></span>
<span class="line"><span class="token comment"># ➌ Protocols: dict file ftp ftps gopher gophers http https imap imaps mqtt pop3 pop3s rtsp smb smbs smtp smtps telnet tftp ws wss</span></span>
<span class="line"><span class="token comment"># ➍ Features: alt-svc AsynchDNS brotli HSTS HTTP2 HTTPS-proxy IDN IPv6 Largefile libz NTLM NTLM_WB SSL threadsafe TLS-SRP UnixSockets</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It lists (line by line)</p><ul><li>➊ versions of curl itself and its dependencies,</li><li>➋ the release date,</li><li>➌ available protocols, and</li><li>➍ enabled features.</li></ul><hr><h2 id="verbose" tabindex="-1"><a class="header-anchor" href="#verbose"><span>Verbose</span></a></h2>`,9),w=s("p",null,[s("code",null,"--verbose"),n(" ("),s("code",null,"-v"),n(") makes curl verbose, which is useful for debugging:")],-1),C=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"-v"),n(" http://httpbin/uuid")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# {")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "uuid": "dfc032c7-7452-4b21-aedb-3d80787e9946"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# }")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# * processing: http://httpbin/uuid")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# *   Trying 172.19.0.2:80...")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# * Connected to httpbin (172.19.0.2) port 80")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# > GET /uuid HTTP/1.1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# > Host: httpbin")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# > User-Agent: curl/8.2.1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# > Accept: */*")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# > ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < HTTP/1.1 200 OK")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < Access-Control-Allow-Credentials: true")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < Access-Control-Allow-Origin: *")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < Content-Type: application/json; charset=utf-8")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < Date: Fri, 15 Sep 2023 06:35:21 GMT")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < Content-Length: 53")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# < ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# { [53 bytes data]")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# * Connection #0 to host httpbin left intact")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),A=s("p",null,[n("If "),s("code",null,"--verbose"),n(" is not enough, try "),s("code",null,"--trace"),n(" (the single "),s("code",null,"-"),n(" sends the trace output to stdout):")],-1),j=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"--trace"),n(" - http://httpbin/uuid")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info: processing: http://httpbin/uuid")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info:   Trying 172.19.0.2:80...")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info: Connected to httpbin (172.19.0.2) port 80")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# => Send header, 74 bytes (0x4a)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 47 45 54 20 2f 75 75 69 64 20 48 54 54 50 2f 31 GET /uuid HTTP/1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 2e 31 0d 0a 48 6f 73 74 3a 20 68 74 74 70 62 69 .1..Host: httpbi")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0020: 6e 0d 0a 55 73 65 72 2d 41 67 65 6e 74 3a 20 63 n..User-Agent: c")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0030: 75 72 6c 2f 38 2e 32 2e 31 0d 0a 41 63 63 65 70 url/8.2.1..Accep")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0040: 74 3a 20 2a 2f 2a 0d 0a 0d 0a                   t: */*....")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 17 bytes (0x11)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 48 54 54 50 2f 31 2e 31 20 32 30 30 20 4f 4b 0d HTTP/1.1 200 OK.")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 0a                                              .")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 40 bytes (0x28)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 41 63 63 65 73 73 2d 43 6f 6e 74 72 6f 6c 2d 41 Access-Control-A")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 6c 6c 6f 77 2d 43 72 65 64 65 6e 74 69 61 6c 73 llow-Credentials")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0020: 3a 20 74 72 75 65 0d 0a                         : true..")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 32 bytes (0x20)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 41 63 63 65 73 73 2d 43 6f 6e 74 72 6f 6c 2d 41 Access-Control-A")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 6c 6c 6f 77 2d 4f 72 69 67 69 6e 3a 20 2a 0d 0a llow-Origin: *..")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 47 bytes (0x2f)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 43 6f 6e 74 65 6e 74 2d 54 79 70 65 3a 20 61 70 Content-Type: ap")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 70 6c 69 63 61 74 69 6f 6e 2f 6a 73 6f 6e 3b 20 plication/json; ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0020: 63 68 61 72 73 65 74 3d 75 74 66 2d 38 0d 0a    charset=utf-8..")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 37 bytes (0x25)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 44 61 74 65 3a 20 46 72 69 2c 20 31 35 20 53 65 Date: Fri, 15 Se")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 70 20 32 30 32 33 20 30 36 3a 33 35 3a 33 36 20 p 2023 06:35:36 ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0020: 47 4d 54 0d 0a                                  GMT..")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 20 bytes (0x14)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 43 6f 6e 74 65 6e 74 2d 4c 65 6e 67 74 68 3a 20 Content-Length: ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 35 33 0d 0a                                     53..")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 2 bytes (0x2)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: 0d 0a                                           ..")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv data, 53 bytes (0x35)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'# 0000: 7b 0a 20 20 22 75 75 69 64 22 3a 20 22 38 30 39 {.  "uuid": "809')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0010: 65 39 33 33 62 2d 34 62 66 32 2d 34 39 31 33 2d e933b-4bf2-4913-")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0020: 39 36 30 64 2d 61 63 34 35 64 30 64 61 32 39 30 960d-ac45d0da290")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'# 0030: 32 22 0a 7d 0a                                  2".}.')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# {")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "uuid": "809e933b-4bf2-4913-960d-ac45d0da2902"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# }")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info: Connection #0 to host httpbin left intact")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),R=s("p",null,[n("Or "),s("code",null,"--trace-ascii"),n(":")],-1),I=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(" --trace-ascii - http://httpbin/uuid")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info: processing: http://httpbin/uuid")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info:   Trying 172.19.0.2:80...")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info: Connected to httpbin (172.19.0.2) port 80")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# => Send header, 74 bytes (0x4a)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: GET /uuid HTTP/1.1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0014: Host: httpbin")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0023: User-Agent: curl/8.2.1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 003b: Accept: */*")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0048: ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 17 bytes (0x11)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: HTTP/1.1 200 OK")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 40 bytes (0x28)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: Access-Control-Allow-Credentials: true")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 32 bytes (0x20)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: Access-Control-Allow-Origin: *")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 47 bytes (0x2f)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: Content-Type: application/json; charset=utf-8")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 37 bytes (0x25)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: Date: Fri, 15 Sep 2023 06:36:59 GMT")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 20 bytes (0x14)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: Content-Length: 53")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv header, 2 bytes (0x2)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# 0000: ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# <= Recv data, 53 bytes (0x35)")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'# 0000: {.  "uuid": "6a4613f5-d83a-4bc3-99b2-589df9391396".}.')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# {")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "uuid": "6a4613f5-d83a-4bc3-99b2-589df9391396"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# }")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# == Info: Connection #0 to host httpbin left intact")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),P=s("p",null,[n("Use "),s("code",null,"--write-out"),n(" ("),s("code",null,"-w"),n(") to extract specific information about the response. It supports over 50 variables. For example, here we extract the status code and response content type:")],-1),S=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token parameter variable"},"-w"),n(),s("span",{class:"token string"},[n('"'),s("span",{class:"token entity",title:"\\n"},"\\n"),n("status: %{response_code}"),s("span",{class:"token entity",title:"\\n"},"\\n"),n('type: %{content_type}"')])]),n(`
`),s("span",{class:"line"},"  http://httpbin/status/429"),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# status: 429")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# type: text/plain; charset=utf-8  ")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),H=s("p",null,"Or some response headers:",-1),O=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token parameter variable"},"-w"),n(),s("span",{class:"token string"},[n('"'),s("span",{class:"token entity",title:"\\n"},"\\n"),n("date: %header{date}"),s("span",{class:"token entity",title:"\\n"},"\\n"),n('length: %header{content-length}"')])]),n(`
`),s("span",{class:"line"},"  http://httpbin/status/429"),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# ")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# date: Fri, 15 Sep 2023 06:37:45 GMT")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# length: 0  ")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),U=p(`<hr><h2 id="downloads" tabindex="-1"><a class="header-anchor" href="#downloads"><span>Downloads</span></a></h2><p><code>--remote-name</code> (<code>-O</code>) tells curl to save the output to a file specified by the URL (specifically, by the part after the last <code>/</code>). It&#39;s often used together with <code>--output-dir</code>, which tells curl where exactly to save the file:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> --output-dir /tmp <span class="token parameter variable">-O</span> http://httpbin/uuid</span>
<span class="line"></span>
<span class="line"><span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> /tmp/uuid</span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;uuid&quot;: &quot;d07da12c-83e1-4b30-8840-059a6dcf1666&quot;</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the directory does not exist, <code>--output-dir</code> won&#39;t create it for you. Use <code>--create-dirs</code> for this:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> --output-dir /tmp/some/place --create-dirs</span>
<span class="line">  <span class="token parameter variable">-O</span> http://httpbin/uuid</span>
<span class="line"></span>
<span class="line"><span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> /tmp/some/place/uuid</span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;uuid&quot;: &quot;e4e79cd5-053c-4d0c-834e-d9bddd7d00f2&quot;</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use <code>--max-filesize</code> (in bytes) to limit the allowed response size, but often it isn&#39;t known in advance, so it may not work.</p><hr><h2 id="retry" tabindex="-1"><a class="header-anchor" href="#retry"><span>Retry</span></a></h2><p>Sometimes the remote host is temporarily unavailable. To deal with these situations, curl provides the <code>--retry [num]</code> option. If a request fails, curl will try it again, but no more than num times:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">--retry</span> <span class="token number">3</span> http://httpbin/unstable</span>
<span class="line"><span class="token comment"># HTTP/1.1 200 OK</span></span>
<span class="line"><span class="token comment"># Access-Control-Allow-Credentials: true</span></span>
<span class="line"><span class="token comment"># Access-Control-Allow-Origin: *</span></span>
<span class="line"><span class="token comment"># Content-Type: text/plain; charset=utf-8</span></span>
<span class="line"><span class="token comment"># Date: Fri, 15 Sep 2023 06:39:56 GMT</span></span>
<span class="line"><span class="token comment"># Content-Length: 0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>(this URL fails 50% of the time)</p></blockquote><p>You can set the maximum time curl will spend retrying with <code>--retry-max-time</code> (in seconds) or the delay between retries with <code>--retry-delay</code> (also in seconds):</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">--retry</span> <span class="token number">3</span> http://httpbin/unstable</span>
<span class="line">  --retry-max-time <span class="token number">2</span></span>
<span class="line">  --retry-delay <span class="token number">1</span></span>
<span class="line"><span class="token comment"># HTTP/1.1 200 OK</span></span>
<span class="line"><span class="token comment"># Access-Control-Allow-Credentials: true</span></span>
<span class="line"><span class="token comment"># Access-Control-Allow-Origin: *</span></span>
<span class="line"><span class="token comment"># Content-Type: text/plain; charset=utf-8</span></span>
<span class="line"><span class="token comment"># Date: Fri, 15 Sep 2023 06:40:27 GMT</span></span>
<span class="line"><span class="token comment"># Content-Length: 0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For curl, &quot;request failed&quot; means one of the following HTTP codes: 408, 429, 500, 502, 503 or 504. If the request fails with a &quot;connection refused&quot; error, curl will not retry. But you can change this with <code>--retry-connrefused</code>, or even enable retries for all kinds of problems with <code>--retry-all-errors</code>.</p><hr><h2 id="uploads" tabindex="-1"><a class="header-anchor" href="#uploads"><span>Uploads</span></a></h2><p>Curl is often used to download data from the server, but you can also upload it. Use the <code>--upload-file</code> (<code>-T</code>) option:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> hello <span class="token operator">&gt;</span> /tmp/hello.txt <span class="token operator">&amp;&amp;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-T</span> /tmp/hello.txt http://httpbin/put</span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;args&quot;: {},</span></span>
<span class="line"><span class="token comment">#   &quot;headers&quot;: {</span></span>
<span class="line"><span class="token comment">#     &quot;Accept&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;*/*&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;Content-Length&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;6&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;Host&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;httpbin&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;User-Agent&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;curl/8.2.1&quot;</span></span>
<span class="line"><span class="token comment">#     ]</span></span>
<span class="line"><span class="token comment">#   },</span></span>
<span class="line"><span class="token comment">#   &quot;method&quot;: &quot;PUT&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;origin&quot;: &quot;172.19.0.3:44058&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;url&quot;: &quot;http://httpbin/put&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;data&quot;: &quot;data:application/octet-stream;base64,aGVsbG8K&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;files&quot;: {},</span></span>
<span class="line"><span class="token comment">#   &quot;form&quot;: {},</span></span>
<span class="line"><span class="token comment">#   &quot;json&quot;: null</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For HTTP uploads, curl uses the PUT method.</p><hr><h2 id="transfer-controls" tabindex="-1"><a class="header-anchor" href="#transfer-controls"><span>Transfer controls</span></a></h2><p>To stop slow transfers, set the minimum allowed download speed (in bytes per second) with <code>--speed-limit</code>. By default, curl checks the speed in 30 seconds intervals, but you can change this with <code>--speed-time</code>.</p><p>For example, allow no less than 10 bytes/sec during a 3-second interval:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-v</span> --speed-limit <span class="token number">10</span> --speed-time <span class="token number">3</span> http://httpbin/get</span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;args&quot;: {},</span></span>
<span class="line"><span class="token comment">#   &quot;headers&quot;: {</span></span>
<span class="line"><span class="token comment">#     &quot;Accept&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;*/*&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;Host&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;httpbin&quot;</span></span>
<span class="line"><span class="token comment">#     ],</span></span>
<span class="line"><span class="token comment">#     &quot;User-Agent&quot;: [</span></span>
<span class="line"><span class="token comment">#       &quot;curl/8.2.1&quot;</span></span>
<span class="line"><span class="token comment">#     ]</span></span>
<span class="line"><span class="token comment">#   },</span></span>
<span class="line"><span class="token comment">#   &quot;method&quot;: &quot;GET&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;origin&quot;: &quot;172.19.0.3:58696&quot;,</span></span>
<span class="line"><span class="token comment">#   &quot;url&quot;: &quot;http://httpbin/get&quot;</span></span>
<span class="line"><span class="token comment"># }</span></span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># * processing: http://httpbin/get</span></span>
<span class="line"><span class="token comment"># *   Trying 172.19.0.2:80...</span></span>
<span class="line"><span class="token comment"># * Connected to httpbin (172.19.0.2) port 80</span></span>
<span class="line"><span class="token comment"># &gt; GET /get HTTP/1.1</span></span>
<span class="line"><span class="token comment"># &gt; Host: httpbin</span></span>
<span class="line"><span class="token comment"># &gt; User-Agent: curl/8.2.1</span></span>
<span class="line"><span class="token comment"># &gt; Accept: */*</span></span>
<span class="line"><span class="token comment"># &gt; </span></span>
<span class="line"><span class="token comment"># &lt; HTTP/1.1 200 OK</span></span>
<span class="line"><span class="token comment"># &lt; Access-Control-Allow-Credentials: true</span></span>
<span class="line"><span class="token comment"># &lt; Access-Control-Allow-Origin: *</span></span>
<span class="line"><span class="token comment"># &lt; Content-Type: application/json; charset=utf-8</span></span>
<span class="line"><span class="token comment"># &lt; Date: Fri, 15 Sep 2023 06:41:38 GMT</span></span>
<span class="line"><span class="token comment"># &lt; Content-Length: 236</span></span>
<span class="line"><span class="token comment"># &lt; </span></span>
<span class="line"><span class="token comment"># { [236 bytes data]</span></span>
<span class="line"><span class="token comment"># * Connection #0 to host httpbin left intact</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To limit bandwidth usage, set <code>--limit-rate</code>. It accepts anything from bytes to petabytes:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> --limit-rate <span class="token number">3</span> http://httpbin/get</span>
<span class="line"><span class="token function">curl</span> --limit-rate 3k http://httpbin/get</span>
<span class="line"><span class="token function">curl</span> --limit-rate 3m http://httpbin/get</span>
<span class="line"><span class="token function">curl</span> --limit-rate 3g http://httpbin/get</span>
<span class="line"><span class="token function">curl</span> --limit-rate 3t http://httpbin/get</span>
<span class="line"><span class="token function">curl</span> --limit-rate 3p http://httpbin/get</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Another thing to limit is the number of concurrent requests (<em>e.g.</em> if you download a lot of files). Use <code>--rate</code> for this. It accepts seconds, minutes, hours or days:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">--rate</span> <span class="token number">3</span>/s http://httpbin/anything/<span class="token punctuation">[</span><span class="token number">1</span>-9<span class="token punctuation">]</span>.txt</span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">--rate</span> <span class="token number">3</span>/m http://httpbin/anything/<span class="token punctuation">[</span><span class="token number">1</span>-9<span class="token punctuation">]</span>.txt</span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">--rate</span> <span class="token number">3</span>/h http://httpbin/anything/<span class="token punctuation">[</span><span class="token number">1</span>-9<span class="token punctuation">]</span>.txt</span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">--rate</span> <span class="token number">3</span>/d http://httpbin/anything/<span class="token punctuation">[</span><span class="token number">1</span>-9<span class="token punctuation">]</span>.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="name-resolving" tabindex="-1"><a class="header-anchor" href="#name-resolving"><span>Name resolving</span></a></h2><p>By default, curl uses your DNS server to resolve hostnames to IP addresses. But you can force it to resolve to a specific IP with <code>--resolve</code>:</p>`,32),G=s("blockquote",null,[s("p",null,"(this one fails because no one is listening on 127.0.0.1)")],-1),L=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"--resolve"),n(" httpbingo.org:8080:127.0.0.1")]),n(`
`),s("span",{class:"line"},"  http://httpbingo.org:8080/get"),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# curl: (7) Failed to connect to httpbingo.org port 8080 after 0 ms: Couldn't connect to server")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# (exit status 7)  ")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),F=s("p",null,[n("Or you can even map a hostname:port pair to another hostname:port pair with "),s("code",null,"--connect-to"),n(":")],-1),D=s("blockquote",null,[s("p",null,"(this one works fine)")],-1),M=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(" --connect-to httpbingo.org:8080:httpbin:80")]),n(`
`),s("span",{class:"line"},"  http://httpbingo.org:8080/get"),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# {")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "args": {},')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "headers": {')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#     "Accept": [')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#       "*/*"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#     ],")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#     "Host": [')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#       "httpbingo.org:8080"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#     ],")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#     "User-Agent": [')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#       "curl/8.2.1"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#     ]")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#   },")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "method": "GET",')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "origin": "172.19.0.3:60902",')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "url": "http://httpbingo.org:8080/get"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# }  ")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),N=s("hr",null,null,-1),V={class:"hint-container info"},E=s("p",{class:"hint-container-title"},"Connections",-1),K=s("p",null,"There are also some network connection-level settings.",-1),z=s("p",null,"Use a specific network interface",-1),B=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"--interactive"),n(" enp3s0 https://example.com")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),Y=s("p",null,"local port number range",-1),Z=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(" --local-port "),s("span",{class:"token number"},"1000"),n("-3000 https://example.com")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),$=s("p",null,"TCP keep alive",-1),W=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(),s("span",{class:"token parameter variable"},"--keepalive"),n(" - "),s("span",{class:"token function"},"time"),n(),s("span",{class:"token number"},"23"),n(" https://example.com")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),J=s("p",null,"DNS Servers (when c-ares is used)",-1),Q=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(" --dns-ipv4-addr "),s("span",{class:"token number"},"10.1"),n(".2.3 https://example.com")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),X=s("hr",null,null,-1),ss=s("h2",{id:"timeouts",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#timeouts"},[s("span",null,"Timeouts")])],-1),ns=s("p",null,[n("To limit the maximum amount of time curl will spend interacting with a single URL, use "),s("code",null,"--max-time"),n(" (in fractional seconds):")],-1),es=s("blockquote",null,[s("p",null,"(this one fails)")],-1),as=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(" --max-time "),s("span",{class:"token number"},"0.5"),n(" http:/httpbin/delay/1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# curl: (28) Operation timed out after 500 milliseconds with 0 bytes received")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#  (exit status 28)")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),ls=s("p",null,[n("Instead of limiting the total time, you can use "),s("code",null,"--connect-timeout"),n(" to limit only the time it takes to establish a network connection:")],-1),ts=s("blockquote",null,[s("p",null,"(this one works fine)")],-1),is=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token function"},"curl"),n(" --connect-timeout "),s("span",{class:"token number"},"0.5"),n(" http:/httpbin/delay/1")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# {")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "args": {},')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "headers": {')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#     "Accept": [')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#       "*/*"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#     ],")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#     "Host": [')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#       "httpbin"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#     ],")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#     "User-Agent": [')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#       "curl/8.2.1"')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#     ]")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"#   },")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "method": "GET",')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "origin": "172.19.0.3:34422",')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "url": "http://httpbin/delay/1",')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "data": "",')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "files": {},')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "form": {},')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},'#   "json": null')]),n(`
`),s("span",{class:"line"},[s("span",{class:"token comment"},"# }")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),cs=s("hr",null,null,-1),os=s("h2",{id:"credentials",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#credentials"},[s("span",null,"Credentials")])],-1),ps=s("code",null,".netrc",-1),rs=p(`<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">machine httpbin</span>
<span class="line">login alice</span>
<span class="line">password cheese</span>
<span class="line"></span>
<span class="line">machine example.com</span>
<span class="line">login bob</span>
<span class="line">password nuggets</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ds=s("code",null,"--netrc",-1),ms=s("code",null,"$HOME/.netrc",-1),us=p(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;machine httpbin<span class="token entity" title="\\n">\\n</span>login alice<span class="token entity" title="\\n">\\n</span>password cheese&quot;</span> <span class="token operator">&gt;</span> /tmp/netrc <span class="token operator">&amp;&amp;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">curl</span> --netrc-file /tmp/netrc</span>
<span class="line">  http://httpbin/basic-auth/alice/cheese</span>
<span class="line"><span class="token comment"># {</span></span>
<span class="line"><span class="token comment">#   &quot;authorized&quot;: true,</span></span>
<span class="line"><span class="token comment">#   &quot;user&quot;: &quot;alice&quot;</span></span>
<span class="line"><span class="token comment"># }  </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="exit-status" tabindex="-1"><a class="header-anchor" href="#exit-status"><span>Exit status</span></a></h2><p>When curl exits, it returns a numeric value to the shell. For success, it&#39;s 0, and for errors, there are about <a href="https://everything.curl.dev/usingcurl/returns" target="_blank" rel="noopener noreferrer">100 different values</a>.</p><p>For example, here is an exit status 7 (failed to connect to host):</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> http://httpbin:1313/get</span>
<span class="line"><span class="token comment"># curl: (7) Failed to connect to httpbin port 1313 after 1 ms: Couldn&#39;t connect to server</span></span>
<span class="line"><span class="token comment">#  (exit status 7)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can access the exit status through the <code>$?</code> shell variable.</p><hr>`,8);function vs(d,bs){const i=o("router-link"),m=o("VPCard"),c=o("Tabs"),r=o("FontIcon");return g(),v("div",null,[s("h1",y,[s("a",_,[s("span",null,b(d.$frontmatter.title)+" 관련",1)])]),s("nav",x,[s("ul",null,[s("li",null,[t(i,{to:"#version"},{default:e(()=>[n("Version")]),_:1})]),s("li",null,[t(i,{to:"#verbose"},{default:e(()=>[n("Verbose")]),_:1})]),s("li",null,[t(i,{to:"#downloads"},{default:e(()=>[n("Downloads")]),_:1})]),s("li",null,[t(i,{to:"#retry"},{default:e(()=>[n("Retry")]),_:1})]),s("li",null,[t(i,{to:"#uploads"},{default:e(()=>[n("Uploads")]),_:1})]),s("li",null,[t(i,{to:"#transfer-controls"},{default:e(()=>[n("Transfer controls")]),_:1})]),s("li",null,[t(i,{to:"#name-resolving"},{default:e(()=>[n("Name resolving")]),_:1})]),s("li",null,[t(i,{to:"#timeouts"},{default:e(()=>[n("Timeouts")]),_:1})]),s("li",null,[t(i,{to:"#credentials"},{default:e(()=>[n("Credentials")]),_:1})]),s("li",null,[t(i,{to:"#exit-status"},{default:e(()=>[n("Exit status")]),_:1})])])]),q,t(m,h(k({title:"4. Curl basics",desc:"Mastering curl - interactive text guide",link:"https://antonz.org/mastering-curl/#curl-basics",logo:"https://antonz.org/assets/favicon/favicon.ico",background:"rgba(22,25,35,0.2)"})),null,16),T,t(c,{id:"48",data:[{id:"verbose"},{id:"trace"},{id:"trace-ascii"}],active:0},{title0:e(({value:a,isActive:l})=>[n("verbose")]),title1:e(({value:a,isActive:l})=>[n("trace")]),title2:e(({value:a,isActive:l})=>[n("trace-ascii")]),tab0:e(({value:a,isActive:l})=>[w,C]),tab1:e(({value:a,isActive:l})=>[A,j]),tab2:e(({value:a,isActive:l})=>[R,I]),_:1}),P,t(c,{id:"71",data:[{id:"Case 1"},{id:"Case 2"}],active:0},{title0:e(({value:a,isActive:l})=>[n("Case 1")]),title1:e(({value:a,isActive:l})=>[n("Case 2")]),tab0:e(({value:a,isActive:l})=>[S]),tab1:e(({value:a,isActive:l})=>[H,O]),_:1}),U,t(c,{id:"154",data:[{id:"❌"},{id:"✅"}],active:0},{title0:e(({value:a,isActive:l})=>[n("❌")]),title1:e(({value:a,isActive:l})=>[n("✅")]),tab0:e(({value:a,isActive:l})=>[G,L]),tab1:e(({value:a,isActive:l})=>[F,D,M]),_:1}),N,s("div",V,[E,K,t(c,{id:"180",data:[{id:"--interface"},{id:"--local-port"},{id:"--keepalive"},{id:"--dns-ipv4-addr"}],active:0},{title0:e(({value:a,isActive:l})=>[n("--interface")]),title1:e(({value:a,isActive:l})=>[n("--local-port")]),title2:e(({value:a,isActive:l})=>[n("--keepalive")]),title3:e(({value:a,isActive:l})=>[n("--dns-ipv4-addr")]),tab0:e(({value:a,isActive:l})=>[z,B]),tab1:e(({value:a,isActive:l})=>[Y,Z]),tab2:e(({value:a,isActive:l})=>[$,W]),tab3:e(({value:a,isActive:l})=>[J,Q]),_:1})]),X,ss,ns,t(c,{id:"214",data:[{id:"❌"},{id:"✅"}],active:0},{title0:e(({value:a,isActive:l})=>[n("❌")]),title1:e(({value:a,isActive:l})=>[n("✅")]),tab0:e(({value:a,isActive:l})=>[es,as]),tab1:e(({value:a,isActive:l})=>[ls,ts,is]),_:1}),cs,os,s("p",null,[n("You almost never want to pass the username and password in the curl command itself. One way to avoid this is to use the "),t(r,{icon:"fas fa-file-lines"}),ps,n(" file. It specifies hostnames and credentials for accessing them:")]),rs,s("p",null,[n("Pass the "),ds,n(" option to use the "),t(r,{icon:"fas fa-file-lines"}),ms,n(" file, or --netrc-file to use a specific one:")]),us])}const gs=u(f,[["render",vs],["__file","04-curl-basics.html.vue"]]),fs=JSON.parse('{"path":"/cli/mastering-curl-interactive-text-guide/04-curl-basics.html","title":"4. Curl basics","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"4. Curl basics","description":"Mastering Curl - Interactive Text Guide > 4. Curl basics","category":["CLI","Linux"],"tag":["crashcourse","cli","sh","shell","gnu","linux","awk"],"head":[[{"meta":null},{"property":"og:title","content":"Mastering Curl - Interactive Text Guide > 4. Curl basics"},{"property":"og:description","content":"4. Curl basics"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/cli/mastering-curl-interactive-text-guide/04-curl-basics.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/cli/mastering-curl-interactive-text-guide/04-curl-basics.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"4. Curl basics"}],["meta",{"property":"og:description","content":"Mastering Curl - Interactive Text Guide > 4. Curl basics"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"cli"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:tag","content":"shell"}],["meta",{"property":"article:tag","content":"gnu"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:tag","content":"awk"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. Curl basics\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Version","slug":"version","link":"#version","children":[]},{"level":2,"title":"Verbose","slug":"verbose","link":"#verbose","children":[]},{"level":2,"title":"Downloads","slug":"downloads","link":"#downloads","children":[]},{"level":2,"title":"Retry","slug":"retry","link":"#retry","children":[]},{"level":2,"title":"Uploads","slug":"uploads","link":"#uploads","children":[]},{"level":2,"title":"Transfer controls","slug":"transfer-controls","link":"#transfer-controls","children":[]},{"level":2,"title":"Name resolving","slug":"name-resolving","link":"#name-resolving","children":[]},{"level":2,"title":"Timeouts","slug":"timeouts","link":"#timeouts","children":[]},{"level":2,"title":"Credentials","slug":"credentials","link":"#credentials","children":[]},{"level":2,"title":"Exit status","slug":"exit-status","link":"#exit-status","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":7}]},"readingTime":{"minutes":7.15,"words":2145},"filePathRelative":"cli/mastering-curl-interactive-text-guide/04-curl-basics.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{gs as comp,fs as data};
