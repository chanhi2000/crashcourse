import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as n,t as k,b as s,w as p,n as m,g as v,d as a,e as o,r as l,o as h}from"./app-U_bew1in.js";const g={},b={id:"frontmatter-title-관련",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-관련"},q={class:"table-of-contents"},f=n("hr",null,null,-1),y=n("hr",null,null,-1),w={href:"https://github.com/pahkey/sbb3/tree/3-11",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"pahkey/sbb3",-1),S=n("code",null,"3-11",-1),x=n("p",null,'이번에는 질문과 답변에 "추천(좋아요)" 기능을 구현해 보자.',-1),A=n("hr",null,null,-1),U=n("h2",{id:"엔티티-변경",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#엔티티-변경"},[n("span",null,"엔티티 변경")])],-1),C=n("p",null,"질문, 답변의 추천은 추천한 사람(SiteUser 객체)을 질문, 답변 엔티티에 추가해야 한다.",-1),Q={id:"question",tabindex:"-1"},M={class:"header-anchor",href:"#question"},T=n("code",null,"Question",-1),V=n("p",null,[a("우선 "),n("code",null,"Question"),a(" 엔티티에 추천인("),n("code",null,"voter"),a(") 속성을 추가해 보자.")],-1),K=n("p",null,[a("하나의 질문에 여러사람이 추천할 수 있고 한 사람이 여러 개의 질문을 추천할 수 있다. 이렇듯 질문과 추천인은 부모와 자식의 관계가 아니고 대등한 관계이기 때문에 "),n("code",null,"@ManyToMany"),a("를 사용해야 한다.")],-1),P=n("blockquote",null,[n("p",null,[a("📚참고: "),n("a",{href:"https://docs.oracle.com/javaee/7/api/jakarta/persistence/ManyToMany.html",target:"_blank",rel:"noopener noreferrer"},"https://docs.oracle.com/javaee/7/api/jakarta/persistence/ManyToMany.html")])],-1),z=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),R=n("code",null,"Question.java",-1),$=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">ManyToMany</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Question</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@ManyToMany</span></span>
<span class="line highlighted">    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SiteUser</span><span class="token punctuation">&gt;</span></span> voter<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Set&lt;SiteUser&gt; voter</code> 처럼 추천인(<code>voter</code>)을 @ManyToMany 관계로 추가했다. <code>List</code>가 아닌 <code>Set</code>으로 한 이유는 추천인은 중복되면 안되기 때문이다.</p><blockquote><p><code>Set</code>은 중복을 허용하지 않는 자료형이다.</p></blockquote>`,3),N={id:"answer",tabindex:"-1"},E={class:"header-anchor",href:"#answer"},L=n("code",null,"Answer",-1),B=n("p",null,[n("code",null,"Answer"),a(" 엔티티 역시 마찬가지 방법으로 추천인(voter) 속성을 추가하자.")],-1),I=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),J=n("code",null,"Answer.java",-1),O=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">ManyToMany</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Answer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@ManyToMany</span></span>
<span class="line highlighted">    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SiteUser</span><span class="token punctuation">&gt;</span></span> voter<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="테이블-확인" tabindex="-1"><a class="header-anchor" href="#테이블-확인"><span>테이블 확인</span></a></h3><figure><img src="https://wikidocs.net/images/page/162657/C_3-11_1.png" alt="질문과 답변 엔티티에 voter 속성을 추가한후 H2 콘솔을 확인해 보자." tabindex="0" loading="lazy"><figcaption>질문과 답변 엔티티에 voter 속성을 추가한후 H2 콘솔을 확인해 보자.</figcaption></figure><p><code>QUESTION_VOTER</code>, <code>ANSWER_VOTER</code> 테이블이 생성된 것을 확인할 수 있다. 이렇게 <code>@ManyToMany</code> 관계로 속성을 생성하면 새로운 테이블을 생성하여 데이터를 관리한다. 테이블에는 서로 연관된 엔티티의 고유번호(<code>id</code>) 2개가 프라이머리 키로 되어 있기 때문에 다대다(N:N) 관계가 성립하는 구조이다.</p><hr><h2 id="질문-추천" tabindex="-1"><a class="header-anchor" href="#질문-추천"><span>질문 추천</span></a></h2><p><code>Question</code> 엔티티에 추천인 속성을 추가 했으니 이제 질문 추천 기능을 만들어 보자.</p><h3 id="질문-추천-버튼" tabindex="-1"><a class="header-anchor" href="#질문-추천-버튼"><span>질문 추천 버튼</span></a></h3><p>질문을 추천할 수 있는 버튼의 위치는 어디가 좋을까? 그렇다. 질문 상세 화면이다. 질문 상세 템플릿을 다음과 같이 수정하자.</p>`,9),D=n("code",null," /sbb/src/main/resources/templates/",-1),F=n("code",null,"question_detail.html",-1),W=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- 질문 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border-bottom py-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.subject}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>recommend btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                <span class="token attr-name"><span class="token namespace">th:</span>data-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/vote/\${question.id}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                추천</span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>badge rounded-pill bg-success<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${#lists.size(question.voter)}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/modify/\${question.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.author != null and #authentication.getPrincipal().getUsername() == question.author.username}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>수정<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/question/delete/\${question.id}|}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${question.author != null and #authentication.getPrincipal().getUsername() == question.author.username}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>삭제<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>질문의 추천 버튼을 질문의 수정 버튼 좌측에 추가했다. 그리고 버튼에는 추천수도 함께 보이도록 했다. 추천 버튼을 클릭하면 href의 속성이 <code>javascript:void(0)</code>으로 되어 있기 때문에 아무런 동작도 하지 않는다. 하지만 <code>class</code> 속성에 <code>&quot;recommend&quot;</code>를 추가하여 자바스크립트를 사용하여 <code>data-uri</code>에 정의된 URL이 호출되도록 할 것이다. 이와 같은 방법을 사용하는 이유는 &quot;추천&quot; 버튼을 눌렀을때 확인창을 통해 사용자의 확인을 구하기 위함이다.</p><h3 id="추천-버튼-확인-창" tabindex="-1"><a class="header-anchor" href="#추천-버튼-확인-창"><span>추천 버튼 확인 창</span></a></h3>`,3),Z=n("code",null,"[<추천>]",-1),G=n("code",null,"/sbb/src/main/resources/templates/",-1),H=n("code",null,"question_detail.html",-1),X=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>script<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>text/javascript<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">const</span> delete_elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;delete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>delete_elements<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;정말로 삭제하시겠습니까?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>uri<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">const</span> recommend_elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;recommend&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>recommend_elements<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;정말로 추천하시겠습니까?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>uri<span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Y=n("code",null,'class="recommend"',-1),nn=n("code",null,'["확인"]',-1),sn={id:"questionservice",tabindex:"-1"},an={class:"header-anchor",href:"#questionservice"},tn=n("code",null,"QuestionService",-1),en=n("p",null,[a("그리고 추천인을 저장하기 위해 다음과 같이 "),n("code",null,"QuestionSerivce"),a("를 수정하자.")],-1),pn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),on=n("code",null,"QuestionService.java",-1),ln=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">vote</span><span class="token punctuation">(</span><span class="token class-name">Question</span> question<span class="token punctuation">,</span> <span class="token class-name">SiteUser</span> siteUser<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        question<span class="token punctuation">.</span><span class="token function">getVoter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Question</code> 엔티티에 사용자를 추천인으로 저장하는 <code>vote</code> 메서드를 추가했다.</p>`,2),cn={id:"questioncontroller",tabindex:"-1"},un={class:"header-anchor",href:"#questioncontroller"},rn=n("code",null,"QuestionController",-1),dn=n("p",null,[a("이제 추천 버튼을 눌렀을때 호출되는 URL을 처리하기 위해 다음과 같이 "),n("code",null,"QuestionController"),a("를 수정하자.")],-1),kn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),mn=n("code",null,"QuestionController.java",-1),vn=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/vote/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">questionVote</span><span class="token punctuation">(</span><span class="token class-name">Principal</span> principal<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Question</span> question <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">SiteUser</span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">vote</span><span class="token punctuation">(</span>question<span class="token punctuation">,</span> siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위와 같이 <code>questionVote</code> 메서드를 추가했다. 추천은 로그인한 사람만 가능해야 하므로 <code>@PreAuthorize(&quot;isAuthenticated()&quot;)</code> 애너테이션이 적용되었다. 그리고 위에서 작성한 <code>QuestionService</code>의 <code>vote</code> 메서드를 호출하여 추천인을 저장했다. 오류가 없다면 질문 상세화면으로 리다이렉트 한다.</p><h3 id="질문-추천-확인" tabindex="-1"><a class="header-anchor" href="#질문-추천-확인"><span>질문 추천 확인</span></a></h3>`,3),hn=n("img",{src:"https://wikidocs.net/images/page/162657/C_3-11_2.png",alt:'질문 상세 화면의 본문 상단을 보면 <FontIcon icon="iconfont icon-select"/> 버튼이 생겼을 것이다. 버튼이 잘 작동하는지 확인하자.',tabindex:"0",loading:"lazy"},null,-1),gn=n("code",null,"[추천]",-1),bn=n("hr",null,null,-1),_n=n("h2",{id:"답변-추천",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#답변-추천"},[n("span",null,"답변 추천")])],-1),qn=n("p",null,"답변 추천 기능은 질문 추천 기능과 동일하므로 빠르게 작성해 보자.",-1),fn=n("h3",{id:"답변-추천-버튼",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#답변-추천-버튼"},[n("span",null,"답변 추천 버튼")])],-1),yn=n("p",null,"답변의 추천수를 표시하고, 답변을 추천할 수있는 버튼을 질문 상세 템플릿에 다음과 같이 추가하자.",-1),wn=n("code",null,"/sbb/src/main/resources/templates/",-1),jn=n("code",null,"question_detail.html",-1),Sn=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- 답변 반복 시작 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card my-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>answer : \${question.answerList}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>recommend btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                <span class="token attr-name"><span class="token namespace">th:</span>data-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/answer/vote/\${answer.id}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                추천</span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>badge rounded-pill bg-success<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${#lists.size(answer.voter)}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/answer/modify/\${answer.id}|}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${answer.author != null and #authentication.getPrincipal().getUsername() == answer.author.username}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>수정<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|/answer/delete/\${answer.id}|}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete btn btn-sm btn-outline-secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">sec:</span>authorize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isAuthenticated()<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${answer.author != null and #authentication.getPrincipal().getUsername() == answer.author.username}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>삭제<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 답변 반복 끝  --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),xn=n("code",null,'class="recommend"',-1),An=n("code",null,'["확인"]',-1),Un=n("code",null,"data-uri",-1),Cn={id:"answerservice",tabindex:"-1"},Qn={class:"header-anchor",href:"#answerservice"},Mn=n("code",null,"AnswerService",-1),Tn=n("p",null,[a("그리고 답변에 추천인을 저장하기 위해 다음과 같이 "),n("code",null,"AnswerService"),a("를 수정하자.")],-1),Vn=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),Kn=n("code",null,"AnswerService.java",-1),Pn=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">vote</span><span class="token punctuation">(</span><span class="token class-name">Answer</span> answer<span class="token punctuation">,</span> <span class="token class-name">SiteUser</span> siteUser<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        answer<span class="token punctuation">.</span><span class="token function">getVoter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Answer</code> 엔티티에 사용자를 추천인으로 저장하는 <code>vote</code> 메서드를 추가했다.</p>`,2),zn={id:"answercontroller",tabindex:"-1"},Rn={class:"header-anchor",href:"#answercontroller"},$n=n("code",null,"AnswerController",-1),Nn=n("p",null,[a("이제 답변 추천 버튼을 눌렀을때 호출되는 URL을 처리하기 위해 다음과 같이 "),n("code",null,"AnswerController"),a("를 수정하자.")],-1),En=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),Ln=n("code",null,"AnswerController.java",-1),Bn=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/vote/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">answerVote</span><span class="token punctuation">(</span><span class="token class-name">Principal</span> principal<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">Answer</span> answer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">getAnswer</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token class-name">SiteUser</span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">vote</span><span class="token punctuation">(</span>answer<span class="token punctuation">,</span> siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위와 같이 <code>answerVote</code> 메서드를 추가했다. 추천은 로그인한 사람만 가능해야 하므로 <code>@PreAuthorize(&quot;isAuthenticated()&quot;)</code> 애너테이션이 적용되었다. 그리고 위에서 작성한 <code>AnswerService</code>의 <code>vote</code> 메서드를 호출하여 추천인을 저장한다. 오류가 없다면 질문 상세화면으로 리다이렉트 한다.</p><h3 id="답변-추천-확인" tabindex="-1"><a class="header-anchor" href="#답변-추천-확인"><span>답변 추천 확인</span></a></h3><figure><img src="https://wikidocs.net/images/page/162657/C_3-11_3.png" alt="이와 같이 수정 후 답변 추천 기능도 확인해 보자." tabindex="0" loading="lazy"><figcaption>이와 같이 수정 후 답변 추천 기능도 확인해 보자.</figcaption></figure><hr>`,5);function In(c,Jn){const e=l("router-link"),t=l("FontIcon"),i=l("VPCard"),u=l("VidStack");return h(),d("div",null,[n("h1",b,[n("a",_,[n("span",null,k(c.$frontmatter.title)+" 관련",1)])]),n("nav",q,[n("ul",null,[n("li",null,[s(e,{to:"#엔티티-변경"},{default:p(()=>[a("엔티티 변경")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#question"},{default:p(()=>[s(t,{icon:"fa-brands fa-java"}),a("Question")]),_:1})]),n("li",null,[s(e,{to:"#answer"},{default:p(()=>[s(t,{icon:"fa-brands fa-java"}),a("Answer")]),_:1})]),n("li",null,[s(e,{to:"#테이블-확인"},{default:p(()=>[a("테이블 확인")]),_:1})])])]),n("li",null,[s(e,{to:"#질문-추천"},{default:p(()=>[a("질문 추천")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#질문-추천-버튼"},{default:p(()=>[a("질문 추천 버튼")]),_:1})]),n("li",null,[s(e,{to:"#추천-버튼-확인-창"},{default:p(()=>[a("추천 버튼 확인 창")]),_:1})]),n("li",null,[s(e,{to:"#questionservice"},{default:p(()=>[s(t,{icon:"iconfont icon-select"}),a("QuestionService")]),_:1})]),n("li",null,[s(e,{to:"#questioncontroller"},{default:p(()=>[s(t,{icon:"fa-brands fa-java"}),a("QuestionController")]),_:1})]),n("li",null,[s(e,{to:"#질문-추천-확인"},{default:p(()=>[a("질문 추천 확인")]),_:1})])])]),n("li",null,[s(e,{to:"#답변-추천"},{default:p(()=>[a("답변 추천")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#답변-추천-버튼"},{default:p(()=>[a("답변 추천 버튼")]),_:1})]),n("li",null,[s(e,{to:"#answerservice"},{default:p(()=>[s(t,{icon:"fa-brands fa-java"}),a("AnswerService")]),_:1})]),n("li",null,[s(e,{to:"#answercontroller"},{default:p(()=>[s(t,{icon:"fa-brands fa-java"}),a("AnswerController")]),_:1})]),n("li",null,[s(e,{to:"#답변-추천-확인"},{default:p(()=>[a("답변 추천 확인")]),_:1})])])])])]),f,s(i,m(v({title:"3-11. 추천",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162657",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),y,n("blockquote",null,[n("p",null,[n("a",w,[s(t,{icon:"iconfont icon-github"}),a(),j,a(" - "),s(t,{icon:"fas fa-folder-open"}),a(),S])])]),s(u,{src:"youtube/OzNq_Ja6j20"}),x,A,U,C,n("h3",Q,[n("a",M,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),T])])]),V,K,P,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),z,s(t,{icon:"fa-brands fa-java"}),R])]),$,n("h3",N,[n("a",E,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),L])])]),B,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),I,s(t,{icon:"fa-brands fa-java"}),J])]),O,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),D,s(t,{icon:"fa-brands fa-html5"}),F])]),W,n("p",null,[a("이어서 "),s(t,{icon:"iconfont icon-select"}),Z,a(" 버튼을 클릭했을 때 '정말로 추천하시겠습니까?'라는 확인 창이 나타나야 하므로 다음 코드를 추가하자.")]),n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),G,s(t,{icon:"fa-brands fa-html5"}),H])]),X,n("p",null,[a("추천 버튼에 "),Y,a('가 적용되어 있으므로 추천 버튼을 클릭하면 "정말로 추천하시겠습니까?"라는 질문이 나타나고 '),s(t,{icon:"iconfont icon-select"}),nn,a("을 선택하면 data-uri 속성에 정의한 URL이 호출될 것이다.")]),n("h3",sn,[n("a",an,[n("span",null,[s(t,{icon:"iconfont icon-select"}),tn])])]),en,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),pn,s(t,{icon:"fa-brands fa-java"}),on])]),ln,n("h3",cn,[n("a",un,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),rn])])]),dn,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),kn,s(t,{icon:"fa-brands fa-java"}),mn])]),vn,n("figure",null,[hn,n("figcaption",null,[a("질문 상세 화면의 본문 상단을 보면 "),s(t,{icon:"iconfont icon-select"}),gn,a(" 버튼이 생겼을 것이다. 버튼이 잘 작동하는지 확인하자.")])]),bn,_n,qn,fn,yn,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),wn,s(t,{icon:"fa-brands fa-html5"}),jn])]),Sn,n("p",null,[a("질문과 마찬가지로 답변 영역의 상단에 답변을 추천할 수 있는 버튼을 생성했다. 이 역시 추천 버튼에 "),xn,a('가 적용되어 있으므로 추천 버튼을 클릭하면 "정말로 추천하시겠습니까?"라는 질문이 나타나고 '),s(t,{icon:"iconfont icon-select"}),An,a("을 선택하면 "),Un,a(" 속성에 정의한 URL이 호출될 것이다.")]),n("h3",Cn,[n("a",Qn,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),Mn])])]),Tn,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),Vn,s(t,{icon:"fa-brands fa-java"}),Kn])]),Pn,n("h3",zn,[n("a",Rn,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),$n])])]),Nn,n("blockquote",null,[n("p",null,[a("파일명:"),s(t,{icon:"fas fa-folder-open"}),En,s(t,{icon:"fa-brands fa-java"}),Ln])]),Bn])}const Fn=r(g,[["render",In],["__file","03K.html.vue"]]),Wn=JSON.parse('{"path":"/java/jump-to-spring-boot/03K.html","title":"03K. 추천","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"03K. 추천","description":"Jump to Spring Boot > 03K. 추천","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 03K. 추천"},{"property":"og:description","content":"03K. 추천"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/03K.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/03K.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"03K. 추천"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 03K. 추천"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162657/C_3-11_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03K. 추천\\",\\"image\\":[\\"https://wikidocs.net/images/page/162657/C_3-11_1.png\\",\\"https://wikidocs.net/images/page/162657/C_3-11_2.png\\",\\"https://wikidocs.net/images/page/162657/C_3-11_3.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"엔티티 변경","slug":"엔티티-변경","link":"#엔티티-변경","children":[{"level":3,"title":"Question","slug":"question","link":"#question","children":[]},{"level":3,"title":"Answer","slug":"answer","link":"#answer","children":[]},{"level":3,"title":"테이블 확인","slug":"테이블-확인","link":"#테이블-확인","children":[]}]},{"level":2,"title":"질문 추천","slug":"질문-추천","link":"#질문-추천","children":[{"level":3,"title":"질문 추천 버튼","slug":"질문-추천-버튼","link":"#질문-추천-버튼","children":[]},{"level":3,"title":"추천 버튼 확인 창","slug":"추천-버튼-확인-창","link":"#추천-버튼-확인-창","children":[]},{"level":3,"title":"QuestionService","slug":"questionservice","link":"#questionservice","children":[]},{"level":3,"title":"QuestionController","slug":"questioncontroller","link":"#questioncontroller","children":[]},{"level":3,"title":"질문 추천 확인","slug":"질문-추천-확인","link":"#질문-추천-확인","children":[]}]},{"level":2,"title":"답변 추천","slug":"답변-추천","link":"#답변-추천","children":[{"level":3,"title":"답변 추천 버튼","slug":"답변-추천-버튼","link":"#답변-추천-버튼","children":[]},{"level":3,"title":"AnswerService","slug":"answerservice","link":"#answerservice","children":[]},{"level":3,"title":"AnswerController","slug":"answercontroller","link":"#answercontroller","children":[]},{"level":3,"title":"답변 추천 확인","slug":"답변-추천-확인","link":"#답변-추천-확인","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":3.03,"words":908},"filePathRelative":"java/jump-to-spring-boot/03K.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{Fn as comp,Wn as data};
