import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,t as d,b as s,w as l,n as g,g as m,d as a,e as p,r as o,o as v}from"./app-U_bew1in.js";const h={},b={id:"frontmatter-title-관련",tabindex:"-1"},q={class:"header-anchor",href:"#frontmatter-title-관련"},f={class:"table-of-contents"},y=n("hr",null,null,-1),_=n("hr",null,null,-1),w={href:"https://github.com/pahkey/sbb3/tree/3-02",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"pahkey/sbb3",-1),x=n("code",null,"3-02",-1),P=n("p",null,"SBB의 질문 목록은 현재 페이징 처리가 안되기 때문에 게시물 300개를 작성하면 한 페이지에 300개의 게시물이 모두 조회된다. 이번 장에서는 페이징(Paging)을 적용하여 이 문제를 해결해 보자.",-1),S=n("hr",null,null,-1),B=n("h2",{id:"대량-테스트-데이터-만들기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#대량-테스트-데이터-만들기"},[n("span",null,"대량 테스트 데이터 만들기")])],-1),R=n("p",null,"페이징을 구현하기 전에 페이징을 테스트할 수 있을 정도로 충분한 데이터를 생성하자. 대량의 테스트 데이터를 만드는 가장 간단한 방법은 스프링부트의 테스트 프레임워크를 이용하는 것이다.",-1),$=n("p",null,"다음처럼 테스트 케이스를 작성하자.",-1),Q=n("code",null,"/sbb/src/test/java/com/mysite/sbb/",-1),L=n("code",null,"SbbApplicationTests.java",-1),A=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question<span class="token punctuation">.</span></span><span class="token class-name">QuestionService</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@SpringBootTest</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">SbbApplicationTests</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">QuestionService</span> questionService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">testJpa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">300</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">String</span> subject <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;테스트 데이터입니다:[%03d]&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;내용무&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>subject<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>총 300개의 테스트 데이터를 생성하는 테스트 케이스를 작성했다.</p>`,2),C=n("code",null,"[Run -> Run As -> Junit Test]",-1),T=n("code",null,"testJpa",-1),J=p('<figure><img src="https://wikidocs.net/images/page/162028/O_3-02_1.png" alt="02_1" tabindex="0" loading="lazy"><figcaption>02_1</figcaption></figure><p>테스트 케이스로 등록한 데이터가 보일 것이다. 그리고 300개 이상의 데이터가 한 페이지 보여지는 것을 확인할 수 있다. 이러한 이유로 페이징은 반드시 필요하다.</p><blockquote><p>그리고 등록한 게시물도 최근 순으로 보여야 하는데 등록한 순서로 보이는 문제도 있다. 이 문제도 함께 해결해 보자.</p></blockquote><hr><h2 id="페이징-구현하기" tabindex="-1"><a class="header-anchor" href="#페이징-구현하기"><span>페이징 구현하기</span></a></h2><p>페이징을 구현하기 위해 추가로 설치해야 하는 라이브러리는 없다. JPA 환경 구축시 설치했던 JPA 관련 라이브러리에 이미 페이징을 위한 패키지들이 들어있기 때문이다.</p><p>다음의 클래스들을 이용하면 페이징을 쉽게 구현할 수 있다.</p><ul><li><code>org.springframework.data.domain.Page</code></li><li><code>org.springframework.data.domain.PageRequest</code></li><li><code>org.springframework.data.domain.Pageable</code></li></ul><p>위에 소개한 클래스를 적용해 페이징을 구현해 보자. 먼저 <code>Question</code> 리포지터리에 다음과 같은 <code>findAll</code> 메서드를 추가하자.</p>',9),O=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),V=n("code",null,"QuestionRepository.java",-1),z=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Page</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Pageable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Question</span> <span class="token function">findBySubject</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Question</span> <span class="token function">findBySubjectAndContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">findBySubjectLike</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Pageable</code> 객체를 입력으로 받아 <code>Page&lt;Question&gt;</code> 타입 객체를 리턴하는 <code>findAll</code> 메서드를 생성했다. 그리고 <code>Question</code> 서비스도 다음과 같이 수정하자.</p>`,2),N=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),D=n("code",null,"QuestionService.java",-1),E=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Page</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">PageRequest</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Pageable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token keyword">int</span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">Pageable</span> pageable <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>질문 목록을 조회하는 <code>getList</code> 메서드를 위와 같이 변경했다. <code>getList</code> 메서드는 정수 타입의 페이지번호를 입력받아 해당 페이지의 질문 목록을 리턴하는 메서드로 변경했다. <code>Pageable</code> 객체를 생성할때 사용한 <code>PageRequest.of(page, 10)</code>에서 <code>page</code>는 조회할 페이지의 번호이고 10은 한 페이지에 보여줄 게시물의 갯수를 의미한다. 이렇게 하면 데이터 전체를 조회하지 않고 해당 페이지의 데이터만 조회하도록 쿼리가 변경된다.</p><p><code>Question</code> 서비스의 <code>getList</code> 메서드의 입출력 구조가 변경되었으므로 <code>Question</code> 컨트롤러도 다음과 같이 수정해야 한다.</p>`,3),M=n("code",null,"sbb/src/main/java/com/mysite/sbb/question/",-1),U=n("code",null,"QuestionController.java",-1),G=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Page</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> defaultValue<span class="token operator">=</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> paging <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;paging&quot;</span><span class="token punctuation">,</span> paging<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;question_list&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>http://localhost:8080/question/list?page=0</code> 처럼 GET 방식으로 요청된 URL에서 page값을 가져오기 위해 <code>@RequestParam(value=&quot;page&quot;, defaultValue=&quot;0&quot;) int page</code> 매개변수가 list 메서드에 추가되었다. URL에 페이지 파라미터 <code>page</code>가 전달되지 않은 경우 디폴트 값으로 0이 되도록 설정했다.</p><blockquote><p>스프링부트의 페이징은 첫페이지 번호가 1이 아닌 0이다.</p></blockquote><p>그리고 템플릿에 <code>Page&lt;Question&gt;</code> 객체인 <code>paging</code>을 전달했다. <code>Page</code> 객체에는 다음과 같은 속성이 있다. 다음의 속성들은 템플릿에서 페이징을 처리할 때 사용할 것이다.</p><table><thead><tr><th style="text-align:left;">항목</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>paging.isEmpty</code></td><td style="text-align:left;">페이지 존재 여부 (게시물이 있으면 false, 없으면 true)</td></tr><tr><td style="text-align:left;"><code>paging.totalElements</code></td><td style="text-align:left;">전체 게시물 개수</td></tr><tr><td style="text-align:left;"><code>paging.totalPages</code></td><td style="text-align:left;">전체 페이지 개수</td></tr><tr><td style="text-align:left;"><code>paging.size</code></td><td style="text-align:left;">페이지당 보여줄 게시물 개수</td></tr><tr><td style="text-align:left;"><code>paging.number</code></td><td style="text-align:left;">현재 페이지 번호</td></tr><tr><td style="text-align:left;"><code>paging.hasPrevious</code></td><td style="text-align:left;">이전 페이지 존재 여부</td></tr><tr><td style="text-align:left;"><code>paging.hasNext</code></td><td style="text-align:left;">다음 페이지 존재 여부</td></tr></tbody></table><p>그리고 기존에 전달했던 이름인 &quot;<code>questionList</code>&quot; 대신 &quot;<code>paging</code>&quot; 이름으로 템플릿에 전달했기 때문에 템플릿도 다음과 같이 변경해야 한다.</p>`,6),I=n("code",null,"/sbb/src/main/resources/templates/",-1),K=n("code",null,"question_list.html",-1),Z=p(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>question, loop : \${paging}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/create}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>질문 등록하기<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 수정하고 브라우저에서 <code>http://localhost:8080/question/list?page=0</code> URL을 요청해 보자. 다음과 같이 첫페이지에 해당하는 게시물 10개만 조회되는 것을 확인할 수 있다.</p><figure><img src="https://wikidocs.net/images/page/162028/C_3-02_2.png" alt="02_2" tabindex="0" loading="lazy"><figcaption>02_2</figcaption></figure><p>다시 <code>http://localhost:8080/question/list?page=1</code> URL을 요청하면 두번째 페이지에 해당하는 게시물이 조회된다.</p><figure><img src="https://wikidocs.net/images/page/162028/C_3-02_3.png" alt="02_3" tabindex="0" loading="lazy"><figcaption>02_3</figcaption></figure><hr><h2 id="템플릿에-페이지-이동-기능-구현하기" tabindex="-1"><a class="header-anchor" href="#템플릿에-페이지-이동-기능-구현하기"><span>템플릿에 페이지 이동 기능 구현하기</span></a></h2>`,7),F=n("code",null,'["이전"]',-1),W=n("code",null,'["다음"]',-1),H=n("code",null,"question_list.html",-1),X=n("code",null,"</table>",-1),Y=n("code",null,"/sbb/src/main/resources/templates/",-1),nn=n("code",null,"question_list.html",-1),sn=p(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">    <span class="token comment">&lt;!-- 페이징처리 시작 --&gt;</span></span>
<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.isEmpty()}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination justify-content-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.hasPrevious} ? &#39;disabled&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                    <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${paging.number-1}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>이전<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page: \${#numbers.sequence(0, paging.totalPages-1)}<span class="token punctuation">&quot;</span></span></span>
<span class="line highlighted">                <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page == paging.number} ? &#39;active&#39;<span class="token punctuation">&quot;</span></span> </span>
<span class="line highlighted">                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${page}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.hasNext} ? &#39;disabled&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${paging.number+1}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>다음<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">    <span class="token comment">&lt;!-- 페이징처리 끝 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/create}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>질문 등록하기<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>상당히 많은 양의 HTML코드가 추가되었지만 어렵지 않으니 찬찬히 살펴보자.</p><p>이전 페이지가 없는 경우에는 &quot;이전&quot; 링크가 비활성화(disabled)되도록 하였다. (다음페이지의 경우도 마찬가지 방법으로 적용했다.) 그리고 페이지 리스트를 루프 돌면서 해당 페이지로 이동할 수 있는 링크를 생성하였다. 이때 루프 도중의 페이지가 현재 페이지와 같을 경우에는 active클래스를 적용하여 강조표시(선택표시)도 해 주었다.</p><blockquote><p>타임리프의 <code>th:classappend=&quot;조건식 ? 클래스값&quot;</code> 속성은 조건식이 참인 경우 클래스값을 <code>class</code> 속성에 추가한다.</p></blockquote><p>위 템플릿에 사용된 주요 페이징 기능을 표로 정리해 보았다.</p><table><thead><tr><th style="text-align:left;">페이징 기능</th><th style="text-align:left;">코드</th></tr></thead><tbody><tr><td style="text-align:left;">이전 페이지가 없으면 비활성화</td><td style="text-align:left;"><code>th:classappend=&quot;\${!paging.hasPrevious} ? &#39;disabled&#39;&quot;</code></td></tr><tr><td style="text-align:left;">다음 페이지가 없으면 비활성화</td><td style="text-align:left;"><code>th:classappend=&quot;\${!paging.hasNext} ? &#39;disabled&#39;&quot;</code></td></tr><tr><td style="text-align:left;">이전 페이지 링크</td><td style="text-align:left;">\`th:href=&quot;@{</td></tr><tr><td style="text-align:left;">다음 페이지 링크</td><td style="text-align:left;">\`th:href=&quot;@{</td></tr><tr><td style="text-align:left;">페이지 리스트 루프</td><td style="text-align:left;"><code>th:each=&quot;page: \${#numbers.sequence(0, paging.totalPages-1)}&quot;</code></td></tr><tr><td style="text-align:left;">현재 페이지와 같으면 active 적용</td><td style="text-align:left;"><code>th:classappend=&quot;\${page == paging.number} ? &#39;active&#39;&quot;</code></td></tr></tbody></table><p><code>#numbers.sequence(시작, 끝)</code>은 시작 번호부터 끝 번호까지의 루프를 만들어 내는 타임리프의 유틸리티이다. 그리고 페이지 리스트를 보기 좋게 표시하기 위해 부트스트랩의 <code>pagination</code> 컴포넌트를 이용하였다. 템플릿에 사용한 <code>pagination</code>, <code>page-item</code>, <code>page-link</code> 등이 부트스트랩 <code>pagination</code> 컴포넌트의 클래스이다.</p><blockquote><p>📚<a href="https://getbootstrap.com/docs/5.2/components/pagination" target="_blank" rel="noopener noreferrer">부트스트랩 pagination</a></p></blockquote><hr><h2 id="페이지-리스트" tabindex="-1"><a class="header-anchor" href="#페이지-리스트"><span>페이지 리스트</span></a></h2><p>여기까지 수정하고 질문 목록을 조회해 보자.</p><figure><img src="https://wikidocs.net/images/page/162028/C_3-02_4.png" alt="02_4" tabindex="0" loading="lazy"><figcaption>02_4</figcaption></figure><p>페이징 처리는 잘 되었지만 한 가지 문제를 발견할 수 있다. 문제는 위에서 보듯이 이동할 수 있는 페이지가 모두 표시된다는 점이다.</p><p>이 문제를 해결하기 위해 다음과 같이 질문 목록 템플릿을 수정하자.</p>`,14),an=n("code",null,"/sbb/src/main/resources/templates/",-1),tn=n("code",null,"question_list.html",-1),pn=p(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"> <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- 페이징처리 시작 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.isEmpty()}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination justify-content-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.hasPrevious} ? &#39;disabled&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span></span>
<span class="line">                    <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${paging.number-1}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>이전<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page: \${#numbers.sequence(0, paging.totalPages-1)}<span class="token punctuation">&quot;</span></span> </span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page &gt;= paging.number-5 and page &lt;= paging.number+5}<span class="token punctuation">&quot;</span></span></span>
<span class="line">                <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page == paging.number} ? &#39;active&#39;<span class="token punctuation">&quot;</span></span> </span>
<span class="line">                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${page}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.hasNext} ? &#39;disabled&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${paging.number+1}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>다음<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- 페이징처리 끝 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/create}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>질문 등록하기<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>다음의 코드를 삽입하여 페이지 표시 제한 기능을 구현했다.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">th:if=&quot;\${page &gt;= paging.number-5 and page &lt;= paging.number+5}&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>이 코드는 페이지 리스트가 현재 페이지 기준으로 좌우 5개씩 보이도록 만든다. 루프내에 표시되는 페이지가 현재 페이지를 의미하는 <code>paging.number</code> 보다 5만큼 작거나 큰 경우에만 표시되도록 한 것이다.</p><p>만약 현재 페이지가 15라면 다음처럼 페이지 리스트가 표시될 것이다.</p><figure><img src="https://wikidocs.net/images/page/162028/C_3-02_5.png" alt="02_5" tabindex="0" loading="lazy"><figcaption>02_5</figcaption></figure><hr><h2 id="작성일시-역순으로-조회하기" tabindex="-1"><a class="header-anchor" href="#작성일시-역순으로-조회하기"><span>작성일시 역순으로 조회하기</span></a></h2><p>현재 질문 목록은 등록한 순서로 <code>데이터가</code> 표시된다. 하지만 게시판은 가장 최근에 작성한 게시물이 가장 먼저 보이는 것이 일반적이다. 이를 구현하기 위해 Question 서비스를 다음과 같이 수정하자.</p>`,9),en=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),ln=n("code",null,"QuestionService.java",-1),on=p(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Sort</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">   <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token keyword">int</span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">&gt;</span></span> sorts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        sorts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token string">&quot;createDate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Pageable</span> pageable <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">Sort</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span>sorts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>게시물을 역순으로 조회하기 위해서는 위와 같이 <code>PageRequest.of</code> 메서드의 세번째 파라미터로 <code>Sort</code> 객체를 전달해야 한다. <code>Sort.Order</code> 객체로 구성된 리스트에 <code>Sort.Order</code> 객체를 추가하고 <code>Sort.by(소트리스트)</code>로 소트 객체를 생성할 수 있다. 작성일시(createDate)를 역순(Desc)으로 조회하려면 <code>Sort.Order.desc(&quot;createDate&quot;)</code> 같이 작성한다.</p><blockquote><p>만약 작성일시 외에 추가로 정렬조건이 필요할 경우에는 sorts 리스트에 추가하면 된다.</p></blockquote><p>이렇게 수정하고 첫번째 페이지를 조회하면 이제 가장 최근에 등록된 순으로 게시물이 출력되는 것을 확인한 수 있다.</p><figure><img src="https://wikidocs.net/images/page/162028/O_3-02_6.png" alt="02_6" tabindex="0" loading="lazy"><figcaption>02_6</figcaption></figure><p>축하한다! 페이징 기능이 완성되었다. 페이징은 사실 구현하기 까다로운 기술이다. 페이징 클래스의 도움이 없었다면 아마 이렇게 쉽게 해내기는 힘들었을 것이다.</p><blockquote><p>지금까지 만든 페이징 기능에 &#39;처음&#39;과 &#39;마지막&#39; 링크를 추가하고 &#39;…&#39; 생략 기호까지 추가하면 더 완성도 높은 페이징 기능이 될 것이다.</p></blockquote><hr>`,8);function cn(c,un){const e=o("router-link"),i=o("VPCard"),t=o("FontIcon"),u=o("VidStack");return v(),r("div",null,[n("h1",b,[n("a",q,[n("span",null,d(c.$frontmatter.title)+" 관련",1)])]),n("nav",f,[n("ul",null,[n("li",null,[s(e,{to:"#대량-테스트-데이터-만들기"},{default:l(()=>[a("대량 테스트 데이터 만들기")]),_:1})]),n("li",null,[s(e,{to:"#페이징-구현하기"},{default:l(()=>[a("페이징 구현하기")]),_:1})]),n("li",null,[s(e,{to:"#템플릿에-페이지-이동-기능-구현하기"},{default:l(()=>[a("템플릿에 페이지 이동 기능 구현하기")]),_:1})]),n("li",null,[s(e,{to:"#페이지-리스트"},{default:l(()=>[a("페이지 리스트")]),_:1})]),n("li",null,[s(e,{to:"#작성일시-역순으로-조회하기"},{default:l(()=>[a("작성일시 역순으로 조회하기")]),_:1})])])]),y,s(i,g(m({title:"3-02. 페이징",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162028",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),_,n("blockquote",null,[n("p",null,[n("a",w,[s(t,{icon:"iconfont icon-github"}),a(),j,a(" - "),s(t,{icon:"fas fa-folder-open"}),a(),x])])]),s(u,{src:"youtube/PjVrl58tG4E"}),P,S,B,R,$,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),Q,s(t,{icon:"fa-brands fa-java"}),L])]),A,n("p",null,[a("만약 로컬서버가 실행 중이라면 로컬 서버를 중지하고 "),s(t,{icon:"iconfont icon-select"}),C,a("로 "),T,a(" 메서드를 실행하자. 그리고 다시 로컬서버를 실행한 후에 브라우저에서 질문 목록을 확인해 보자.")]),J,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),O,s(t,{icon:"fa-brands fa-java"}),V])]),z,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),N,s(t,{icon:"fa-brands fa-java"}),D])]),E,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),M,s(t,{icon:"fa-brands fa-java"}),U])]),G,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),I,s(t,{icon:"fa-brands fa-html5"}),K])]),Z,n("p",null,[a("질문 목록에서 페이지를 이동하려면 페이지를 이동할 수 있는 "),s(t,{icon:"iconfont icon-select"}),F,a(", "),s(t,{icon:"iconfont icon-select"}),W,a(" 과 같은 링크가 필요하다. 이번에는 질문 목록에 페이지를 이동할 수 있는 링크들을 추가해 보자.")]),n("p",null,[a("."),s(t,{icon:"fa-brands fa-html5"}),H,a(" 템플릿 파일의 "),X,a(" 태그 바로 밑에 다음 코드를 추가하자.")]),n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),Y,s(t,{icon:"fa-brands fa-html5"}),nn])]),sn,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),an,s(t,{icon:"fa-brands fa-html5"}),tn])]),pn,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),en,s(t,{icon:"fa-brands fa-java"}),ln])]),on])}const dn=k(h,[["render",cn],["__file","03B.html.vue"]]),gn=JSON.parse('{"path":"/java/jump-to-spring-boot/03B.html","title":"03B. 페이징","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"03B. 페이징","description":"Jump to Spring Boot > 03B. 페이징","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 03B. 페이징"},{"property":"og:description","content":"03B. 페이징"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/03B.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/03B.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"03B. 페이징"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 03B. 페이징"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162028/O_3-02_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03B. 페이징\\",\\"image\\":[\\"https://wikidocs.net/images/page/162028/O_3-02_1.png\\",\\"https://wikidocs.net/images/page/162028/C_3-02_2.png\\",\\"https://wikidocs.net/images/page/162028/C_3-02_3.png\\",\\"https://wikidocs.net/images/page/162028/C_3-02_4.png\\",\\"https://wikidocs.net/images/page/162028/C_3-02_5.png\\",\\"https://wikidocs.net/images/page/162028/O_3-02_6.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"대량 테스트 데이터 만들기","slug":"대량-테스트-데이터-만들기","link":"#대량-테스트-데이터-만들기","children":[]},{"level":2,"title":"페이징 구현하기","slug":"페이징-구현하기","link":"#페이징-구현하기","children":[]},{"level":2,"title":"템플릿에 페이지 이동 기능 구현하기","slug":"템플릿에-페이지-이동-기능-구현하기","link":"#템플릿에-페이지-이동-기능-구현하기","children":[]},{"level":2,"title":"페이지 리스트","slug":"페이지-리스트","link":"#페이지-리스트","children":[]},{"level":2,"title":"작성일시 역순으로 조회하기","slug":"작성일시-역순으로-조회하기","link":"#작성일시-역순으로-조회하기","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":3.32,"words":995},"filePathRelative":"java/jump-to-spring-boot/03B.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{dn as comp,gn as data};
