import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,a as e,t as d,b as t,w as n,n as s,g as i,e as p,r,o as w,d as l}from"./app-U_bew1in.js";const g={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},m={class:"table-of-contents"},k=e("hr",null,null,-1),v=p(`<h2 id="project-1-part-three" tabindex="-1"><a class="header-anchor" href="#project-1-part-three"><span>Project 1, part three</span></a></h2><p>You just finished building your first SwiftUI app, and all being well you were surprised by how easy it was. You might even be wondering why I spent so long talking about structs, closures, optionals, and more, when really we ended up doing some fairly simple code.</p><p>Well, first keep in mind that this is only the first project, and I kept it deliberately simple so you can get moving quickly with your own code. Trust me, things will get more complex ‚Äì in fact tomorrow you‚Äôll be set free with your own project, so don‚Äôt get too comfortable!</p><p>Second, though, you <em>have</em> been using advanced features. In fact, without realizing it you‚Äôve actually been using all the most advanced features Swift has to offer. We‚Äôve actually been using closures all the time ‚Äì just look at code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tip percentage&quot;</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $tipPercentage<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tipPercentages<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">,</span> format<span class="token punctuation">:</span> <span class="token punctuation">.</span>percent<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Did you notice that <code>$0</code> in there? That‚Äôs shorthand syntax for closure parameters, because we‚Äôre inside a closure.</p><p>Anyway, now that the app is complete it‚Äôs time for a quick recap what you learned, a short test to make sure you‚Äôve understood what was taught, then your first challenges ‚Äì exercises designed to get you writing your own code as quickly as possible.</p><p><strong>I do not provide the answers to these challenges.</strong> This is intentional: I want you to figure it out by yourself rather than just looking at someone else‚Äôs work. As Marvin Phillips said, ‚Äúthe difference between try and triumph is a little umph.‚Äù</p><p><strong>Today you should work through the wrap up chapter for project 1, complete its review, then work through all three of its challenges.</strong></p><h3 id="wesplit-wrap-up" tabindex="-1"><a class="header-anchor" href="#wesplit-wrap-up"><span>WeSplit: Wrap up</span></a></h3>`,10),b={class:"hint-container details"},_=e("summary",null,"WeSplit: Wrap up",-1),S=p('<p>You‚Äôve reached the end of your first SwiftUI app: good job! We‚Äôve covered a lot of ground, but I‚Äôve also tried to go nice and slowly to make sure it all sinks in ‚Äì we‚Äôve got lots more to cover in future projects, so taking a little extra time now is OK.</p><p>In this project you learn about the basic structure of SwiftUI apps, how to build forms and sections, creating navigation views and navigation bar titles, how to store program state with the <code>@State</code> and <code>@FocusState</code> property wrappers, how to create user interface controls like <code>TextField</code> and <code>Picker</code>, and how to create views in a loop using <code>ForEach</code>. Even better, you have a real project to show off for your efforts.</p><h4 id="review-what-you-learned" tabindex="-1"><a class="header-anchor" href="#review-what-you-learned"><span>Review what you learned</span></a></h4><p>Anyone can sit through a tutorial, but it takes actual work to remember what was taught. It‚Äôs my job to make sure you take as much from these tutorials as possible, so I‚Äôve prepared a short review to help you check your learning.</p><p><a href="https://www.hackingwithswift.com/review/ios-swiftui/wesplit" target="_blank" rel="noopener noreferrer">Click here to review what you learned in this project.</a></p><h4 id="challenge" tabindex="-1"><a class="header-anchor" href="#challenge"><span>Challenge</span></a></h4><p>One of the best ways to learn is to write your own code as often as possible, so here are three ways you should try extending this app to make sure you fully understand what‚Äôs going on:</p><ol><li>Add a header to the third section, saying ‚ÄúAmount per person‚Äù</li><li>Add another section showing the total amount for the check ‚Äì i.e., the original amount plus tip value, without dividing by the number of people.</li><li>Change the tip percentage picker to show a new screen rather than using a segmented control, and give it a wider range of options ‚Äì everything from 0% to 100%. Tip: use the range <code>0..&lt;101</code> for your range rather than a fixed array.</li></ol><p>And if you found those easy, here‚Äôs a tough one for you: rather than having to type <code>.currency(code: Locale.current.currencyCode ?? &quot;USD&quot;)</code> in two places, can you make a new property to store the currency formatter? You‚Äôll need to give your property a specific return type in order to keep the rest of your code happy: <code>FloatingPointFormatStyle&lt;Double&gt;</code>.Currency.</p><p>You can find that for yourself using Xcode‚Äôs Quick Help window ‚Äì open up the right-hand navigator, then select the Quick Help inspector, and finally click select the <code>.currency</code> code. You‚Äôll see Xcode displays <code>&lt;Value&gt;</code> rather than <code>&lt;Double&gt;</code>, because this thing is able to display other kinds of floating-point numbers too, but here we need <code>Double</code>.</p>',10),j=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"WeSplit: Wrap up - Additional"),e("ul",null,[e("li",null,[e("a",{href:"https://www.hackingwithswift.com/review/ios-swiftui/wesplit",target:"_blank",rel:"noopener noreferrer"},"Review for Project 1: WeSplit")])])],-1),x=e("p",null,"Once you‚Äôre done, tell other people: you‚Äôve completed your first SwiftUI project, you‚Äôve passed the test, and you‚Äôve even extended it with your own code.",-1),D=e("p",null,"You should be proud of what you‚Äôve accomplished ‚Äì good job!",-1),I=e("hr",null,null,-1);function W(c,P){const o=r("router-link"),a=r("VPCard");return w(),h("div",null,[e("h1",f,[e("a",y,[e("span",null,d(c.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e("nav",m,[e("ul",null,[e("li",null,[t(o,{to:"#project-1-part-three"},{default:n(()=>[l("Project 1, part three")]),_:1}),e("ul",null,[e("li",null,[t(o,{to:"#wesplit-wrap-up"},{default:n(()=>[l("WeSplit: Wrap up")]),_:1})])])])])]),k,t(a,s(i({title:"100 Days of SwiftUI - Day 18",desc:"Project 1, part three",link:"https://www.hackingwithswift.com/100/swiftui/18",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,e("details",b,[_,t(a,s(i({title:"100 Days of SwiftUI - Day 18 - WeSplit: Wrap up",desc:"WeSplit: Wrap up",link:"https://www.hackingwithswift.com/books/ios-swiftui/wesplit-wrap-up",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),S]),j,x,D,I])}const U=u(g,[["render",W],["__file","18.html.vue"]]),A=JSON.parse('{"path":"/swift/100-days-of-swiftui/18.html","title":"Day 18","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Day 18","description":"100 Days of SwiftUI > Day 18","category":["Swift"],"tag":["crashcourse","paul-hudson","swift","swiftui","hacking-with-swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"100 Days of SwiftUI > Day 18"},{"property":"og:description","content":"Day 18"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/100-days-of-swiftui/18.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/swift/100-days-of-swiftui/18.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"Day 18"}],["meta",{"property":"og:description","content":"100 Days of SwiftUI > Day 18"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"paul-hudson"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"hacking-with-swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day 18\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Project 1, part three","slug":"project-1-part-three","link":"#project-1-part-three","children":[{"level":3,"title":"WeSplit: Wrap up","slug":"wesplit-wrap-up","link":"#wesplit-wrap-up","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":2.98,"words":894},"filePathRelative":"swift/100-days-of-swiftui/18.md","localizedDate":"2023ÎÖÑ 12Ïõî 27Ïùº","excerpt":"\\n\\n<hr>\\n"}');export{U as comp,A as data};
