import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,t as u,b as s,w as l,n as h,g,d as e,e as t,r as o,o as m}from"./app-U_bew1in.js";const v={},b={id:"frontmatter-title-관련",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},f=n("hr",null,null,-1),k=t(`<hr><p>SBB 서비스는 현재 8080번 포트로 서비스를 하고 있다. 하지만 대부분의 인터넷 서비스는 8080번 포트 대신 80번 포트로 서비스를 한다. 80번 포트를 사용하면 <code>고정아이피:80</code>과 같이 사용해도 되고 <code>고정아이피</code> 처럼 80번 포트를 생략하여 사용할 수 있다. 왜냐하면 80번 포트가 HTTP 프로토콜의 기본(Default) 포트이기 때문이다.</p><p>이번 장에서는 SBB 서비스를 80번 포트로 사용할 수 있는 방법에 대해서 알아보자.</p><hr><h2 id="스프링부트를-80-포트로-서비스하기" tabindex="-1"><a class="header-anchor" href="#스프링부트를-80-포트로-서비스하기"><span>스프링부트를 80 포트로 서비스하기</span></a></h2><p>스프링부트 서비스를 시작할때 -Dserver.port=80와 같은 옵션을 추가하여 스프링부트를 시작하면 80번 포트로 서비스가 가능하다. 단, 80번 포트로 서비스하기 위해서는 루트 권한으로 스프링부트를 시작해야 한다.</p><p>즉, 다음과 같이 실행하면 80번 포트로 서비스가 가능하다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">java</span> <span class="token parameter variable">-Dserver.port</span><span class="token operator">=</span><span class="token number">80</span> <span class="token parameter variable">-jar</span> sbb-0.0.2.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>하지만 위와 같이 스프링부트에서 직접 80 포트를 지정하여 사용하는 방법은 추천하지 않는다. 왜냐하면 루트 권한으로 실행해야 한다는 단점 외에도 무엇보다도 SSL을 적용하여 https 서비스를 운영하기가 쉽지 않기 때문이다. SSL을 적용하려면 Nginx나 Apache와 같은 웹서버가 필요하다.</p><blockquote><p>SSL을 적용하기 위해서는 도메인이 필요하므로 SSL을 적용하는 방법은 조금 후에 알아보자.</p></blockquote><hr><h2 id="nginx를-사용하여-80-포트로-서비스하기" tabindex="-1"><a class="header-anchor" href="#nginx를-사용하여-80-포트로-서비스하기"><span>Nginx를 사용하여 80 포트로 서비스하기</span></a></h2><p>Nginx는 높은 성능을 위해서 개발된 웹 서버로 설정이 무척 간단하여 쉽게 사용할수 있다. 이번에는 Nginx와 스프링부트를 연동하여 80번 포트로 서비스하는 방법에 대해서 알아보자.</p><h3 id="nginx-설치" tabindex="-1"><a class="header-anchor" href="#nginx-설치"><span>Nginx 설치</span></a></h3><p>다음과 같이 루트 권한으로 Nginx를 설치하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>대략 10초 내외로 설치가 될 것이다.</p><h3 id="nginx-설정" tabindex="-1"><a class="header-anchor" href="#nginx-설정"><span>Nginx 설정</span></a></h3>`,18),y=n("code",null,"/etc/nginx/sites-available",-1),N=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> /etc/nginx/sites-available/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),j=n("code",null,"/etc/nginx/sites-available",-1),w=n("code",null,"deafult",-1),S=t(`<p>SBB 서비스에 대한 Nginx의 설정파일을 다음과 같이 관리자 권한으로 작성하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">nano</span> sbb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2),B=n("code",null,"sbb",-1),T=n("code",null,"/etc/nginx/sites-available/",-1),H=n("code",null,"sbb",-1),P=t(`<div class="language-nginx line-numbers-mode" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token directive"><span class="token keyword">server_name</span> localhost</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token directive"><span class="token keyword">proxy_pass</span> http://localhost:8080</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$http_host</span></span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>listen 80</code> 은 웹 서버를 80 포트로 서비스 한다는 의미이다. HTTP 프로토콜의 기본포트는 80이다. 따라서 이제 <code>http://3.37.58.70:8080</code> 대신 포트를 생략하여 <code>http://3.37.58.70</code> 처럼 웹 브라우저에서 접속 할 수 있다.</p><p>server_name에는 <code>localhost</code>를 입력한다. 만약 ip와 연결된 도메인을 구입하였다면 localhost 대신 해당 도메인명을 적어주면 된다.<code>location / { ... }</code>은 <code>/</code>에 해당되는 URL, 즉 모든 요청에 대한 설정을 담당하는 영역이다. 세부 설정은 다음과 같다.</p>`,3),R=n("li",null,[n("code",null,"proxy_pass"),e(" - Nginx 웹서버의 모든 요청을 "),n("code",null,"http://localhost:8080"),e(" 로 리다이렉트한다.")],-1),D=n("code",null,"proxy_set_header",-1),L=n("code",null,"localhost:8080",-1),O=n("code",null,"sbb",-1),V=n("code",null,"/etc/nginx/sites-enabled",-1),q=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> /etc/nginx/sites-enabled/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),C=n("code",null,"sites-enabled",-1),F=n("code",null,"site-available",-1),I=t(`<p><code>ls</code> 명령을 수행하면 현재 <code>default</code> 설정 파일만 링크됨을 확인할 수 있다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># default</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),J=n("code",null,"default",-1),z=n("code",null,"sbb",-1),$=t(`<p>먼저 다음처럼 <code>default</code> 링크를 삭제하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">rm</span> default</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2),A=n("code",null,"sbb",-1),K=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /etc/nginx/sites-available/sbb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),Z=n("code",null,"ls",-1),U=n("code",null,"default",-1),W=n("code",null,"sbb",-1),X=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">ls</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># sbb</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx-실행" tabindex="-1"><a class="header-anchor" href="#nginx-실행"><span>Nginx 실행</span></a></h3><p>Nginx는 설치할 때 자동으로 실행되므로 앞에서 작성한 Nginx 설정을 적용하려면 Nginx를 다음처럼 다시 시작해야 한다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl restart nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">혹시 Nginx 설정 파일에 오류가 발생했다면?</p><p>Nginx의 설정 파일에 오류가 있는지 확인하는 방법은 다음과 같다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> nginx <span class="token parameter variable">-t</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span></span>
<span class="line"><span class="token comment"># nginx: configuration file /etc/nginx/nginx.conf test is successful</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>nginx -t</code> 명령 수행 시 오류가 발생한다면 설정이 올바르지 않은 경우이므로 Nginx서버가 정상적으로 실행되지 않을 것이다.</p><p>Nginx를 중지하는 명령은 다음과 같다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl stop nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Nginx를 시작하는 명령은 다음과 같다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl start nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="sbb-작동-확인하기" tabindex="-1"><a class="header-anchor" href="#sbb-작동-확인하기"><span>SBB 작동 확인하기</span></a></h3><p>Nginx를 적용했으니 웹 브라우저로 다음 URL에 접속해 보자.</p><blockquote><p><code>http://3.37.58.70/</code> (여러분의 고정아이피를 사용하도록 하자.)</p></blockquote><p>웹서버(Nginx)를 사용하기 때문에 이전과 달리 <code>:8080</code>과 같은 포트번호를 사용할 필요가 없어졌다. Nginx를 사용하면 HTTP 기본 포트인 80 포트를 사용할 수 있기 때문이다. 80 포트를 사용할 경우에는 <code>http://3.37.58.70:80</code> 처럼 사용해도 되지만 <code>:80</code> 을 생략할 수 있다.</p><figure><img src="https://wikidocs.net/images/page/163117/O_4-08_1.png" alt="다음처럼 완벽하게 실행되는 SBB를 확인할 수 있을 것이다." tabindex="0" loading="lazy"><figcaption>다음처럼 완벽하게 실행되는 SBB를 확인할 수 있을 것이다.</figcaption></figure>`,10),E=n("img",{src:"https://wikidocs.net/images/page/163117/O_4-08_2.png",alt:'만약 80 포트로 접속시 다음과 같이 502 오류가 발생한다면 이는 Nginx는 실행이 되었는데 스프링부트가 실행되지 않은 경우이므로 <FontIcon icon="iconfont icon-shell"/>을 실행하여 스프링부트 서버를 실행하자.',tabindex:"0",loading:"lazy"},null,-1),M=n("code",null,"start.sh",-1),G=n("hr",null,null,-1);function Q(c,Y){const i=o("router-link"),p=o("VPCard"),a=o("FontIcon");return m(),r("div",null,[n("h1",b,[n("a",_,[n("span",null,u(c.$frontmatter.title)+" 관련",1)])]),n("nav",x,[n("ul",null,[n("li",null,[s(i,{to:"#스프링부트를-80-포트로-서비스하기"},{default:l(()=>[e("스프링부트를 80 포트로 서비스하기")]),_:1})]),n("li",null,[s(i,{to:"#nginx를-사용하여-80-포트로-서비스하기"},{default:l(()=>[e("Nginx를 사용하여 80 포트로 서비스하기")]),_:1}),n("ul",null,[n("li",null,[s(i,{to:"#nginx-설치"},{default:l(()=>[e("Nginx 설치")]),_:1})]),n("li",null,[s(i,{to:"#nginx-설정"},{default:l(()=>[e("Nginx 설정")]),_:1})]),n("li",null,[s(i,{to:"#nginx-실행"},{default:l(()=>[e("Nginx 실행")]),_:1})]),n("li",null,[s(i,{to:"#sbb-작동-확인하기"},{default:l(()=>[e("SBB 작동 확인하기")]),_:1})])])])])]),f,s(p,h(g({title:"4-08. Nginx",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/163117",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),k,n("p",null,[e("그리고 다음처럼 "),s(a,{icon:"fas fa-folder-open"}),y,e(" 디렉터리로 이동하자.")]),N,n("p",null,[e("."),s(a,{icon:"fas fa-folder-open"}),j,e(" 디렉터리는 Nginx의 설정 파일들이 위치한 디렉터리이다. 최초 설치시에는 "),s(a,{icon:"fas fa-file-lines"}),w,e("라는 설정 파일만 존재한다.")]),S,n("p",null,[e("그리고 "),s(a,{icon:"fas fa-file-lines"}),B,e(" 파일의 내용은 다음과 같이 작성하자.")]),n("blockquote",null,[n("p",null,[e("파일명: "),s(a,{icon:"fas fa-folder-open"}),T,s(a,{icon:"fas fa-file-lines"}),H])]),P,n("ul",null,[R,n("li",null,[D,e(" - "),L,e('로 실행된 스프링부트 서버에 특정 헤더값을 전달하기 위해서 proxy_set_header를 사용한다. (Nginx를 통해서 스프링부트의 톰캣서버로 요청이 전달되기 때문에 "Remote IP" 헤더값이 실제 값이 아닌 127.0.0.1 처럼 잘못 전달되는 것을 방지하기 위해 사용한다.) 이제 작성한 '),s(a,{icon:"fas fa-file-lines"}),O,e(" 파일을 Nginx가 환경 파일로 읽을 수 있도록 설정해야 한다.")])]),n("p",null,[e("다음처럼 "),s(a,{icon:"fas fa-folder-open"}),V,e(" 디렉터리로 이동하자.")]),q,n("p",null,[e("."),s(a,{icon:"fas fa-folder-open"}),C,e(" 디렉터리는 "),s(a,{icon:"fas fa-folder-open"}),F,e(" 디렉터리에 있는 설정 파일 중에서 활성화하고 싶은 것을 링크로 관리하는 디렉터리이다.")]),I,n("p",null,[e("이제 "),s(a,{icon:"fas fa-file-lines"}),J,e(" 링크는 삭제하고 "),s(a,{icon:"fas fa-file-lines"}),z,e(" 파일을 링크하도록 변경해야 한다.")]),$,n("p",null,[e("그리고 다음처럼 "),s(a,{icon:"fas fa-file-lines"}),A,e(" 파일을 링크하자.")]),K,n("p",null,[Z,e(" 명령을 수행하면 "),s(a,{icon:"fas fa-file-lines"}),U,e("는 사라지고 "),s(a,{icon:"fas fa-file-lines"}),W,e(" 링크만 남은 것을 확인할 수 있다.")]),X,n("figure",null,[E,n("figcaption",null,[e("만약 80 포트로 접속시 다음과 같이 502 오류가 발생한다면 이는 Nginx는 실행이 되었는데 스프링부트가 실행되지 않은 경우이므로 "),s(a,{icon:"iconfont icon-shell"}),M,e("을 실행하여 스프링부트 서버를 실행하자.")])]),G])}const sn=d(v,[["render",Q],["__file","04H.html.vue"]]),an=JSON.parse('{"path":"/java/jump-to-spring-boot/04H.html","title":"4-08. Nginx","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"4-08. Nginx","description":"Jump to Spring Boot > 4-08. Nginx","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 4-08. Nginx"},{"property":"og:description","content":"4-08. Nginx"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/04H.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/04H.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"4-08. Nginx"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 4-08. Nginx"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/163117/O_4-08_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4-08. Nginx\\",\\"image\\":[\\"https://wikidocs.net/images/page/163117/O_4-08_1.png\\",\\"https://wikidocs.net/images/page/163117/O_4-08_2.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"스프링부트를 80 포트로 서비스하기","slug":"스프링부트를-80-포트로-서비스하기","link":"#스프링부트를-80-포트로-서비스하기","children":[]},{"level":2,"title":"Nginx를 사용하여 80 포트로 서비스하기","slug":"nginx를-사용하여-80-포트로-서비스하기","link":"#nginx를-사용하여-80-포트로-서비스하기","children":[{"level":3,"title":"Nginx 설치","slug":"nginx-설치","link":"#nginx-설치","children":[]},{"level":3,"title":"Nginx 설정","slug":"nginx-설정","link":"#nginx-설정","children":[]},{"level":3,"title":"Nginx 실행","slug":"nginx-실행","link":"#nginx-실행","children":[]},{"level":3,"title":"SBB 작동 확인하기","slug":"sbb-작동-확인하기","link":"#sbb-작동-확인하기","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":1.6,"words":480},"filePathRelative":"java/jump-to-spring-boot/04H.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{sn as comp,an as data};
