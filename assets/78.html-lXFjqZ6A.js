import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as n,t as r,b as a,w as u,n as d,g as k,d as s,e as m,r as t,o as h}from"./app-U_bew1in.js";const v={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},g={class:"table-of-contents"},y=n("hr",null,null,-1),b=m(`<h2 id="time-for-mapkit" tabindex="-1"><a class="header-anchor" href="#time-for-mapkit"><span>Time for MapKit</span></a></h2><p>Yesterday you built a new app that imports photos from the user’s library, and hopefully you’re pleased with the finished product – or at least making great progress towards the finished product.</p><p>But your boss has come in and demanded a new feature: when you’re viewing a picture that was imported, you should show a map with a pin that marks where they were when that picture was added. It might be on the same screen side by side with the photo, it might be shown or hidden using a segmented control, or perhaps it’s on a different screen – it’s down to you. Regardless, you know how to drop pins, and you also know how to use the center coordinate of map views, so the only thing left to figure out is how to get the user’s location to save alongside their text and image.</p><p>Although I do want you to push your skills, I’m not <em>cruel</em>. So, here’s a class that fetches the user’s location:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token class-name">CoreLocation</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">LocationFetcher</span><span class="token punctuation">:</span> <span class="token class-name">NSObject</span><span class="token punctuation">,</span> <span class="token class-name">CLLocationManagerDelegate</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> manager <span class="token operator">=</span> <span class="token class-name">CLLocationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> lastKnownLocation<span class="token punctuation">:</span> <span class="token class-name">CLLocationCoordinate2D</span><span class="token operator">?</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        manager<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token keyword">self</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        manager<span class="token punctuation">.</span><span class="token function">requestWhenInUseAuthorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        manager<span class="token punctuation">.</span><span class="token function">startUpdatingLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">locationManager</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> manager<span class="token punctuation">:</span> <span class="token class-name">CLLocationManager</span><span class="token punctuation">,</span> didUpdateLocations locations<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">CLLocation</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        lastKnownLocation <span class="token operator">=</span> locations<span class="token punctuation">.</span>first<span class="token operator">?</span><span class="token punctuation">.</span>coordinate</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To use that, start by adding a new key in the Info tab for your app&#39;s target, just like we did when we wanted Face ID permission. This key is called <code>“Privacy - Location When In Use Usage Description”</code>, then give it some sort of value explaining to the user why you need their location.</p><p>Now you can use it inside SwiftUI view like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> locationFetcher <span class="token operator">=</span> <span class="token class-name">LocationFetcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Start Tracking Location&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                locationFetcher<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Read Location&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token keyword">let</span> location <span class="token operator">=</span> locationFetcher<span class="token punctuation">.</span>lastKnownLocation <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Your location is </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">location</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Your location is unknown&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),_=n("code",null,"[Location]",-1),L=n("code",null,"[Apple]",-1),D=n("p",null,"And now it’s over to you: can you add the feature your boss wants, and bring MapKit and SwiftUI together in a single app?",-1),I=n("hr",null,null,-1);function x(e,S){const o=t("router-link"),i=t("VPCard"),p=t("FontIcon");return h(),l("div",null,[n("h1",w,[n("a",f,[n("span",null,r(e.$frontmatter.title)+" 관련",1)])]),n("nav",g,[n("ul",null,[n("li",null,[a(o,{to:"#time-for-mapkit"},{default:u(()=>[s("Time for MapKit")]),_:1})])])]),y,a(i,d(k({title:"100 Days of SwiftUI - Day 78",desc:"Time for MapKit",link:"https://www.hackingwithswift.com/100/swiftui/78",logo:"https://www.hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[s("If you’re using the simulator rather than a real device, you can fake a location by going to the Debug menu and choosing "),a(p,{icon:"iconfont icon-select"}),_,s(" > "),L,s(".")]),D,I])}const K=c(v,[["render",x],["__file","78.html.vue"]]),U=JSON.parse('{"path":"/swift/100-days-of-swiftui/78.html","title":"Day 78","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Day 78","description":"100 Days of SwiftUI > Day 78","category":["Swift"],"tag":["crashcourse","paul-hudson","swift","swiftui","hacking-with-swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"100 Days of SwiftUI > Day 78"},{"property":"og:description","content":"Day 78"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/100-days-of-swiftui/78.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/swift/100-days-of-swiftui/78.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"Day 78"}],["meta",{"property":"og:description","content":"100 Days of SwiftUI > Day 78"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"paul-hudson"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"hacking-with-swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day 78\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Time for MapKit","slug":"time-for-mapkit","link":"#time-for-mapkit","children":[]}],"git":{"createdTime":1707972191000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":9}]},"readingTime":{"minutes":1.49,"words":448},"filePathRelative":"swift/100-days-of-swiftui/78.md","localizedDate":"2024년 2월 15일","excerpt":"\\n\\n<hr>\\n"}');export{K as comp,U as data};
