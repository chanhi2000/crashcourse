import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as t,t as p,b as e,w as r,n as i,g as n,r as m,o as h,d as s}from"./app-U_bew1in.js";const d={},g={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},_={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},f={class:"table-of-contents"},k=t("hr",null,null,-1),b=t("h2",{id:"minimum-stack-minimum-queue",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#minimum-stack-minimum-queue"},[t("span",null,"Minimum Stack / Minimum Queue")])],-1),y=t("hr",null,null,-1),A=t("h2",{id:"sparse-table",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#sparse-table"},[t("span",null,"Sparse Table")])],-1),v=t("hr",null,null,-1);function M(l,S){const a=m("router-link"),o=m("VPCard");return h(),u("div",null,[t("h1",g,[t("a",_,[t("span",null,p(l.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),t("nav",f,[t("ul",null,[t("li",null,[e(a,{to:"#minimum-stack-minimum-queue"},{default:r(()=>[s("Minimum Stack / Minimum Queue")]),_:1})]),t("li",null,[e(a,{to:"#sparse-table"},{default:r(()=>[s("Sparse Table")]),_:1})])])]),k,b,e(o,i(n({title:"Algorithms for Competitive Programming > Minimum Stack / Minimum Queue",desc:"Minimum Stack / Minimum Queue",link:"https://cp-algorithms.com/data_structures/stack_queue_modification.html",logo:"https://cp-algorithms.com/favicon.ico",background:"rgba(119,119,170,0.2)"})),null,16),y,A,e(o,i(n({title:"Algorithms for Competitive Programming > Sparse Table",desc:"Sparse Table",link:"https://cp-algorithms.com/data_structures/sparse-table.html",logo:"https://cp-algorithms.com/favicon.ico",background:"rgba(119,119,170,0.2)"})),null,16),v])}const P=c(d,[["render",M],["__file","02A.html.vue"]]),x=JSON.parse('{"path":"/cpp/algorithms-for-competitive-programming/02-data-structures/02A.html","title":"02A. Fundamentals","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"02A. Fundamentals","description":"Algorithms for Competitive Programming > 02A. Fundamentals","category":["Cpp"],"tag":["crashcourse","cpp","c-plus-plus","algorithm"],"head":[[{"meta":null},{"property":"og:title","content":"Algorithms for Competitive Programming > 02A. Fundamentals"},{"property":"og:description","content":"02A. Fundamentals"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/cpp/algorithms-for-competitive-programming/02-data-structures/02A.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/cpp/algorithms-for-competitive-programming/02-data-structures/02A.html"}],["meta",{"property":"og:site_name","content":"ü•ÅCrashcourse"}],["meta",{"property":"og:title","content":"02A. Fundamentals"}],["meta",{"property":"og:description","content":"Algorithms for Competitive Programming > 02A. Fundamentals"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"cpp"}],["meta",{"property":"article:tag","content":"c-plus-plus"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02A. Fundamentals\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Minimum Stack / Minimum Queue","slug":"minimum-stack-minimum-queue","link":"#minimum-stack-minimum-queue","children":[]},{"level":2,"title":"Sparse Table","slug":"sparse-table","link":"#sparse-table","children":[]}],"git":{"createdTime":1709715232000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":6}]},"readingTime":{"minutes":0.4,"words":119},"filePathRelative":"cpp/algorithms-for-competitive-programming/02-data-structures/02A.md","localizedDate":"2024ÎÖÑ 3Ïõî 6Ïùº","excerpt":"\\n\\n<hr>\\n<h2>Minimum Stack / Minimum Queue</h2>\\n"}');export{P as comp,x as data};
