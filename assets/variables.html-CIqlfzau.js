import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,a as n,t as v,b as l,n as h,g,w as a,d as s,e as p,r as o,o as y}from"./app-U_bew1in.js";const f={},_={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},S=n("hr",null,null,-1),A=n("h2",{id:"binding-and-mutability",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#binding-and-mutability"},[n("span",null,"Binding and mutability")])],-1),R=n("h3",{id:"_1-🌟-a-variable-can-be-used-only-if-it-has-been-initialized",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-🌟-a-variable-can-be-used-only-if-it-has-been-initialized"},[n("span",null,"1. 🌟 A variable can be used only if it has been initialized.")])],-1),P=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification to the code")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// Uninitialized but used, ERROR !")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// Uninitialized but also unused, only a Warning !")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// warning: unused variable: `y`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:5:9")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 5 |     let y: i32; // Uninitialized but also unused, only a Warning !")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         ^ help: if this is intentional, prefix it with an underscore: `_y`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = note: `#[warn(unused_variables)]` on by default")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error[E0381]: used binding `x` isn't initialized")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:7:5")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 4 |     let x: i32; // Uninitialized but used, ERROR !")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         - binding declared here but left uninitialized")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ...")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 7 |     assert_eq!(x, 5);")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |     ^^^^^^^^^^^^^^^^ `x` used here but it isn't initialized")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// help: consider assigning a value")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 4 |     let x: i32 = 0; // Uninitialized but used, ERROR !")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |                +++")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// For more information about this error, try `rustc --explain E0381`.")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// warning: `playground` (bin "playground") generated 1 warning')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error; 1 warning emitted')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification to the code")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// uninitialized but using, ERROR !")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// uninitialized but also unusing, only warning")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{} is equal to 5"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Success!")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("h3",{id:"_2-🌟-use-mut-to-mark-a-variable-as-mutable",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-🌟-use-mut-to-mark-a-variable-as-mutable"},[n("span",null,"2. 🌟 Use mut to mark a variable as mutable.")])],-1),z=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fill the blanks in the code to make it compile")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token constant"},"__"),s(),n("span",{class:"token constant"},"__"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token constant"},"__"),s(),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},"    "),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error: expected one of `:`, `;`, `=`, `@`, or `|`, found `__`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:4:12")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 4 |     let __ __ = 1;")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |            ^^ expected one of `:`, `;`, `=`, `@`, or `|`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fill the blanks in the code to make it compile")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    x "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Success!:")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("hr",null,null,-1),T=n("h2",{id:"scope",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#scope"},[n("span",null,"Scope")])],-1),V=n("p",null,"A scope is the range within the program for which the item is valid.",-1),C=n("h3",{id:"_3-🌟",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-🌟"},[n("span",null,"3. 🌟")])],-1),U=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"let"),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"The value of x is {} and value of y is {}"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"The value of x is {} and value of y is {}"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error[E0425]: cannot find value `y` in this scope")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:9:62")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// 9 |     println!("The value of x is {} and value of y is {}", x, y); ')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |                                                              ^ help: a local variable with a similar name exists: `x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// For more information about this error, try `rustc --explain E0425`.")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"let"),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"The value of x is {} and value of y is {}"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"The value of x is {} and value of y is {}"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// The value of x is 10 and value of y is 5")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// The value of x is 10 and value of y is 20")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("h3",{id:"_4-🌟🌟",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-🌟🌟"},[n("span",null,"4. 🌟🌟")])],-1),N=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error with the use of define_x")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{}, world"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"define_x"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error[E0425]: cannot find value `x` in this scope")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:4:27")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// 4 |     println!("{}, world", x); ')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |                           ^ not found in this scope")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// For more information about this error, try `rustc --explain E0425`.")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("p",null,null,-1),I=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error with the use of define_x")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"define_x"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{}, world"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"define_x"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},"    x"),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// hello, world")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),W=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"define_x"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{:?}, world"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"define_x"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token lifetime-annotation symbol"},"'static"),s(),n("span",{class:"token keyword"},"str"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"hello"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},"    x"),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// "hello", world')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("hr",null,null,-1),Z=n("h2",{id:"shadowing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#shadowing"},[n("span",null,"Shadowing")])],-1),M=n("p",null,"You can declare a new variable with the same name as a previous variable, here we can say **the first one is shadowed by the second one.",-1),Y=n("h3",{id:"_5-🌟🌟",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-🌟🌟"},[n("span",null,"5. 🌟🌟")])],-1),J=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Only modify `assert_eq!` to make the `println!` work(print `42` in terminal)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{}"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// Prints "42".')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//     Finished dev [unoptimized + debuginfo] target(s) in 0.55s")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//      Running `target/debug/playground`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// thread 'main' panicked at 'assertion failed: `(left == right)`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   left: `12`,")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  right: `5`', src/main.rs:7:9")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Only modify `assert_eq!` to make the `println!` work(print `42` in terminal)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"12"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"42"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{}"'),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},'// Prints "42".')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 42")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=n("h3",{id:"_6-🌟🌟",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-🌟🌟"},[n("span",null,"6. 🌟🌟")])],-1),H=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Remove a line in the code to make it compile")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Shadowing and re-binding")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[s("    x "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Shadowing")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"I can also be bound to text!"'),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// warning: value assigned to `x` is never read")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:4:13")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 4 |     let mut x: i32 = 1;")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |             ^")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = help: maybe it is overwritten before being read?")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = note: `#[warn(unused_assignments)]` on by default")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// warning: variable `x` is assigned to, but never used")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:7:9")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 7 |     let x = x; ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         ^")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = note: consider using `_x` instead")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = note: `#[warn(unused_variables)]` on by default")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// warning: value assigned to `x` is never read")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:8:5")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 8 |     x += 3;")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |     ^")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   = help: maybe it is overwritten before being read?")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// warning: unused variable: `y`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   --> src/main.rs:11:9")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 11 |     let y = 4;")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    |         ^ help: if this is intentional, prefix it with an underscore: `_y`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// warning: unused variable: `y`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   --> src/main.rs:13:9")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// 13 |     let y = "I can also be bound to text!"; ')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    |         ^ help: if this is intentional, prefix it with an underscore: `_y`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error[E0384]: cannot assign twice to immutable variable `x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:8:5")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 7 |     let x = x; ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         -")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         first assignment to `x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |         help: consider making this binding mutable: `mut x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 8 |     x += 3;")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |     ^^^^^^ cannot assign twice to immutable variable")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// For more information about this error, try `rustc --explain E0384`.")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// warning: `playground` (bin "playground") generated 5 warnings')]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error; 5 warnings emitted')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Remove a line in the code to make it compile")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"i32"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Shadowing and re-binding")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Shadowing")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"I can also be bound to text!"'),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Success!")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=p('<hr><h2 id="unused-variables" tabindex="-1"><a class="header-anchor" href="#unused-variables"><span>Unused variables</span></a></h2><h3 id="_7-fix-the-warning-below-with" tabindex="-1"><a class="header-anchor" href="#_7-fix-the-warning-below-with"><span>7. Fix the warning below with :</span></a></h3><ul><li>🌟 Only one solution</li><li>🌟🌟 Two distinct solutions</li></ul><div class="hint-container tip"><p class="hint-container-title">Note</p><p>none of the solutions is to remove the line <code>let x = 1</code></p></div>',5),X=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Warning: unused variable: `x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// No output")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),nn=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" _x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),sn=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token attribute attr-name"},"#[allow(unused_variables)]")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),an=p('<hr><h2 id="destructuring" tabindex="-1"><a class="header-anchor" href="#destructuring"><span>Destructuring</span></a></h2><h3 id="_8-🌟🌟-we-can-use-a-pattern-with-let-to-destructure-a-tuple-to-separate-variables" tabindex="-1"><a class="header-anchor" href="#_8-🌟🌟-we-can-use-a-pattern-with-let-to-destructure-a-tuple-to-separate-variables"><span>8. 🌟🌟 We can use a pattern with let to destructure a tuple to separate variables.</span></a></h3><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>you can use Shadowing or Mutability</p></div>',4),en=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    x "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//    Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error[E0384]: cannot assign twice to immutable variable `x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:5:5")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 4 |     let (x, y) = (1, 2);")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |          -")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |          |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |          first assignment to `x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |          help: consider making this binding mutable: `mut x`")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 5 |     x += 2;")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |     ^^^^^^ cannot assign twice to immutable variable")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// For more information about this error, try `rustc --explain E0384`.")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),tn=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"mut"),s(" x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    x "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ln=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"// Fix the error below with least amount of modification")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=p('<hr><h2 id="destructuring-assignments" tabindex="-1"><a class="header-anchor" href="#destructuring-assignments"><span>Destructuring assignments</span></a></h2><p>Introduced in Rust 1.59: You can now use tuple, slice, and struct patterns as the left-hand side of an assignment.</p><h3 id="_9-🌟🌟" tabindex="-1"><a class="header-anchor" href="#_9-🌟🌟"><span>9. 🌟🌟</span></a></h3><div class="hint-container tip"><p class="hint-container-title">Note</p><p>the feature <code>Destructuring assignments</code> need 1.59 or higher Rust version</p></div>',5),on=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},".."),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},".."),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Fill the blank to make the code work")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},","),s("y"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"__"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Success!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}"),s()]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   Compiling playground v0.0.1 (/playground)")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// error[E0425]: cannot find value `__` in this scope")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//  --> src/main.rs:7:23")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 7 |     assert_eq!([x,y], __);")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"//   |                       ^^ not found in this scope")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// ")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// For more information about this error, try `rustc --explain E0425`.")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// error: could not compile `playground` (bin "playground") due to previous error')]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),pn=n("div",{class:"language-rust line-numbers-mode","data-highlighter":"prismjs","data-ext":"rs","data-title":"rs"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},".."),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},".."),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// fill the blank to make the code work")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token macro property"},"assert_eq!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),un={class:"hint-container note"},rn=n("p",{class:"hint-container-title"},"Note",-1),mn={href:"https://github.com/sunface/rust-by-practice",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"sunface/rust-by-practice",-1),kn=n("hr",null,null,-1);function bn(u,vn){const r=o("VPCard"),i=o("router-link"),m=o("SiteInfo"),c=o("Tabs"),d=o("FontIcon");return y(),b("div",null,[n("h1",_,[n("a",w,[n("span",null,v(u.$frontmatter.title)+" 관련",1)])]),l(r,h(g({title:"Rust By Practice",desc:"Rust By Practice",link:"/rust/rust-by-practice/README.md",logo:"https://practice.course.rs/favicon.svg",background:"rgba(22,25,35,0.2)"})),null,16),n("nav",x,[n("ul",null,[n("li",null,[l(i,{to:"#binding-and-mutability"},{default:a(()=>[s("Binding and mutability")]),_:1}),n("ul",null,[n("li",null,[l(i,{to:"#_1-🌟-a-variable-can-be-used-only-if-it-has-been-initialized"},{default:a(()=>[s("1. 🌟 A variable can be used only if it has been initialized.")]),_:1})]),n("li",null,[l(i,{to:"#_2-🌟-use-mut-to-mark-a-variable-as-mutable"},{default:a(()=>[s("2. 🌟 Use mut to mark a variable as mutable.")]),_:1})])])]),n("li",null,[l(i,{to:"#scope"},{default:a(()=>[s("Scope")]),_:1}),n("ul",null,[n("li",null,[l(i,{to:"#_3-🌟"},{default:a(()=>[s("3. 🌟")]),_:1})]),n("li",null,[l(i,{to:"#_4-🌟🌟"},{default:a(()=>[s("4. 🌟🌟")]),_:1})])])]),n("li",null,[l(i,{to:"#shadowing"},{default:a(()=>[s("Shadowing")]),_:1}),n("ul",null,[n("li",null,[l(i,{to:"#_5-🌟🌟"},{default:a(()=>[s("5. 🌟🌟")]),_:1})]),n("li",null,[l(i,{to:"#_6-🌟🌟"},{default:a(()=>[s("6. 🌟🌟")]),_:1})])])]),n("li",null,[l(i,{to:"#unused-variables"},{default:a(()=>[s("Unused variables")]),_:1}),n("ul",null,[n("li",null,[l(i,{to:"#_7-fix-the-warning-below-with"},{default:a(()=>[s("7. Fix the warning below with :")]),_:1})])])]),n("li",null,[l(i,{to:"#destructuring"},{default:a(()=>[s("Destructuring")]),_:1}),n("ul",null,[n("li",null,[l(i,{to:"#_8-🌟🌟-we-can-use-a-pattern-with-let-to-destructure-a-tuple-to-separate-variables"},{default:a(()=>[s("8. 🌟🌟 We can use a pattern with let to destructure a tuple to separate variables.")]),_:1})])])]),n("li",null,[l(i,{to:"#destructuring-assignments"},{default:a(()=>[s("Destructuring assignments")]),_:1}),n("ul",null,[n("li",null,[l(i,{to:"#_9-🌟🌟"},{default:a(()=>[s("9. 🌟🌟")]),_:1})])])])])]),S,l(m,{name:"3. Variables | Rust By Practice",desc:"3. Variables",url:"https://practice.rs/variables.html",logo:"https://practice.course.rs/favicon.svg",preview:"https://github.com/sunface/rust-by-practice/blob/master/en/assets/header.jpg?raw=true"}),A,R,l(c,{id:"15",data:[{id:"💀Problem"},{id:"Solution"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution")]),tab0:a(({value:e,isActive:t})=>[P]),tab1:a(({value:e,isActive:t})=>[F]),_:1}),j,l(c,{id:"26",data:[{id:"💀Problem"},{id:"Solution"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution")]),tab0:a(({value:e,isActive:t})=>[z]),tab1:a(({value:e,isActive:t})=>[q]),_:1}),E,T,V,C,l(c,{id:"44",data:[{id:"💀Problem"},{id:"Solution"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution")]),tab0:a(({value:e,isActive:t})=>[U]),tab1:a(({value:e,isActive:t})=>[B]),_:1}),D,l(c,{id:"55",data:[{id:"💀Problem"},{id:"Solution 🌟"},{id:"Solution 🌟🌟"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution 🌟")]),title2:a(({value:e,isActive:t})=>[s("Solution 🌟🌟")]),tab0:a(({value:e,isActive:t})=>[N,O]),tab1:a(({value:e,isActive:t})=>[I]),tab2:a(({value:e,isActive:t})=>[W]),_:1}),K,Z,M,Y,l(c,{id:"79",data:[{id:"💀Problem"},{id:"Solution"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution")]),tab0:a(({value:e,isActive:t})=>[J]),tab1:a(({value:e,isActive:t})=>[$]),_:1}),G,l(c,{id:"90",data:[{id:"💀Problem"},{id:"Solution"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution")]),tab0:a(({value:e,isActive:t})=>[H]),tab1:a(({value:e,isActive:t})=>[L]),_:1}),Q,l(c,{id:"122",data:[{id:"💀Problem"},{id:"Solution 🌟"},{id:"Solution 🌟🌟"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution 🌟")]),title2:a(({value:e,isActive:t})=>[s("Solution 🌟🌟")]),tab0:a(({value:e,isActive:t})=>[X]),tab1:a(({value:e,isActive:t})=>[nn]),tab2:a(({value:e,isActive:t})=>[sn]),_:1}),an,l(c,{id:"145",data:[{id:"💀Problem"},{id:"Solution 🌟"},{id:"Solution 🌟🌟"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution 🌟")]),title2:a(({value:e,isActive:t})=>[s("Solution 🌟🌟")]),tab0:a(({value:e,isActive:t})=>[en]),tab1:a(({value:e,isActive:t})=>[tn]),tab2:a(({value:e,isActive:t})=>[ln]),_:1}),cn,l(c,{id:"171",data:[{id:"💀Problem"},{id:"Solution"}],active:0},{title0:a(({value:e,isActive:t})=>[s("💀Problem")]),title1:a(({value:e,isActive:t})=>[s("Solution")]),tab0:a(({value:e,isActive:t})=>[on]),tab1:a(({value:e,isActive:t})=>[pn]),_:1}),n("div",un,[rn,n("p",null,[s("You can find the solutions "),n("a",mn,[s("here ("),l(d,{icon:"iconfont icon-github"}),dn,s(")")]),s(" (under the solutions path), but only use it when you need it")])]),kn])}const yn=k(f,[["render",bn],["__file","variables.html.vue"]]),fn=JSON.parse('{"path":"/rust/rust-by-practice/variables.html","title":"2. Variables","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"2. Variables","description":"Rust by Practice > 2. Variables","category":["Rust"],"tag":["crashcourse","freecodecamp","zubiarfan","youtube","rust","rs","wasm","assembly"],"head":[[{"meta":null},{"property":"og:title","content":"Rust by Practice > 2. Variables"},{"property":"og:description","content":"2. Variables"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/rust/rust-by-practice/variables.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/rust/rust-by-practice/variables.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"2. Variables"}],["meta",{"property":"og:description","content":"Rust by Practice > 2. Variables"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"freecodecamp"}],["meta",{"property":"article:tag","content":"zubiarfan"}],["meta",{"property":"article:tag","content":"youtube"}],["meta",{"property":"article:tag","content":"rust"}],["meta",{"property":"article:tag","content":"rs"}],["meta",{"property":"article:tag","content":"wasm"}],["meta",{"property":"article:tag","content":"assembly"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. Variables\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"next":"/rust/rust-by-practice/basic-types/numbers.md","isOriginal":false},"headers":[{"level":2,"title":"Binding and mutability","slug":"binding-and-mutability","link":"#binding-and-mutability","children":[{"level":3,"title":"1. 🌟 A variable can be used only if it has been initialized.","slug":"_1-🌟-a-variable-can-be-used-only-if-it-has-been-initialized","link":"#_1-🌟-a-variable-can-be-used-only-if-it-has-been-initialized","children":[]},{"level":3,"title":"2. 🌟 Use mut to mark a variable as mutable.","slug":"_2-🌟-use-mut-to-mark-a-variable-as-mutable","link":"#_2-🌟-use-mut-to-mark-a-variable-as-mutable","children":[]}]},{"level":2,"title":"Scope","slug":"scope","link":"#scope","children":[{"level":3,"title":"3. 🌟","slug":"_3-🌟","link":"#_3-🌟","children":[]},{"level":3,"title":"4. 🌟🌟","slug":"_4-🌟🌟","link":"#_4-🌟🌟","children":[]}]},{"level":2,"title":"Shadowing","slug":"shadowing","link":"#shadowing","children":[{"level":3,"title":"5. 🌟🌟","slug":"_5-🌟🌟","link":"#_5-🌟🌟","children":[]},{"level":3,"title":"6. 🌟🌟","slug":"_6-🌟🌟","link":"#_6-🌟🌟","children":[]}]},{"level":2,"title":"Unused variables","slug":"unused-variables","link":"#unused-variables","children":[{"level":3,"title":"7. Fix the warning below with :","slug":"_7-fix-the-warning-below-with","link":"#_7-fix-the-warning-below-with","children":[]}]},{"level":2,"title":"Destructuring","slug":"destructuring","link":"#destructuring","children":[{"level":3,"title":"8. 🌟🌟 We can use a pattern with let to destructure a tuple to separate variables.","slug":"_8-🌟🌟-we-can-use-a-pattern-with-let-to-destructure-a-tuple-to-separate-variables","link":"#_8-🌟🌟-we-can-use-a-pattern-with-let-to-destructure-a-tuple-to-separate-variables","children":[]}]},{"level":2,"title":"Destructuring assignments","slug":"destructuring-assignments","link":"#destructuring-assignments","children":[{"level":3,"title":"9. 🌟🌟","slug":"_9-🌟🌟","link":"#_9-🌟🌟","children":[]}]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":6.14,"words":1843},"filePathRelative":"rust/rust-by-practice/variables.md","localizedDate":"2023년 12월 27일","excerpt":"\\n"}');export{yn as comp,fn as data};
