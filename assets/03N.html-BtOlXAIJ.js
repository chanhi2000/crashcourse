import{_ as k}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,t as d,b as s,w as e,n as m,g,d as a,e as o,r as c,o as v}from"./app-U_bew1in.js";const h={},b={id:"frontmatter-title-관련",tabindex:"-1"},q={class:"header-anchor",href:"#frontmatter-title-관련"},f={class:"table-of-contents"},y=n("hr",null,null,-1),_=n("hr",null,null,-1),w={href:"https://github.com/pahkey/sbb3/tree/3-14",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"pahkey/sbb3",-1),S=n("code",null,"3-14",-1),Q=o(`<p>이번에는 SBB에 검색기능을 추가해 보자.</p><blockquote><p>참고로 검색은 이 책에서 다루는 가장 어려운 부분이다. 차분한 마음으로 따라오기 바란다.</p></blockquote><hr><h2 id="검색-기능" tabindex="-1"><a class="header-anchor" href="#검색-기능"><span>검색 기능</span></a></h2><p>SBB는 질문과 답변에 대한 데이터가 계속 쌓여가는 게시판이므로 검색기능은 필수라고 할 수 있다. 검색의 대상은 질문의 제목, 질문의 내용, 질문 작성자, 답변의 내용, 답변 작성자 정도로 하면 적당할 것이다. 즉, &quot;스프링&quot;이라고 검색을 하면 &quot;스프링&quot; 이라는 문자열이 제목, 내용, 질문 작성자, 답변, 답변 작성자에 존재하는지 찾아보고 그 결과를 화면에 보여주어야 한다.</p><p>이런 조건으로 검색하려면 다음과 같은 SQL 쿼리가 실행되어야 한다.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  <span class="token keyword">DISTINCT</span> q<span class="token punctuation">.</span>id</span>
<span class="line">  <span class="token punctuation">,</span> q<span class="token punctuation">.</span>author_id</span>
<span class="line">  <span class="token punctuation">,</span> q<span class="token punctuation">.</span>content</span>
<span class="line">  <span class="token punctuation">,</span> q<span class="token punctuation">.</span>create_date</span>
<span class="line">  <span class="token punctuation">,</span> q<span class="token punctuation">.</span>modify_date</span>
<span class="line">  <span class="token punctuation">,</span> q<span class="token punctuation">.</span>subject </span>
<span class="line"><span class="token keyword">FROM</span> </span>
<span class="line">  question q </span>
<span class="line">  <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> site_user u1 <span class="token keyword">ON</span> q<span class="token punctuation">.</span>author_id<span class="token operator">=</span>u1<span class="token punctuation">.</span>id </span>
<span class="line">  <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> answer a <span class="token keyword">ON</span> q<span class="token punctuation">.</span>id<span class="token operator">=</span>a<span class="token punctuation">.</span>question_id </span>
<span class="line">  <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> site_user u2 <span class="token keyword">ON</span> a<span class="token punctuation">.</span>author_id<span class="token operator">=</span>u2<span class="token punctuation">.</span>id </span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span></span>
<span class="line"><span class="token operator">AND</span> q<span class="token punctuation">.</span>subject <span class="token operator">LIKE</span> <span class="token string">&#39;%스프링%&#39;</span></span>
<span class="line"><span class="token operator">OR</span> q<span class="token punctuation">.</span>content <span class="token operator">LIKE</span> <span class="token string">&#39;%스프링%&#39;</span></span>
<span class="line"><span class="token operator">OR</span> u1<span class="token punctuation">.</span>username <span class="token operator">LIKE</span> <span class="token string">&#39;%스프링%&#39;</span></span>
<span class="line"><span class="token operator">OR</span> a<span class="token punctuation">.</span>content <span class="token operator">LIKE</span> <span class="token string">&#39;%스프링%&#39;</span></span>
<span class="line"><span class="token operator">OR</span> u2<span class="token punctuation">.</span>username <span class="token operator">LIKE</span> <span class="token string">&#39;%스프링%&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>쿼리에 익숙하지 않다면 위 쿼리를 이해하기 힘들수도 있다. 잠시 위의 쿼리에 대해서 알아보자.</p><p>위 쿼리는 &quot;스프링&quot; 이라는 문자열이 포함된 데이터를 <code>question</code>, <code>answer</code>, <code>site_user</code> 테이블을 대상으로 검색하는 쿼리이다. 그리고 <code>question</code> 테이블을 기준으로 <code>answer</code>, <code>site_user</code> 테이블을 아우터 조인하여 &quot;스프링&quot; 이라는 문자열을 검색한다. 아우터(<code>OUTER</code>) 조인 대신 이너(<code>INNER</code>) 조인을 사용하면 합집합이 아닌 교집합으로 검색되어 결과가 누락될 수 있어 주의해야 한다. 그리고 총 3개의 테이블을 대상으로 아우터 조인하여 검색하면 중복된 결과가 나올수 있기 때문에 <code>SELECT</code> 문에 <code>DISTINCT</code>를 주어 중복을 제거했다.</p><p>JPA를 사용하면 위의 쿼리를 자바코드로 만들수 있다. 다음을 따라해 보자.</p><h3 id="specification" tabindex="-1"><a class="header-anchor" href="#specification"><span>Specification</span></a></h3><p>위의 쿼리에서 본 것과 같이 여러 테이블에서 데이터를 검색해야 할 경우에는 JPA가 제공하는 Specification 인터페이스를 사용하는 것이 편리하다. Specification을 어떻게 사용할 수 있는지 예제를 통해서 알아보자.</p><div class="hint-container info"><p class="hint-container-title">Specification</p><p>Specification은 보다 정교한 쿼리의 작성을 도와주는 JPA의 도구이다. 보다 자세한 내용은 다음의 문서를 참고해 보자.</p><p>https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#specifications</p></div><p>다음과 같이 <code>QuestionService</code>에 <code>search</code> 메서드를 추가해 보자.</p>`,14),E=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),x=n("code",null,"QuestionService.java",-1),R=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>answer<span class="token punctuation">.</span></span><span class="token class-name">Answer</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span></span><span class="token class-name">CriteriaBuilder</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span></span><span class="token class-name">CriteriaQuery</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span></span><span class="token class-name">Join</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span></span><span class="token class-name">JoinType</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span></span><span class="token class-name">Predicate</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span>criteria<span class="token punctuation">.</span></span><span class="token class-name">Root</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Specification</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">QuestionRepository</span> questionRepository<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token class-name">Specification</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token class-name">String</span> kw<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Specification</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span></span>
<span class="line highlighted">            <span class="token annotation punctuation">@Override</span></span>
<span class="line highlighted">            <span class="token keyword">public</span> <span class="token class-name">Predicate</span> <span class="token function">toPredicate</span><span class="token punctuation">(</span><span class="token class-name">Root</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> q<span class="token punctuation">,</span> <span class="token class-name">CriteriaQuery</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> query<span class="token punctuation">,</span> <span class="token class-name">CriteriaBuilder</span> cb<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">                query<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 중복을 제거 </span></span>
<span class="line highlighted">                <span class="token class-name">Join</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">,</span> <span class="token class-name">SiteUser</span><span class="token punctuation">&gt;</span></span> u1 <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;author&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JoinType</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">                <span class="token class-name">Join</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">,</span> <span class="token class-name">Answer</span><span class="token punctuation">&gt;</span></span> a <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;answerList&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JoinType</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">                <span class="token class-name">Join</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Answer</span><span class="token punctuation">,</span> <span class="token class-name">SiteUser</span><span class="token punctuation">&gt;</span></span> u2 <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;author&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JoinType</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">                <span class="token keyword">return</span> cb<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;subject&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> kw <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 제목 </span></span>
<span class="line highlighted">                        cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>q<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> kw <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment">// 내용 </span></span>
<span class="line highlighted">                        cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>u1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> kw <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 질문 작성자 </span></span>
<span class="line highlighted">                        cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> kw <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment">// 답변 내용 </span></span>
<span class="line highlighted">                        cb<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>u2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> kw <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 답변 작성자 </span></span>
<span class="line highlighted">            <span class="token punctuation">}</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>추가한 <code>search</code> 메서드는 검색어(<code>kw</code>)를 입력받아 쿼리의 조인문과 <code>WHERE</code>문을 생성하여 리턴하는 메서드이다. 코드를 자세히 보면 위에서 알아본 쿼리를 자바 코드로 그대로 재현한 것임을 알수 있다.</p><p>위 코드에서 사용한 변수들에 대해서 자세히 살펴보자.</p><ul><li><code>q</code>: Root, 즉 기준을 의미하는 Question 엔티티의 객체 (질문 제목과 내용을 검색하기 위해 필요)</li><li><code>u1</code>: Question 엔티티와 <code>SiteUser</code> 엔티티를 아우터 조인(<code>JoinType.LEFT</code>)하여 만든 <code>SiteUser</code> 엔티티의 객체. <code>Question</code> 엔티티와 <code>SiteUser</code> 엔티티는 author 속성으로 연결되어 있기 때문에 <code>q.join(&quot;author&quot;)</code>와 같이 조인해야 한다. (질문 작성자를 검색하기 위해 필요)</li><li><code>a</code> - Question 엔티티와 Answer 엔티티를 아우터 조인하여 만든 Answer 엔티티의 객체. Question 엔티티와 Answer 엔티티는 <code>answerList</code> 속성으로 연결되어 있기 때문에 <code>q.join(&quot;answerList&quot;)</code>와 같이 조인해야 한다. (답변 내용을 검색하기 위해 필요)</li><li><code>u2</code> - 바로 위에서 작성한 <code>a</code> 객체와 다시 한번 <code>SiteUser</code> 엔티티와 아우터 조인하여 만든 <code>SiteUser</code> 엔티티의 객체 (답변 작성자를 검색하기 위해서 필요) 그리고 검색어(<code>kw</code>)가 포함되어 있는지를 like로 검색하기 위해 제목, 내용, 질문 작성자, 답변 내용, 답변 작성자 각각에 <code>cb.like를</code> 사용하고 최종적으로 <code>cb.or</code>로 <code>OR</code> 검색되게 하였다. 위에서 예시로 든 쿼리와 비교해 보면 코드가 어떻게 구성되었는지 쉽게 이해될 것이다.</li></ul>`,4),T={id:"questionrepository",tabindex:"-1"},L={class:"header-anchor",href:"#questionrepository"},P=n("code",null,"QuestionRepository",-1),B=n("code",null,"Specification",-1),N=n("code",null,"QuestionRepository",-1),I=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),A=n("code",null,"QuestionRepository.java",-1),O=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>question</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Page</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Pageable</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Specification</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Question</span> <span class="token function">findBySubject</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Question</span> <span class="token function">findBySubjectAndContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">findBySubjectLike</span><span class="token punctuation">(</span><span class="token class-name">String</span> subject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token class-name">Specification</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> spec<span class="token punctuation">,</span> <span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Specification과 <code>Pageable</code> 객체를 입력으로 <code>Question</code> 엔티티를 조회하는 <code>findAll</code> 메서드를 선언했다.</p>`,2),C={id:"questionservice",tabindex:"-1"},J={class:"header-anchor",href:"#questionservice"},F=n("code",null,"QuestionService",-1),$=n("code",null,"QuestionService",-1),U=n("code",null,"getList",-1),K=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),V=n("code",null,"QuestionService.java",-1),D=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token keyword">int</span> page<span class="token punctuation">,</span> <span class="token class-name">String</span> kw<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">&gt;</span></span> sorts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        sorts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token string">&quot;createDate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Pageable</span> pageable <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">Sort</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span>sorts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token class-name">Specification</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> spec <span class="token operator">=</span> <span class="token function">search</span><span class="token punctuation">(</span>kw<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>spec<span class="token punctuation">,</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>검색어를 의미하는 매개변수 <code>kw</code>를 <code>getList</code>에 추가하고 <code>kw</code> 값으로 <code>Specification</code> 객체를 생성하여 <code>findAll</code> 메서드 호출시 전달하였다.</p>`,2),G={id:"questioncontroller",tabindex:"-1"},M={class:"header-anchor",href:"#questioncontroller"},W=n("code",null,"QuestionController",-1),z=n("p",null,[a("그리고 "),n("code",null,"QuestionService"),a("의 "),n("code",null,"getList"),a(" 메서드의 입력항목이 변경되었으므로 "),n("code",null,"QuestionController"),a("도 다음과 같이 수정해야 한다.")],-1),Z=n("code",null,"/sbb/src/main/java/com/mysite/sbb/question/",-1),H=n("code",null,"QuestionController.java",-1),X=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> page<span class="token punctuation">,</span></span>
<span class="line highlighted">            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;kw&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> kw<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> paging <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> kw<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;paging&quot;</span><span class="token punctuation">,</span> paging<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;kw&quot;</span><span class="token punctuation">,</span> kw<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;question_list&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>검색어에 해당하는 <code>kw</code> 파라미터를 추가했고 디폴트값으로 빈 문자열을 설정했다. 그리고 화면에서 입력한 검색어를 화면에 유지하기 위해 <code>model.addAttribute(&quot;kw&quot;, kw)</code>로 <code>kw</code> 값을 저장했다. 이제 화면에서 <code>kw</code> 값이 파라미터로 들어오면 해당 값으로 질문 목록이 검색되어 조회될 것이다.</p><hr><h2 id="검색-화면" tabindex="-1"><a class="header-anchor" href="#검색-화면"><span>검색 화면</span></a></h2><p>이제 화면에 검색기능을 추가해 보자.</p><h3 id="검색-창" tabindex="-1"><a class="header-anchor" href="#검색-창"><span>검색 창</span></a></h3><p>검색어를 입력할 수 있는 텍스트창을 다음과 같이 질문 목록 템플릿에 추가하자.</p>`,7),Y=n("code",null,"/sbb/src/main/resources/templates/",-1),nn=n("code",null,"question_list.html",-1),sn=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/create}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>질문 등록하기<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input-group<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search_kw<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${kw}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-outline-secondary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn_search<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>찾기<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- 페이징처리 시작 --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- 페이징처리 끝 --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- &lt;a th:href=&quot;@{/question/create}&quot; class=&quot;btn btn-primary&quot;&gt;질문 등록하기&lt;/a&gt; --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),an=n("code",null,"<table>",-1),tn=n("code",null,'["질문 등록하기"]',-1),pn=n("code",null,"id",-1),en=n("code",null,'"search_kw"',-1),on=o('<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line highlighted"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search_kw<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${kw}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="검색-폼" tabindex="-1"><a class="header-anchor" href="#검색-폼"><span>검색 폼</span></a></h3><p>그리고 <code>page</code>와 <code>kw</code>를 동시에 GET으로 요청할 수 있는 <code>searchForm</code>을 다음과 같이 추가하자.</p>',3),cn=n("code",null,"/sbb/src/main/resources/templates/",-1),ln=n("code",null,"question_list.html",-1),un=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- 페이징처리 끝 --&gt;</span></span>
<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/list}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>get<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>searchForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kw<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kw<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${kw}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${paging.number}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>GET 방식으로 요청해야 하므로 method 속성에 &quot;get&quot;을 설정했다. <code>kw</code>와 <code>page</code>는 이전에 요청했던 값을 기억하고 있어야 하므로 <code>value</code>에 값을 유지할수 있도록 했다.</p><blockquote><p>이전에 요청했던 <code>kw</code>와 <code>page</code>의 값은 컨트롤러로부터 다시 전달 받는다.</p></blockquote><p>그리고 action 속성은 &quot;폼이 전송되는 URL&quot;이므로 질문 목록 URL인 <code>/question/list</code>를 지정했다.</p><div class="hint-container info"><p class="hint-container-title">GET 방식을 사용하는 이유</p><p><code>page</code>, <code>kw</code>를 GET이 아닌 POST 방식으로 전달하는 방법은 추천하고 싶지 않다. 만약 GET이 아닌 POST 방식으로 검색과 페이징을 처리한다면 웹 브라우저에서 &quot;새로고침&quot; 또는 &quot;뒤로가기&quot;를 했을 때 &quot;만료된 페이지입니다.&quot;라는 오류를 종종 만나게 될 것이다. 왜냐하면 POST 방식은 동일한 POST 요청이 발생할 경우 중복 요청을 방지하기 위해 &quot;만료된 페이지입니다.&quot; 라는 오류를 발생시키기 때문이다. 2페이지에서 3페이지로 갔다가 뒤로가기를 했을 때 2페이지로 가는것이 아니라 오류가 발생한다면 엉망이 될 것이다.</p><p>이러한 이유로 여러 파라미터를 조합하여 게시물 목록을 조회할 때는 GET 방식을 사용하는 것이 좋다.</p></div><h3 id="페이징" tabindex="-1"><a class="header-anchor" href="#페이징"><span>페이징</span></a></h3><p>그리고 기존 페이징을 처리하는 부분도 <code>?page=1</code> 처럼 직접 URL을 링크하는 방식에서 값을 읽어 폼에 설정할 수 있도록 다음처럼 변경해야 한다. 왜냐하면 검색어가 있을 경우 검색어와 페이지 번호를 함께 전송해야 하기 때문이다.</p>`,7),kn=n("code",null,"/sbb/src/main/resources/templates/",-1),rn=n("code",null,"question_list.html",-1),dn=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- 페이징처리 시작 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.isEmpty()}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination justify-content-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.hasPrevious} ? &#39;disabled&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${paging.number-1}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>이전<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page: \${#numbers.sequence(0, paging.totalPages-1)}<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page &gt;= paging.number-5 and page &lt;= paging.number+5}<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page == paging.number} ? &#39;active&#39;<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${page}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>classappend</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${!paging.hasNext} ? &#39;disabled&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${paging.number+1}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>다음<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 페이징처리 끝 --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>모든 페이지 링크를 <code>href</code> 속성에 직접 입력하는 대신 <code>data-page</code> 속성으로 값을 읽을 수 있도록 변경했다.</p><p>즉, 다음과 같은 링크를</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line highlighted"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{|?page=\${paging.number-1}|}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>이전<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>다음처럼 수정했다.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line highlighted"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${paging.number-1}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>이전<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="검색-스크립트" tabindex="-1"><a class="header-anchor" href="#검색-스크립트"><span>검색 스크립트</span></a></h3><p>그리고 <code>page</code>, <code>kw</code> 파라미터를 동시에 요청할 수 있는 자바스크립트를 다음과 같이 추가하자.</p>`,8),mn=n("code",null,"/sbb/src/main/resources/templates/",-1),gn=n("code",null,"question_list.html",-1),vn=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">    <span class="token comment">&lt;!-- 페이징처리 끝 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/question/list}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>get<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>searchForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kw<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>kw<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${kw}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${paging.number}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>script<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>text/javascript<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line highlighted"><span class="token keyword">const</span> page_elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;page-link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>page_elements<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>page<span class="token punctuation">;</span></span>
<span class="line highlighted">        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;searchForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">const</span> btn_search <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn_search&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">btn_search<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;kw&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;search_kw&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line highlighted">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// 검색버튼을 클릭할 경우 0페이지부터 조회한다.</span></span>
<span class="line highlighted">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;searchForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위에 추가한 자바스크립트 코드를 자세히 살펴보자. 만약 다음과 같이 <code>class</code> 속성값으로 <code>&quot;page-link&quot;</code>라는 값을 가지고 있는 링크를 클릭하면</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line highlighted"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>data-page</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${paging.number-1}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>이전<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이 링크의 <code>data-page</code> 속성값을 읽어 <code>searchForm</code>의 <code>page</code> 필드에 설정하여 <code>searchForm</code>을 요청하도록 다음과 같은 스크립트를 추가했다.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> page_elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;page-link&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>page_elements<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>page<span class="token punctuation">;</span></span>
<span class="line">        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;searchForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 검색버튼을 클릭하면 검색어 텍스트창에 입력된 값을 <code>searchForm</code>의 <code>kw</code> 필드에 설정하여 <code>searchForm</code>을 요청하도록 다음과 같은 스크립트를 추가했다.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> btn_search <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn_search&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">btn_search<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;kw&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;search_kw&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// 검색버튼을 클릭할 경우 0페이지부터 조회한다.</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;searchForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 검색버튼을 클릭하는 경우는 새로운 검색에 해당되므로 <code>page</code>에 항상 0을 설정하여 첫 페이지로 요청하도록 했다.</p><h3 id="검색-확인" tabindex="-1"><a class="header-anchor" href="#검색-확인"><span>검색 확인</span></a></h3><figure><img src="https://wikidocs.net/images/page/162814/C_3-14_1.png" alt="이제 검색창에 &quot;스프링&quot;이라는 검색어로 조회하면 다음과 같이 해당 문장이 있는 게시물만 조회될 것이다." tabindex="0" loading="lazy"><figcaption>이제 검색창에 &quot;스프링&quot;이라는 검색어로 조회하면 다음과 같이 해당 문장이 있는 게시물만 조회될 것이다.</figcaption></figure><hr><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query"><span><code>@Query</code></span></a></h2>`,12),hn=n("code",null,"Specification",-1),bn=n("code",null,"QuestionRepository",-1),qn=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">Query</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">Param</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">&quot;select &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;distinct q &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;from Question q &quot;</span> </span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;left outer join SiteUser u1 on q.author=u1 &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;left outer join Answer a on a.question=q &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;left outer join SiteUser u2 on a.author=u2 &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;where &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;   q.subject like %:kw% &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;   or q.content like %:kw% &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;   or u1.username like %:kw% &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;   or a.content like %:kw% &quot;</span></span>
<span class="line highlighted">            <span class="token operator">+</span> <span class="token string">&quot;   or u2.username like %:kw% &quot;</span><span class="token punctuation">)</span></span>
<span class="line highlighted">    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllByKeyword</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;kw&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> kw<span class="token punctuation">,</span> <span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>@Query</code> 애너테이션이 적용된 <code>findAllByKeyword</code> 메서드를 추가했다. 위에서 알아본 쿼리를 <code>@Query</code>에 구현한 것이다. 그리고 <code>@Query</code>를 작성할 때에는 반드시 테이블 기준이 아닌 엔티티 기준으로 작성해야 한다. 즉, <code>site_user</code>와 같은 테이블명 대신 <code>SiteUser</code>처럼 엔티티명을 사용해야 하고 조인문에서 보듯이 <code>q.author_id=u1.id</code>와 같은 컬럼명 대신 <code>q.author=u1</code>처럼 엔티티의 속성명을 사용해야 한다.</p><p>그리고 <code>@Query</code>에 파라미터로 전달할 <code>kw</code> 문자열은 메서드의 매개변수에 <code>@Param(&quot;kw&quot;)</code>처럼 <code>@Param</code> 애너테이션을 사용해야 한다. 검색어를 의미하는 <code>kw</code> 문자열은 <code>@Query</code> 안에서 <code>:kw</code>로 참조된다.</p>`,3),fn=n("code",null,"findAllByKeyword",-1),yn=n("code",null,"QuestionService",-1),_n=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuestionService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Question</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token keyword">int</span> page<span class="token punctuation">,</span> <span class="token class-name">String</span> kw<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">&gt;</span></span> sorts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        sorts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token string">&quot;createDate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Pageable</span> pageable <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">Sort</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span>sorts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionRepository<span class="token punctuation">.</span><span class="token function">findAllByKeyword</span><span class="token punctuation">(</span>kw<span class="token punctuation">,</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),wn=n("code",null,"Specification",-1),jn=n("hr",null,null,-1);function Sn(l,Qn){const p=c("router-link"),t=c("FontIcon"),i=c("VPCard"),u=c("VidStack");return v(),r("div",null,[n("h1",b,[n("a",q,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),n("nav",f,[n("ul",null,[n("li",null,[s(p,{to:"#검색-기능"},{default:e(()=>[a("검색 기능")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#specification"},{default:e(()=>[a("Specification")]),_:1})]),n("li",null,[s(p,{to:"#questionrepository"},{default:e(()=>[s(t,{icon:"fa-brands fa-java"}),a("QuestionRepository")]),_:1})]),n("li",null,[s(p,{to:"#questionservice"},{default:e(()=>[s(t,{icon:"fa-brands fa-java"}),a("QuestionService")]),_:1})])])]),n("li",null,[s(p,{to:"#questioncontroller"},{default:e(()=>[s(t,{icon:"fa-brands fa-java"}),a("QuestionController")]),_:1})]),n("li",null,[s(p,{to:"#검색-화면"},{default:e(()=>[a("검색 화면")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#검색-창"},{default:e(()=>[a("검색 창")]),_:1})]),n("li",null,[s(p,{to:"#검색-폼"},{default:e(()=>[a("검색 폼")]),_:1})]),n("li",null,[s(p,{to:"#페이징"},{default:e(()=>[a("페이징")]),_:1})]),n("li",null,[s(p,{to:"#검색-스크립트"},{default:e(()=>[a("검색 스크립트")]),_:1})]),n("li",null,[s(p,{to:"#검색-확인"},{default:e(()=>[a("검색 확인")]),_:1})])])]),n("li",null,[s(p,{to:"#query"},{default:e(()=>[a("@Query")]),_:1})])])]),y,s(i,m(g({title:"3-14. 검색",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162814",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),_,n("blockquote",null,[n("p",null,[n("a",w,[s(t,{icon:"iconfont icon-github"}),a(),j,a(" - "),s(t,{icon:"fas fa-folder-open"}),a(),S])])]),s(u,{src:"youtube/-O0yhg0T_lUQ"}),Q,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),E,s(t,{icon:"fa-brands fa-java"}),x])]),R,n("h3",T,[n("a",L,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),P])])]),n("p",null,[a("그리고 위에서 작성한 "),s(t,{icon:"fa-brands fa-java"}),B,a("을 사용하기 위해서 "),s(t,{icon:"fa-brands fa-java"}),N,a("를 다음과 같이 수정하자.")]),n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),I,s(t,{icon:"fa-brands fa-java"}),A])]),O,n("h3",C,[n("a",J,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),F])])]),n("p",null,[a("그리고 "),s(t,{icon:"fa-brands fa-java"}),$,a("의 "),U,a(" 메서드를 다음과 같이 수정하자.")]),n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),K,s(t,{icon:"fa-brands fa-java"}),V])]),D,n("h2",G,[n("a",M,[n("span",null,[s(t,{icon:"fa-brands fa-java"}),W])])]),z,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),Z,s(t,{icon:"fa-brands fa-java"}),H])]),X,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),Y,s(t,{icon:"fa-brands fa-html5"}),nn])]),sn,n("p",null,[an,a(" 태그 상단 우측에 검색어를 입력할 수 있는 텍스트창을 생성하였다. 맨 밑에 있던 "),s(t,{icon:"iconfont icon-select"}),tn,a(" 버튼은 검색 창의 좌측으로 이동했다. 그리고 자바 스크립트에서 이 텍스트창에 입력된 값을 읽기 위해 다음처럼 텍스트창 "),pn,a(" 속성에 "),en,a("라는 값을 추가한 점에 주목하자.")]),on,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),cn,s(t,{icon:"fa-brands fa-html5"}),ln])]),un,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),kn,s(t,{icon:"fa-brands fa-html5"}),rn])]),dn,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),mn,s(t,{icon:"fa-brands fa-html5"}),gn])]),vn,n("p",null,[a("쿼리에 익숙하다면 복잡한 쿼리는 자바코드로 생성하기 보다는 직접 쿼리를 작성하는게 훨씬 편하게 여겨질 것이다. 이번에는 "),s(t,{icon:"fa-brands fa-java"}),hn,a(" 대신 직접 쿼리를 작성하여 수행하는 방법에 대해서 알아보자.")]),n("p",null,[a("."),s(t,{icon:"fa-brands fa-java"}),bn,a("에 다음과 같은 메서드를 추가해 보자.")]),qn,n("p",null,[a("작성한 "),fn,a(" 메서드를 사용하기 위해 "),s(t,{icon:"fa-brands fa-java"}),yn,a("를 다음과 같이 수정하자.")]),_n,n("p",null,[a("."),s(t,{icon:"fa-brands fa-java"}),wn,a("을 사용할때와 동일하게 동작할 것이다.")]),jn])}const Rn=k(h,[["render",Sn],["__file","03N.html.vue"]]),Tn=JSON.parse('{"path":"/java/jump-to-spring-boot/03N.html","title":"03N. 검색","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"03N. 검색","description":"Jump to Spring Boot > 03N. 검색","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 03N. 검색"},{"property":"og:description","content":"03N. 검색"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/03N.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/03N.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"03N. 검색"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 03N. 검색"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162814/C_3-14_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03N. 검색\\",\\"image\\":[\\"https://wikidocs.net/images/page/162814/C_3-14_1.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"검색 기능","slug":"검색-기능","link":"#검색-기능","children":[{"level":3,"title":"Specification","slug":"specification","link":"#specification","children":[]},{"level":3,"title":"QuestionRepository","slug":"questionrepository","link":"#questionrepository","children":[]},{"level":3,"title":"QuestionService","slug":"questionservice","link":"#questionservice","children":[]}]},{"level":2,"title":"QuestionController","slug":"questioncontroller","link":"#questioncontroller","children":[]},{"level":2,"title":"검색 화면","slug":"검색-화면","link":"#검색-화면","children":[{"level":3,"title":"검색 창","slug":"검색-창","link":"#검색-창","children":[]},{"level":3,"title":"검색 폼","slug":"검색-폼","link":"#검색-폼","children":[]},{"level":3,"title":"페이징","slug":"페이징","link":"#페이징","children":[]},{"level":3,"title":"검색 스크립트","slug":"검색-스크립트","link":"#검색-스크립트","children":[]},{"level":3,"title":"검색 확인","slug":"검색-확인","link":"#검색-확인","children":[]}]},{"level":2,"title":"@Query","slug":"query","link":"#query","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":4.73,"words":1418},"filePathRelative":"java/jump-to-spring-boot/03N.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{Rn as comp,Tn as data};
