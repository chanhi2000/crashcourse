import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as s,t as u,b as a,w as i,n as h,g as b,d as n,e as t,r as l,o as m}from"./app-U_bew1in.js";const g={},v={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},_={class:"table-of-contents"},f=s("hr",null,null,-1),B=t(`<hr><p>이전 장에서 다음의 명령을 실행하여 SBB 배포파일을 실행하여 서비스를 실행했다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">java</span> <span class="token parameter variable">-jar</span> sbb-0.0.1-SNAPSHOT.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>하지만 위와 같이 단순하게 실행하면 서버에 접속한 터미널을 종료하면 서비스도 중단된다. 따라서 이를 방지하기 위해서는 백그라운드로 서비스를 실행해야 한다.</p><p>이번 장에서는 백그라운드로 서비스를 시작하는 스크립트(shell script)와 서비스를 중지하는 스크립트를 만들어 보자.</p><hr><h2 id="sbb-시작-스크립트" tabindex="-1"><a class="header-anchor" href="#sbb-시작-스크립트"><span>SBB 시작 스크립트</span></a></h2><p>SBB 서비스를 실행하는 시작 스크립트를 다음과 같이 작성하자. 이때 서버에서는 STS와 같은 편집기를 사용할 수 없으므로 여기서는 <code>nano</code> 편집기를 사용하자.</p><p>터미널에서 sbb 디렉터리로 이동한 다음 <code>nano start.sh</code> 명령을 수행하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> sbb</span>
<span class="line"><span class="token function">nano</span> start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://wikidocs.net/images/page/162981/O_4-06_1.png" alt="그러면 다음과 같은 화면이 나타난다. 이 화면이 nano 편집기 화면이다." tabindex="0" loading="lazy"><figcaption>그러면 다음과 같은 화면이 나타난다. 이 화면이 nano 편집기 화면이다.</figcaption></figure><p>아쉽게도 nano 편집기에서는 마우스를 사용할 수 없다. 하지만 화살표 키로 커서를 움직이며 편집할 수 있으므로 그다지 어렵지 않다. 편집기 아래에는 여러 단축키 기능이 표시되어 있다.</p><blockquote><p><code>^</code>는 <kbd>Ctrl</kbd>을 의미한다. <code>^X</code>는 <kbd>Ctrl</kbd>과 <kbd>X</kbd>를 동시에 누르라는 뜻이다.</p></blockquote>`,13),y=s("kbd",null,"Ctrl",-1),S=s("kbd",null,"O",-1),j=s("code",null,"start.sh",-1),x=s("kbd",null,"Ctrl",-1),w=s("kbd",null,"X",-1),q=s("code",null,"/home/ubuntu/sbb/",-1),O=s("code",null,"start.sh",-1),P=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">JAR</span><span class="token operator">=</span>sbb-0.0.1-SNAPSHOT.jar</span>
<span class="line"><span class="token assign-left variable">LOG</span><span class="token operator">=</span>/home/ubuntu/sbb/sbb.log</span>
<span class="line"></span>
<span class="line"><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> <span class="token variable">$JAR</span> <span class="token operator">&gt;</span> <span class="token variable">$LOG</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>JAR</code> 변수는 배포파일명이고 <code>LOG</code> 변수는 로그를 출력할 파일명이다.</p><blockquote><p>로그 파일에는 STS에서 로컬 서버 실행시 콘솔창에 표시되던 것과 동일한 로그들이 출력된다.</p></blockquote>`,3),T=s("code",null,"> $LOG",-1),C=s("code",null,"2>&1",-1),F=s("code",null,"sbb.log",-1),J=s("code",null,"&",-1),R=t(`<blockquote><p>서버 로그를 잘 관리하기 위한 logback을 사용하는 방법은 조금 나중에 알아본다.</p></blockquote><p>그리고 다음과 같이 스크립트명만 입력하더라도 실행이 될 수 있게 실행권한을 부여하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">chmod</span> +x start.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>그리고 다음과 같이 서버를 실행하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./start.sh</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>./start.sh</code>에서 <code>./</code>의 의미는 현재 디렉터리를 의미한다.</p></blockquote><hr><h2 id="sbb-중지-스크립트" tabindex="-1"><a class="header-anchor" href="#sbb-중지-스크립트"><span>SBB 중지 스크립트</span></a></h2>`,8),$=s("code",null,"stop.sh",-1),A=s("code",null,"/home/ubuntu/sbb/",-1),D=s("code",null,"stop.sh",-1),N=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">SBB_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">java</span> <span class="token operator">|</span> <span class="token function">grep</span> sbb <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$SBB_PID</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;SBB is not running&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$SBB_PID</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;SBB stopped.&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SBB_PID</code>는 현재 실행중인 SBB 서비스의 프로세스 아이디이다. 만약 SBB 서비스의 프로세스가 없다면 &quot;SBB is not running&quot; 이라는 메시지를 출력하고 프로세스가 있다면 <code>kill -9</code>로 해당 프로세스를 강제로 종료한다.</p><p>그리고 다음과 같이 스크립트명만 입력하더라도 실행이 될 수 있게 실행권한을 부여하자.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">chmod</span> +x stop.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>서비스를 중지하려면 다음과 같이 실행한다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./stop.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="sbb-재시작" tabindex="-1"><a class="header-anchor" href="#sbb-재시작"><span>SBB 재시작</span></a></h2>`,8),I=s("code",null,"jar",-1),V=s("code",null,"stop.sh",-1),z=s("code",null,"start.sh",-1),G=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./stop.sh <span class="token comment"># 중지</span></span>
<span class="line">./start.sh <span class="token comment"># 시작</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1);function L(c,K){const o=l("router-link"),p=l("VPCard"),e=l("FontIcon");return m(),d("div",null,[s("h1",v,[s("a",k,[s("span",null,u(c.$frontmatter.title)+" 관련",1)])]),s("nav",_,[s("ul",null,[s("li",null,[a(o,{to:"#sbb-시작-스크립트"},{default:i(()=>[n("SBB 시작 스크립트")]),_:1})]),s("li",null,[a(o,{to:"#sbb-중지-스크립트"},{default:i(()=>[n("SBB 중지 스크립트")]),_:1})]),s("li",null,[a(o,{to:"#sbb-재시작"},{default:i(()=>[n("SBB 재시작")]),_:1})])])]),f,a(p,h(b({title:"4-06. 서버 스크립트",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162981",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),B,s("p",null,[n("nano 편집기에서 다음 내용을 입력하고 "),y,n("+"),S,n("를 눌러서 "),a(e,{icon:"iconfont icon-shell"}),j,n(" 파일을 저장한 뒤 "),x,n("+"),w,n("를 눌러서 편집기를 종료하자.")]),s("blockquote",null,[s("p",null,[n("파일명: "),a(e,{icon:"fas fa-folder-open"}),q,a(e,{icon:"iconfont icon-shell"}),O])]),P,s("p",null,[n("위 명령어에서 nohup는 프로세스를 실행한 터미널의 연결이 끊어지더라도 프로세스가 지속적으로 동작 할 수 있게 해주는 명령어이고 "),T,n("는 프로세스의 출력을 로그파일에 저장하라는 의미이다. "),C,n("은 오류(stderr) 출력을 일반(stdout) 출력으로 전달하라는 의미이다. 따라서 일반 로그와 오류 로그가 모두 "),a(e,{icon:"fas fa-file-lines"}),F,n(" 파일에 저장될 것이다. 그리고 마지막의 "),J,n(" 문자는 백그라운드로 명령을 실행하라는 의미이다.")]),R,s("p",null,[n("실행중인 SBB 서비스를 중지하기 위한 "),a(e,{icon:"iconfont icon-shell"}),$,n(" 스크립트는 다음과 같이 작성하자.")]),s("blockquote",null,[s("p",null,[n("파일명: "),a(e,{icon:"fas fa-folder-open"}),A,a(e,{icon:"iconfont icon-shell"}),D])]),N,s("p",null,[n("만약 SBB 프로그램이 변경되었다면 "),a(e,{icon:"iconfont icon-java"}),I,n(" 파일을 변경한 후에 "),a(e,{icon:"iconfont icon-shell"}),V,n("과 "),a(e,{icon:"iconfont icon-shell"}),z,n("을 순서대로 실행하면 된다.")]),G])}const H=r(g,[["render",L],["__file","04F.html.vue"]]),W=JSON.parse('{"path":"/java/jump-to-spring-boot/04F.html","title":"4-06. 서버 스크립트","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"4-06. 서버 스크립트","description":"Jump to Spring Boot > 4-06. 서버 스크립트","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 4-06. 서버 스크립트"},{"property":"og:description","content":"4-06. 서버 스크립트"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/04F.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/04F.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"4-06. 서버 스크립트"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 4-06. 서버 스크립트"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162981/O_4-06_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-04-24T07:16:44.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-04-24T07:16:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4-06. 서버 스크립트\\",\\"image\\":[\\"https://wikidocs.net/images/page/162981/O_4-06_1.png\\"],\\"dateModified\\":\\"2024-04-24T07:16:44.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"SBB 시작 스크립트","slug":"sbb-시작-스크립트","link":"#sbb-시작-스크립트","children":[]},{"level":2,"title":"SBB 중지 스크립트","slug":"sbb-중지-스크립트","link":"#sbb-중지-스크립트","children":[]},{"level":2,"title":"SBB 재시작","slug":"sbb-재시작","link":"#sbb-재시작","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1713943004000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":7}]},"readingTime":{"minutes":1.05,"words":314},"filePathRelative":"java/jump-to-spring-boot/04F.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{H as comp,W as data};
