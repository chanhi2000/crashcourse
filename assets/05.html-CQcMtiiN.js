import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as n,t as u,b as s,n as v,g as b,w as t,d as a,e as i,r as l,o as k}from"./app-U_bew1in.js";const h={},q={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},f={class:"table-of-contents"},y=n("hr",null,null,-1),x=i(`<p>지금까지 기본적인 명령 사용 방법과 이미지 생성 방법을 알아보았습니다. 이 장에서는 이미지와 컨테이너의 정보를 조회하는 방법, 컨테이너에서 파일을 꺼내는 방법, 변경된 파일을 확인하는 방법, 변경 사항을 이미지로 저장하는 방법을 알아보겠습니다.</p><hr><h2 id="history-명령으로-이미지-히스토리-살펴보기" tabindex="-1"><a class="header-anchor" href="#history-명령으로-이미지-히스토리-살펴보기"><span><code>history</code> 명령으로 이미지 히스토리 살펴보기</span></a></h2><p>앞에서 생성한 <code>hello:0.1</code> 이미지의 히스토리를 조회해보겠습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token function">history</span> hello:0.1</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># IMAGE          CREATED         CREATED BY                                      SIZE      COMMENT</span></span>
<span class="line"><span class="token comment"># 8307ff628ec8   5 minutes ago   /bin/sh -c #(nop)  EXPOSE 443                   0B</span></span>
<span class="line"><span class="token comment"># adbb8a7ef64d   5 minutes ago   /bin/sh -c #(nop)  EXPOSE 80                    0B</span></span>
<span class="line"><span class="token comment"># a405f9d28415   5 minutes ago   /bin/sh -c #(nop)  CMD [&quot;nginx&quot;]                0B</span></span>
<span class="line"><span class="token comment"># a9726f7e681e   5 minutes ago   /bin/sh -c #(nop) WORKDIR /etc/nginx            0B</span></span>
<span class="line"><span class="token comment"># 78f354dbdbcc   5 minutes ago   /bin/sh -c #(nop)  VOLUME [/data /etc/nginx/…   0B</span></span>
<span class="line"><span class="token comment"># 66f885084c19   5 minutes ago   /bin/sh -c chown -R www-data:www-data /var/l…   0B</span></span>
<span class="line"><span class="token comment"># 5c54eb835f57   5 minutes ago   /bin/sh -c echo &quot;\\ndaemon off;&quot; &gt;&gt; /etc/ngin…   1.46kB</span></span>
<span class="line"><span class="token comment"># 9fc2f61ad2f4   5 minutes ago   /bin/sh -c apt install -y nginx                 55.6MB</span></span>
<span class="line"><span class="token comment"># 9c80ad1c1c34   6 minutes ago   /bin/sh -c apt update                           36.2MB</span></span>
<span class="line"><span class="token comment"># 69b49943b930   6 minutes ago   /bin/sh -c #(nop)  MAINTAINER Foo Bar &lt;foo@b…   0B</span></span>
<span class="line"><span class="token comment"># 2dc39ba059dc   7 days ago      /bin/sh -c #(nop)  CMD [&quot;bash&quot;]                 0B</span></span>
<span class="line"><span class="token comment"># &lt;missing&gt;      7 days ago      /bin/sh -c #(nop) ADD file:a7268f82a86219801…   77.8MB</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>docker history &lt;이미지 이름&gt;:&lt;태그&gt;</code> 형식입니다. 이미지 이름 대신 이미지 ID를 사용해도 됩니다.</p><p>이렇게 Dockefile에 설정한 대로 히스토리가 생성됩니다.</p><hr><h2 id="cp-명령으로-파일-꺼내기" tabindex="-1"><a class="header-anchor" href="#cp-명령으로-파일-꺼내기"><span><code>cp</code> 명령으로 파일 꺼내기</span></a></h2><p><code>hello-nginx</code> 컨테이너에서 파일을 꺼내보겠습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token function">cp</span> hello-nginx:/etc/nginx/nginx.conf ./</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>docker cp &lt;컨테이너 이름&gt;:&lt;경로&gt; &lt;호스트 경로&gt;</code> 형식입니다.</p>`,12),_=n("code",null,"nginx.conf",-1),D=i(`<hr><h2 id="commit-명령으로-컨테이너의-변경사항을-이미지로-생성하기" tabindex="-1"><a class="header-anchor" href="#commit-명령으로-컨테이너의-변경사항을-이미지로-생성하기"><span><code>commit</code> 명령으로 컨테이너의 변경사항을 이미지로 생성하기</span></a></h2><p><code>docker commit</code> 명령은 컨테이너의 변경 사항을 이미지 파일로 생성합니다.</p><p><code>hello-nginx</code> 컨테이너 안의 파일 내용이 바뀌었다고 치고, 컨테이너를 이미지 파일로 생성해보겠습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> commit <span class="token parameter variable">-a</span> <span class="token string">&quot;Foo Bar &lt;foo@bar.com&gt;&quot;</span> <span class="token parameter variable">-m</span> <span class="token string">&quot;add hello.txt&quot;</span> hello-nginx hello:0.2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>docker commit &lt;옵션&gt; &lt;컨테이너 이름&gt; &lt;이미지 이름&gt;:&lt;태그&gt;</code> 형식입니다. 컨테이너 이름 대신 컨테이너 ID를 사용해도 됩니다.</p><p><code>-a &quot;Foo Bar &lt;foo@bar.com&gt;&quot;과 -m &quot;add hello.txt&quot;</code> 옵션으로 커밋한 사용자와 로그 메시지를 설정합니다. <code>hello-nginx</code> 컨테이너를 <code>hello:0.2</code> 이미지로 생성합니다.</p><p>이미지 목록을 출력합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> images</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># REPOSITORY   TAG       IMAGE ID       CREATED          SIZE</span></span>
<span class="line"><span class="token comment"># hello        0.2       011ff3ff87e9   14 seconds ago   170MB</span></span>
<span class="line"><span class="token comment"># hello        0.1       8307ff628ec8   6 minutes ago    170MB</span></span>
<span class="line"><span class="token comment"># ubuntu       22.04     2dc39ba059dc   7 days ago       77.8MB</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>hello:0.2</code> 이미지가 생성되었습니다.</p><hr><h2 id="diff-명령으로-컨테이너에서-변경된-파일-확인하기" tabindex="-1"><a class="header-anchor" href="#diff-명령으로-컨테이너에서-변경된-파일-확인하기"><span><code>diff</code> 명령으로 컨테이너에서 변경된 파일 확인하기</span></a></h2><p><code>docker diff</code> 명령은 컨테이너가 실행되면서 변경된 파일 목록을 출력합니다. 비교 기준은 컨테이너를 생성한 이미지 내용입니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token function">diff</span> hello-nginx</span>
<span class="line"><span class="token comment"># </span></span>
<span class="line"><span class="token comment"># C /etc</span></span>
<span class="line"><span class="token comment"># C /etc/nginx</span></span>
<span class="line"><span class="token comment"># A /etc/nginx/site-enabled</span></span>
<span class="line"><span class="token comment"># A /data</span></span>
<span class="line"><span class="token comment"># C /var</span></span>
<span class="line"><span class="token comment"># C /var/lib</span></span>
<span class="line"><span class="token comment"># C /var/lib/nginx</span></span>
<span class="line"><span class="token comment"># A /var/lib/nginx/body</span></span>
<span class="line"><span class="token comment"># A /var/lib/nginx/fastcgi</span></span>
<span class="line"><span class="token comment"># A /var/lib/nginx/proxy</span></span>
<span class="line"><span class="token comment"># A /var/lib/nginx/scgi</span></span>
<span class="line"><span class="token comment"># A /var/lib/nginx/uwsgi</span></span>
<span class="line"><span class="token comment"># C /run</span></span>
<span class="line"><span class="token comment"># A /run/nginx.pid</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>docker diff &lt;컨테이너 이름&gt;</code> 형식입니다. 컨테이너 이름 대신 컨테이너 ID를 사용해도 됩니다.</p><p><code>A</code>는 추가된 파일, <code>C</code>는 변경된 파일, <code>D</code>는 삭제된 파일입니다.</p><hr><h2 id="inspect-명령으로-세부-정보-확인하기" tabindex="-1"><a class="header-anchor" href="#inspect-명령으로-세부-정보-확인하기"><span><code>inspect</code> 명령으로 세부 정보 확인하기</span></a></h2><p><code>docker inspect</code> 명령은 이미지와 컨테이너의 세부 정보를 출력합니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">docker</span> inspect hello-nginx</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># [</span></span>
<span class="line"><span class="token comment">#     {</span></span>
<span class="line"><span class="token comment">#         &quot;Id&quot;: &quot;9f4bb4c4a3d8698a31507febffba19a655caab5a0ee78452cc2c64ea406af7bd&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;Created&quot;: &quot;2022-09-09T03:11:49.391803068Z&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;Path&quot;: &quot;nginx&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;Args&quot;: [],</span></span>
<span class="line"><span class="token comment">#         &quot;State&quot;: {</span></span>
<span class="line"><span class="token comment">#             &quot;Status&quot;: &quot;running&quot;,</span></span>
<span class="line"><span class="token comment">#             ... 생략 ...</span></span>
<span class="line"><span class="token comment">#         },</span></span>
<span class="line"><span class="token comment">#         &quot;Image&quot;: &quot;sha256:8307ff628ec8900bc7a80eecc54bf6f21b6019ee96d22ca3e4152a06f704756d&quot;,</span></span>
<span class="line"><span class="token comment">#         ... 생략 ...</span></span>
<span class="line"><span class="token comment">#         &quot;Name&quot;: &quot;/hello-nginx&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;RestartCount&quot;: 0,</span></span>
<span class="line"><span class="token comment">#         &quot;Driver&quot;: &quot;overlay2&quot;,</span></span>
<span class="line"><span class="token comment">#         &quot;Platform&quot;: &quot;linux&quot;,</span></span>
<span class="line"><span class="token comment">#         ... 생략 ...</span></span>
<span class="line"><span class="token comment">#         &quot;HostConfig&quot;: {</span></span>
<span class="line"><span class="token comment">#             ... 생략 ...</span></span>
<span class="line"><span class="token comment">#             &quot;NetworkMode&quot;: &quot;default&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;PortBindings&quot;: {</span></span>
<span class="line"><span class="token comment">#                 &quot;80/tcp&quot;: [</span></span>
<span class="line"><span class="token comment">#                     {</span></span>
<span class="line"><span class="token comment">#                         &quot;HostIp&quot;: &quot;&quot;,</span></span>
<span class="line"><span class="token comment">#                         &quot;HostPort&quot;: &quot;80&quot;</span></span>
<span class="line"><span class="token comment">#                     }</span></span>
<span class="line"><span class="token comment">#                 ]</span></span>
<span class="line"><span class="token comment">#             },</span></span>
<span class="line"><span class="token comment">#             ... 생략 ...</span></span>
<span class="line"><span class="token comment">#         },</span></span>
<span class="line"><span class="token comment">#         ... 생략 ...</span></span>
<span class="line"><span class="token comment">#         &quot;Config&quot;: {</span></span>
<span class="line"><span class="token comment">#             &quot;Hostname&quot;: &quot;9f4bb4c4a3d8&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;Domainname&quot;: &quot;&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;User&quot;: &quot;&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;AttachStdin&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;AttachStdout&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;AttachStderr&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;ExposedPorts&quot;: {</span></span>
<span class="line"><span class="token comment">#                 &quot;443/tcp&quot;: {},</span></span>
<span class="line"><span class="token comment">#                 &quot;80/tcp&quot;: {}</span></span>
<span class="line"><span class="token comment">#             },</span></span>
<span class="line"><span class="token comment">#             &quot;Tty&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;OpenStdin&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;StdinOnce&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;Env&quot;: [</span></span>
<span class="line"><span class="token comment">#                 &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span></span>
<span class="line"><span class="token comment">#             ],</span></span>
<span class="line"><span class="token comment">#             &quot;Cmd&quot;: [</span></span>
<span class="line"><span class="token comment">#                 &quot;nginx&quot;</span></span>
<span class="line"><span class="token comment">#             ],</span></span>
<span class="line"><span class="token comment">#             &quot;Image&quot;: &quot;hello:0.1&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;Volumes&quot;: {</span></span>
<span class="line"><span class="token comment">#                 &quot;/data&quot;: {},</span></span>
<span class="line"><span class="token comment">#                 &quot;/etc/nginx/site-enabled&quot;: {},</span></span>
<span class="line"><span class="token comment">#                 &quot;/var/log/nginx&quot;: {}</span></span>
<span class="line"><span class="token comment">#             },</span></span>
<span class="line"><span class="token comment">#             &quot;WorkingDir&quot;: &quot;/etc/nginx&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;Entrypoint&quot;: null,</span></span>
<span class="line"><span class="token comment">#             &quot;OnBuild&quot;: null,</span></span>
<span class="line"><span class="token comment">#             &quot;Labels&quot;: {}</span></span>
<span class="line"><span class="token comment">#         },</span></span>
<span class="line"><span class="token comment">#         &quot;NetworkSettings&quot;: {</span></span>
<span class="line"><span class="token comment">#             &quot;Bridge&quot;: &quot;&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;SandboxID&quot;: &quot;0adee39c61d22d570a50a3e9ba174dc7901ffea732f6aca75e5ea00a330f9fa3&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;HairpinMode&quot;: false,</span></span>
<span class="line"><span class="token comment">#             &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,</span></span>
<span class="line"><span class="token comment">#             &quot;LinkLocalIPv6PrefixLen&quot;: 0,</span></span>
<span class="line"><span class="token comment">#             &quot;Ports&quot;: {</span></span>
<span class="line"><span class="token comment">#                 &quot;443/tcp&quot;: null,</span></span>
<span class="line"><span class="token comment">#                 &quot;80/tcp&quot;: [</span></span>
<span class="line"><span class="token comment">#                     {</span></span>
<span class="line"><span class="token comment">#                         &quot;HostIp&quot;: &quot;0.0.0.0&quot;,</span></span>
<span class="line"><span class="token comment">#                         &quot;HostPort&quot;: &quot;80&quot;</span></span>
<span class="line"><span class="token comment">#                     },</span></span>
<span class="line"><span class="token comment">#                     {</span></span>
<span class="line"><span class="token comment">#                         &quot;HostIp&quot;: &quot;::&quot;,</span></span>
<span class="line"><span class="token comment">#                         &quot;HostPort&quot;: &quot;80&quot;</span></span>
<span class="line"><span class="token comment">#                     }</span></span>
<span class="line"><span class="token comment">#                 ]</span></span>
<span class="line"><span class="token comment">#             },</span></span>
<span class="line"><span class="token comment">#             ... 생략 ...</span></span>
<span class="line"><span class="token comment">#         }</span></span>
<span class="line"><span class="token comment">#     }</span></span>
<span class="line"><span class="token comment"># ]</span></span>
<span class="line"><span class="token comment"># }]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>docker inspect &lt;이미지 또는 컨테이너 이름&gt;</code> 형식입니다. 이미지, 컨테이너 이름 대신 이미지 ID나, 컨테이너 ID를 사용해도 됩니다.</p><hr>`,22);function A(c,I){const o=l("VPCard"),e=l("router-link"),p=l("SiteInfo"),d=l("FontIcon");return k(),r("div",null,[n("h1",q,[n("a",g,[n("span",null,u(c.$frontmatter.title)+" 관련",1)])]),s(o,v(b({title:"목차",desc:"언제나 최신 Docker",link:"/docker/always-up-to-date-docker/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),n("nav",f,[n("ul",null,[n("li",null,[s(e,{to:"#history-명령으로-이미지-히스토리-살펴보기"},{default:t(()=>[a("history 명령으로 이미지 히스토리 살펴보기")]),_:1})]),n("li",null,[s(e,{to:"#cp-명령으로-파일-꺼내기"},{default:t(()=>[a("cp 명령으로 파일 꺼내기")]),_:1})]),n("li",null,[s(e,{to:"#commit-명령으로-컨테이너의-변경사항을-이미지로-생성하기"},{default:t(()=>[a("commit 명령으로 컨테이너의 변경사항을 이미지로 생성하기")]),_:1})]),n("li",null,[s(e,{to:"#diff-명령으로-컨테이너에서-변경된-파일-확인하기"},{default:t(()=>[a("diff 명령으로 컨테이너에서 변경된 파일 확인하기")]),_:1})]),n("li",null,[s(e,{to:"#inspect-명령으로-세부-정보-확인하기"},{default:t(()=>[a("inspect 명령으로 세부 정보 확인하기")]),_:1})])])]),y,s(p,{name:"05. Docker 살펴보기",desc:"언제나 최신 Docker",url:"https://pyrasis.com/jHLsAlwaysUpToDateDocker/Unit05",logo:"https://pyrasis.com/assets/images/pyrasis.png",preview:"https://pyrasis.com/assets/images/profile1.png"}),x,n("p",null,[a("현재 디렉터리에 "),s(d,{icon:"fas fa-file-lines"}),_,a(" 파일이 복사되었습니다.")]),D])}const C=m(h,[["render",A],["__file","05.html.vue"]]),E=JSON.parse('{"path":"/docker/always-up-to-date-docker/05.html","title":"05. Docker 살펴보기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"05. Docker 살펴보기","description":"언제나 최신 Docker > 05. Docker 살펴보기","category":["DevOps","Docker"],"tag":["crashcourse","pyrasis.com","docker","devops"],"head":[[{"meta":null},{"property":"og:title","content":"언제나 최신 Docker > 05. Docker 살펴보기"},{"property":"og:description","content":"05. Docker 살펴보기"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/docker/always-up-to-date-docker/05.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/docker/always-up-to-date-docker/05.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"05. Docker 살펴보기"}],["meta",{"property":"og:description","content":"언제나 최신 Docker > 05. Docker 살펴보기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pyrasis.com/assets/images/profile1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://pyrasis.com/assets/images/profile1.png"}],["meta",{"name":"twitter:image:alt","content":"05. Docker 살펴보기"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"pyrasis.com"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:published_time","content":"2022-10-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05. Docker 살펴보기\\",\\"image\\":[\\"https://pyrasis.com/assets/images/profile1.png\\"],\\"datePublished\\":\\"2022-10-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"prev":"/docker/always-up-to-date-docker/04C.md","next":"/docker/always-up-to-date-docker/06.md","date":"2022-10-05T00:00:00.000Z","isOriginal":false,"cover":"https://pyrasis.com/assets/images/profile1.png"},"headers":[{"level":2,"title":"history 명령으로 이미지 히스토리 살펴보기","slug":"history-명령으로-이미지-히스토리-살펴보기","link":"#history-명령으로-이미지-히스토리-살펴보기","children":[]},{"level":2,"title":"cp 명령으로 파일 꺼내기","slug":"cp-명령으로-파일-꺼내기","link":"#cp-명령으로-파일-꺼내기","children":[]},{"level":2,"title":"commit 명령으로 컨테이너의 변경사항을 이미지로 생성하기","slug":"commit-명령으로-컨테이너의-변경사항을-이미지로-생성하기","link":"#commit-명령으로-컨테이너의-변경사항을-이미지로-생성하기","children":[]},{"level":2,"title":"diff 명령으로 컨테이너에서 변경된 파일 확인하기","slug":"diff-명령으로-컨테이너에서-변경된-파일-확인하기","link":"#diff-명령으로-컨테이너에서-변경된-파일-확인하기","children":[]},{"level":2,"title":"inspect 명령으로 세부 정보 확인하기","slug":"inspect-명령으로-세부-정보-확인하기","link":"#inspect-명령으로-세부-정보-확인하기","children":[]}],"git":{"createdTime":1716977950000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":1.78,"words":533},"filePathRelative":"docker/always-up-to-date-docker/05.md","localizedDate":"2022년 10월 5일","excerpt":"\\n"}');export{C as comp,E as data};
