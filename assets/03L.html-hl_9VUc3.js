import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as n,t as d,b as s,w as e,n as m,g as v,d as a,e as c,r as o,o as g}from"./app-U_bew1in.js";const h={},b={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f={class:"table-of-contents"},_=n("hr",null,null,-1),q=n("hr",null,null,-1),y={href:"https://github.com/pahkey/sbb3/tree/3-12",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"pahkey/sbb3",-1),j=n("code",null,"3-12",-1),A=c('<p>이제 SBB가 점점 완성 되어가고 있다. 이번에는 더 많은 기능을 추가하기 전에 발견된 몇 가지 문제점을 해결하려고 한다.</p><p>발견된 문제점은 답글을 작성하거나 수정한 후에 항상 페이지 상단으로 스크롤이 이동되기 때문에 본인이 작성한 답변을 확인하려면 다시 스크롤을 내려서 확인해야 한다는 점이다. 이 문제는 답변을 추천한 경우에도 동일하게 발생한다.</p><p>Ajax와 같은 비동기 통신 기술을 사용하여 이 문제를 해결할 수도 있지만 여기서는 보다 쉬운 방법으로 이 문제를 해결해 보자. HTML에는 URL 호출시 원하는 위치로 이동시켜 주는 앵커(<code>anchor</code>) 태그가 있다. 예를 들어 HTML 중간에 <code>&lt;a id=&quot;test&quot;&gt;&lt;/a&gt; </code>라는 앵커 태그가 있다면 이 HTML을 호출하는 URL 뒤에 <code>#test</code> 라고 붙여주면 해당 페이지가 호출되면서 해당 앵커로 스크롤이 이동된다.</p><p>답변등록, 답변수정, 답변추천 시 앵커 태그를 이용하여 원하는 위치로 이동할 수 있도록 수정해 보자.</p><hr><h2 id="답변-앵커-추가" tabindex="-1"><a class="header-anchor" href="#답변-앵커-추가"><span>답변 앵커 추가</span></a></h2><p>먼저 답변 작성, 수정시에 이동해야할 앵커 태그를 질문 상세 템플릿에 추가하자.</p>',7),L=n("code",null,"/sbb/src/main/resources/templates/",-1),x=n("code",null,"question_detail.html",-1),R=c(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"><span class="token comment">&lt;!-- 답변의 갯수 표시 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border-bottom my-3 py-2<span class="token punctuation">&quot;</span></span> </span>
<span class="line">    <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>|\${#lists.size(question.answerList)}개의 답변이 있습니다.|<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 답변 반복 시작 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card my-3<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>answer : \${question.answerList}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>|answer_\${answer.id}|<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>card-body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>답변이 반복되어 표시되는 <code>th:each</code> 바로 다음에 <code>&lt;a th:id=&quot;|answer_\${answer.id}|&quot;&gt;&lt;/a&gt;</code>와 같이 앵커 태그를 추가했다. 앵커 태그의 <code>id</code> 속성은 유일한 값이어야 하므로 <code>answer_{{ answer.id }}</code>와 같이 답변 <code>id</code>를 사용했다.</p><hr><h2 id="답변-redirect" tabindex="-1"><a class="header-anchor" href="#답변-redirect"><span>답변 redirect</span></a></h2><p>이제 답변을 등록하거나 수정할 때 위에서 지정한 앵커 태그로 이동하도록 코드를 수정하자. 다음은 답변 등록 또는 답변 수정을 한 뒤 사용했던 기존 코드의 일부이다.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s&quot;</span><span class="token punctuation">,</span> answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>여기에 앵커를 포함하면 다음과 같다.</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line highlighted"><span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s#answer_%s&quot;</span><span class="token punctuation">,</span> </span>
<span class="line highlighted">    answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> answer<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>리다이렉트되는 질문 상세 URL에 <code>#answer_2</code>와 같은 앵커를 추가한 것이다. 이러한 방법으로 답변 작성, 수정, 추천의 리다이렉트 부분을 변경하자.</p><hr><h2 id="answerservice" tabindex="-1"><a class="header-anchor" href="#answerservice"><span><code>AnswerService</code></span></a></h2><p>컨트롤러에서 답변이 등록된 위치로 이동하기 위해서는 답변 객체가 반드시 필요하다. 따라서 다음과 같이 <code>AnswerService</code>를 먼저 수정해야 한다.</p>`,12),C=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),P=n("code",null,"AnswerService.java",-1),I=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">public</span> <span class="token class-name">Answer</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Question</span> question<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">SiteUser</span> author<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Answer</span> answer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Answer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setCreateDate</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setQuestion</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        answer<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span>author<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> answer<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="answercontroller" tabindex="-1"><a class="header-anchor" href="#answercontroller"><span><code>AnswerController</code></span></a></h2><p>그리고 컨트롤러의 리다이렉트 코드들을 다음과 같이 수정하자.</p>`,4),U=n("code",null,"/sbb/src/main/java/com/mysite/sbb/answer/",-1),V=n("code",null,"AnswerController.java",-1),T=c(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnswerController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">createAnswer</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span> </span>
<span class="line">            <span class="token annotation punctuation">@Valid</span> <span class="token class-name">AnswerForm</span> answerForm<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Question</span> question <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>questionService<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">SiteUser</span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;question&quot;</span><span class="token punctuation">,</span> question<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;question_detail&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line highlighted">        <span class="token class-name">Answer</span> answer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>question<span class="token punctuation">,</span> </span>
<span class="line highlighted">                answerForm<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s#answer_%s&quot;</span><span class="token punctuation">,</span> </span>
<span class="line highlighted">                answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> answer<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">     <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/modify/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">answerModify</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">AnswerForm</span> answerForm<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span></span>
<span class="line">            <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">,</span> <span class="token class-name">Principal</span> principal<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;answer_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token class-name">Answer</span> answer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">getAnswer</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>answer<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">BAD_REQUEST</span><span class="token punctuation">,</span> <span class="token string">&quot;수정권한이 없습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">modify</span><span class="token punctuation">(</span>answer<span class="token punctuation">,</span> answerForm<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s#answer_%s&quot;</span><span class="token punctuation">,</span> </span>
<span class="line highlighted">                answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> answer<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;isAuthenticated()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/vote/{id}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">answerVote</span><span class="token punctuation">(</span><span class="token class-name">Principal</span> principal<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Answer</span> answer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">getAnswer</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">SiteUser</span> siteUser <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userService<span class="token punctuation">.</span><span class="token function">getUser</span><span class="token punctuation">(</span>principal<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>answerService<span class="token punctuation">.</span><span class="token function">vote</span><span class="token punctuation">(</span>answer<span class="token punctuation">,</span> siteUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;redirect:/question/detail/%s#answer_%s&quot;</span><span class="token punctuation">,</span> </span>
<span class="line highlighted">                answer<span class="token punctuation">.</span><span class="token function">getQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> answer<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>답변을 작성, 수정, 추천한 후에 해당 답변으로 이동하도록 앵커 태그를 추가해 주었다.</p><hr><h2 id="답변-앵커-확인" tabindex="-1"><a class="header-anchor" href="#답변-앵커-확인"><span>답변 앵커 확인</span></a></h2><figure><img src="https://wikidocs.net/images/page/162763/C_3-12_1.png" alt="이와 같이 수정한 후 답변을 등록할 때 스크롤이 지정한 앵커로 이동하는지 확인해 보자." tabindex="0" loading="lazy"><figcaption>이와 같이 수정한 후 답변을 등록할 때 스크롤이 지정한 앵커로 이동하는지 확인해 보자.</figcaption></figure><p>화면에 네모박스로 표시한 부분을 보면 상세 화면 URL에 <code>#answer_8</code>이 추가되었고, 스크롤이 해당 위치로 이동했음을 알 수 있다.</p><hr>`,7);function B(l,Q){const p=o("router-link"),i=o("VPCard"),t=o("FontIcon"),u=o("VidStack");return g(),k("div",null,[n("h1",b,[n("a",w,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),n("nav",f,[n("ul",null,[n("li",null,[s(p,{to:"#답변-앵커-추가"},{default:e(()=>[a("답변 앵커 추가")]),_:1})]),n("li",null,[s(p,{to:"#답변-redirect"},{default:e(()=>[a("답변 redirect")]),_:1})]),n("li",null,[s(p,{to:"#answerservice"},{default:e(()=>[a("AnswerService")]),_:1})]),n("li",null,[s(p,{to:"#answercontroller"},{default:e(()=>[a("AnswerController")]),_:1})]),n("li",null,[s(p,{to:"#답변-앵커-확인"},{default:e(()=>[a("답변 앵커 확인")]),_:1})])])]),_,s(i,m(v({title:"3-12. 앵커",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162763",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),q,n("blockquote",null,[n("p",null,[n("a",y,[s(t,{icon:"iconfont icon-github"}),a(),S,a(" - "),s(t,{icon:"fas fa-folder-open"}),a(),j])])]),s(u,{src:"youtube/-XFI5Q8d01w"}),A,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),L,s(t,{icon:"fa-brands fa-html5"}),x])]),R,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),C,s(t,{icon:"fa-brands fa-java"}),P])]),I,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),U,s(t,{icon:"fa-brands fa-java"}),V])]),T])}const N=r(h,[["render",B],["__file","03L.html.vue"]]),z=JSON.parse('{"path":"/java/jump-to-spring-boot/03L.html","title":"03L. 앵커","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"03L. 앵커","description":"Jump to Spring Boot > 03L. 앵커","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 03L. 앵커"},{"property":"og:description","content":"03L. 앵커"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/03L.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/03L.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"03L. 앵커"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 03L. 앵커"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162763/C_3-12_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03L. 앵커\\",\\"image\\":[\\"https://wikidocs.net/images/page/162763/C_3-12_1.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"답변 앵커 추가","slug":"답변-앵커-추가","link":"#답변-앵커-추가","children":[]},{"level":2,"title":"답변 redirect","slug":"답변-redirect","link":"#답변-redirect","children":[]},{"level":2,"title":"AnswerService","slug":"answerservice","link":"#answerservice","children":[]},{"level":2,"title":"AnswerController","slug":"answercontroller","link":"#answercontroller","children":[]},{"level":2,"title":"답변 앵커 확인","slug":"답변-앵커-확인","link":"#답변-앵커-확인","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":1.54,"words":462},"filePathRelative":"java/jump-to-spring-boot/03L.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{N as comp,z as data};
