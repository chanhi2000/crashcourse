import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as n,t as m,b as e,n as o,g as c,w as k,d as s,e as t,r as l,o as h}from"./app-U_bew1in.js";const v={},g={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},y={class:"table-of-contents"},_=n("hr",null,null,-1),f=n("code",null,"type",-1),x=n("code",null,"ClusterIP",-1),P=n("code",null,"kubectl port-forward",-1),N=n("code",null,"type",-1),D=n("code",null,"NodePort",-1),E=n("code",null,"deployment.yaml",-1),T=n("code",null,"affinity",-1),w=n("code",null,"podAntiAffinity",-1),A=n("code",null,"requiredDuringSchedulingIgnoredDuringExecution",-1),R=n("code",null,"topologyKey: 'kubernetes.io/hostname'",-1),S={href:"https://github.com/pyrasis/jHLsKubernetes/blob/main/Unit06/deployment.yaml",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"pyrasis/jHLsKubernetes",-1),j=n("code",null,"/Unit06/",-1),C=n("code",null,"deployment.yaml",-1),I=n("code",null,"deployment.yaml",-1),U=t(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">  <span class="token key atrule">template</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">    <span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line highlighted">      <span class="token key atrule">affinity</span><span class="token punctuation">:</span></span>
<span class="line highlighted">        <span class="token key atrule">podAntiAffinity</span><span class="token punctuation">:</span></span>
<span class="line highlighted">          <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span></span>
<span class="line highlighted">            <span class="token punctuation">-</span> <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span></span>
<span class="line highlighted">                <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span></span>
<span class="line highlighted">                  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> app</span>
<span class="line highlighted">                    <span class="token key atrule">operator</span><span class="token punctuation">:</span> In</span>
<span class="line highlighted">                    <span class="token key atrule">values</span><span class="token punctuation">:</span></span>
<span class="line highlighted">                      <span class="token punctuation">-</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line highlighted">              <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> <span class="token string">&#39;kubernetes.io/hostname&#39;</span></span>
<span class="line">      <span class="token key atrule">containers</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">          <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>latest</span>
<span class="line">          <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V=n("code",null,"deployment.yaml",-1),L=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl create <span class="token parameter variable">-f</span> deployment.yaml</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># deployment.apps/hello-nginx created</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),O=n("code",null,"kubectl get pod",-1),M=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl get pod <span class="token parameter variable">-l</span> <span class="token assign-left variable">app</span><span class="token operator">=</span>hello-nginx <span class="token parameter variable">-o</span> wide</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># NAME                          READY   STATUS    RESTARTS   AGE    IP           NODE      NOMINATED NODE   READINESS GATES</span></span>
<span class="line"><span class="token comment"># hello-nginx-648486ccd-4shxl   1/1     Running   0          157m   10.244.1.5   worker1   &lt;none&gt;           &lt;none&gt;</span></span>
<span class="line"><span class="token comment"># hello-nginx-648486ccd-7jb46   1/1     Running   0          153m   10.244.3.5   worker3   &lt;none&gt;           &lt;none&gt;</span></span>
<span class="line"><span class="token comment"># hello-nginx-648486ccd-qjvkx   1/1     Running   0          153m   10.244.2.5   worker2   &lt;none&gt;           &lt;none&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-l</code> 옵션은 특정 레이블을 가져오겠다는 뜻이고, <code>-o</code> 옵션은 출력 방식을 결정하는데, <code>wide</code>를 설정하여 상세 정보를 출력하도록 했습니다. <strong>NODE</strong> 부분을 보면 worker1, 2, 3에 고르게 파드가 생성된 것을 볼 수 있습니다.</p><h2 id="nginx-서비스" tabindex="-1"><a class="header-anchor" href="#nginx-서비스"><span>Nginx 서비스</span></a></h2>`,3),q=n("code",null,"service.yaml",-1),H={href:"https://github.com/pyrasis/jHLsKubernetes/blob/main/Unit06/service.yaml",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"pyrasis/jHLsKubernetes",-1),G=n("code",null,"/Unit06/",-1),Z=n("code",null,"service.yaml",-1),z=n("code",null,"service.yaml",-1),F=t(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">  <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP</span>
<span class="line">      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line">      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line highlighted">  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이 서비스는 <code>type</code>이 <code>NodePort</code>로 설정되어 있습니다. 즉, 각 노드의 포트로 서비스를 노출하겠다는 뜻입니다.</p>`,2),Y=n("code",null,"service.yaml",-1),J=t(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl create <span class="token parameter variable">-f</span> service.yaml</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># service/hello-nginx created</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 서비스의 포트 번호를 조회해보겠습니다. <code>kubectl get service</code> 명령은 서비스만 출력하는 명령입니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">kubectl get <span class="token function">service</span></span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># NAME          TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE</span></span>
<span class="line highlighted"><span class="token comment"># hello-nginx   NodePort    10.108.89.52   &lt;none&gt;        80:31490/TCP   163m</span></span>
<span class="line"><span class="token comment"># kubernetes    ClusterIP   10.96.0.1      &lt;none&gt;        443/TCP        10h</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>hello-nginx</code> 서비스의 PORT(S) 부분을 보면 80:<strong>31490</strong>/TCP라고 나오는데, 80:뒤에 있는 포트가 노드에 열린 포트 번호입니다. 주의할 점은 이 포트 번호가 서비스를 생성할 때 마다, 클러스터 마다 각자 다르게 나온다는 점입니다. 따라서 이 문서와 일치하지 않을 수 있습니다.</p><p>웹 브라우저를 열고 다음 URL에 각각 접속하면 **Welcome to nginx!**가 표시될 것입니다.</p><ul><li>worker1: http://192.168.56.11:&lt;노드 포트&gt;</li><li>worker2: http://192.168.56.12:&lt;노드 포트&gt;</li><li>worker3: http://192.168.56.13:&lt;노드 포트&gt;</li></ul><hr>`,7);function W(p,X){const i=l("VPCard"),r=l("router-link"),a=l("FontIcon");return h(),d("div",null,[n("h1",g,[n("a",b,[n("span",null,m(p.$frontmatter.title)+" 관련",1)])]),e(i,o(c({title:"목차",desc:"언제나 최신 Kubernetes",link:"/k8s/always-up-to-date-kubernetes/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),n("nav",y,[n("ul",null,[n("li",null,[e(r,{to:"#nginx-서비스"},{default:k(()=>[s("Nginx 서비스")]),_:1})])])]),_,e(i,o(c({title:"Unit 6.4. NodePort로 서비스 생성하기",desc:"언제나 최신 Kubernetes",link:"https://pyrasis.com/jHLsAlwaysUpToDateKubernetes/Unit06/04",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),n("p",null,[s("지금까지 Minikube의 한계로 인해 서비스를 생성할 때 "),f,s("을 "),x,s("로 만들고 "),P,s("로만 실습을 해보았습니다. 이번에는 "),e(a,{icon:"iconfont icon-vagrant"}),s("Vagrant와 "),e(a,{icon:"iconfont icon-virtualbox"}),s("VirtualBox로 구축한 정식 쿠버네티스 클러스터에서 서비스 "),N,s("을 "),D,s("로 만들어서 실습을 해보겠습니다.")]),n("p",null,[s("다음 내용을 "),e(a,{icon:"iconfont icon-yaml"}),E,s(" 파일로 저장합니다. 이 디플로이먼트는 "),e(a,{icon:"iconfont icon-nginx"}),s("Nginx 파드를 3개 생성하는데, 모든 워커 노드(worker1, 2, 3)에 1개씩 고르게 생성합니다. "),T,s(" 부분이 상당히 복잡해보이지만, 자세히 보면 크게 어려울 것이 없습니다. "),w,s("는 이름 그대로 관련성 없음(anti-affinity)이라는 의미로 "),A,s("(스케쥴링하는 동안 꼭 필요한 조건)과 조합하여 해당 호스트("),R,s(")에 파드가 생성되어 있지 않으면 파드를 생성한다는 의미입니다.")]),n("ul",null,[n("li",null,[n("a",S,[e(a,{icon:"iconfont icon-github"}),K,s(" - "),j,e(a,{icon:"iconfont icon-yaml"}),C])])]),n("blockquote",null,[e(a,{icon:"iconfont icon-yaml"}),I]),U,n("p",null,[s("다음 명령을 실행하여 "),e(a,{icon:"iconfont icon-yaml"}),V,s(" 파일로 디플로이먼트를 생성합니다.")]),L,n("p",null,[s("정말 파드가 각 노드에 고르게 생성되었는지 확인해보겠습니다. "),e(a,{icon:"iconfont icon-shell"}),O,s(" 명령은 파드만 출력하는 명령입니다.")]),M,n("p",null,[s("이번에는 서비스를 생성해보겠습니다. 다음 내용을 "),e(a,{icon:"iconfont icon-yaml"}),q,s("파일로 저장합니다.")]),n("ul",null,[n("li",null,[n("a",H,[e(a,{icon:"iconfont icon-github"}),B,s(" - "),G,e(a,{icon:"iconfont icon-yaml"}),Z])])]),n("blockquote",null,[e(a,{icon:"iconfont icon-yaml"}),z]),F,n("p",null,[s("다음 명령을 실행하여 "),e(a,{icon:"iconfont icon-yaml"}),Y,s(" 파일로 서비스를 생성합니다.")]),J])}const nn=u(v,[["render",W],["__file","06D.html.vue"]]),sn=JSON.parse('{"path":"/k8s/always-up-to-date-kubernetes/06D.html","title":"06D. NodePort로 서비스 생성하기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"06D. NodePort로 서비스 생성하기","description":"언제나 최신 Kubernetes > 06D. NodePort로 서비스 생성하기","category":["Kubernetes"],"tag":["crashcourse","digitalocean","kubernetes","minkube","kubctl"],"head":[[{"meta":null},{"property":"og:title","content":"언제나 최신 Kubernetes > 06D. NodePort로 서비스 생성하기"},{"property":"og:description","content":"06D. NodePort로 서비스 생성하기"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/k8s/always-up-to-date-kubernetes/06D.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/k8s/always-up-to-date-kubernetes/06D.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"06D. NodePort로 서비스 생성하기"}],["meta",{"property":"og:description","content":"언제나 최신 Kubernetes > 06D. NodePort로 서비스 생성하기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"digitalocean"}],["meta",{"property":"article:tag","content":"kubernetes"}],["meta",{"property":"article:tag","content":"minkube"}],["meta",{"property":"article:tag","content":"kubctl"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"06D. NodePort로 서비스 생성하기\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"next":"/k8s/always-up-to-date-kubernetes/07.md"},"headers":[{"level":2,"title":"Nginx 서비스","slug":"nginx-서비스","link":"#nginx-서비스","children":[]}],"git":{"createdTime":1712118043000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.49,"words":448},"filePathRelative":"k8s/always-up-to-date-kubernetes/06D.md","localizedDate":"2024년 4월 3일","excerpt":"\\n"}');export{nn as comp,sn as data};
