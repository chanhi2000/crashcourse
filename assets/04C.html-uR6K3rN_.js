import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as n,t as r,b as a,n as p,g as c,d as s,e as t,r as o,o as k}from"./app-U_bew1in.js";const m={},v={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},y=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),h=n("p",null,"쿠버네티스는 매니페스트 파일(설정파일)이 다소 복잡하여 익숙해지는데 시간이 조금 걸립니다. 하지만, 핵심만 이해하면 크게 어렵지 않습니다.",-1),x=n("p",null,[s("먼저 쿠버네티스 매니페스트 파일의 필수 구성요소는 "),n("code",null,"apiVersion"),s(", "),n("code",null,"kind"),s(", "),n("code",null,"metadata"),s(", "),n("code",null,"spec"),s("입니다.")],-1),_=n("code",null,"deployment.yaml",-1),f=t(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">  <span class="token key atrule">template</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">    <span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">containers</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">          <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>latest</span>
<span class="line">          <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>.apiVersion</code>: 현재 리소스의 API 버전입니다. 이 버전은 시간이 지남에 따라 계속 바뀝니다(예: v1, v1beta1 등). 여기서는 <code>apps/v1</code>를 지정합니다.</li><li><code>.kind</code>: 현재 리소스의 종류를 지정합니다. 여기서는 디플로이먼트를 작성하므로 <code>Deployment</code>를 지정합니다.</li><li><code>.metadata</code>: 현재 오브젝트의 이름과 각종 설정 정보가 들어갑니다. 나중에 <code>metadata</code>는 리소스에 따라 중요하게 사용되기도 하므로 눈여겨 보는게 좋습니다.</li><li><code>.spec</code>: 현재 오브젝트의 원하는 상태를 정의하는 부분입니다. 여기서는 디플로이먼트의 각종 설정값들이 들어갑니다.</li></ul>`,2),C=n("code",null,"metadata",-1),P=n("code",null,"name",-1),N=n("code",null,"kubectl get all",-1),T=n("strong",null,"pod",-1),K=n("code",null,"name",-1),j=t(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>spec</code>에는 오브젝트의 원하는 상태를 정의한다고 했습니다. 즉, 쿠버네티스는 <code>spec</code>에 정의된 대로 디플로이먼트를 유지합니다. 예를 들어 <code>replicas</code>가 1이면 <code>pod</code>을 1개만 유지하고, 10이면 10개를 유지합니다. 만약 pod 10개 중 2개가 중단(terminate)되었다면, 10개를 맞추기 위해 다시 2개를 생성합니다.</p><p>아래 설정은 실제로는 레플리카셋(replicaset)과 파드(pod)의 설정을 모두 담고 있습니다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">1</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">  <span class="token key atrule">template</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">    <span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">containers</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">          <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>latest</span>
<span class="line">          <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>.spec.replicas</code>: 레플리카셋에서 파드를 몇 개 유지할지 설정합니다. 여기서는 1로 설정해서 1개만 유지합니다.</li><li><code>.spec.selector</code>: 디플로이먼트가 관리할 파드를 찾는 방법을 정의합니다. 여기서는 <code>matchLabels</code>에 <code>app: hello-nginx</code>로 설정했으므로 키가 <code>app</code>, 값이 <code>hello-nginx</code>로 정확히 일치하는 파드를 찾습니다.</li><li><code>.spec.template</code>: 여기서부터 파드 설 <ul><li><code>metadata</code>: <code>labels</code>에 키-값을 설정하여 디플로이먼트가 찾을 수 있도록 합니다. 여기서는 <code>app: hello-nginx</code>를 설정했습니다.</li><li><code>spec</code>: 파드의 <code>spec</code>입니다. 파드에는 컨테이너가 여러 개 들어갈 수 있어서 <code>containers</code>로 되어있고, 그 아래에는 <code>-</code>를 사용하여 배열(Array)로 값을 설 <ul><li><code>containers</code>: <code>name</code>에는 컨테이너의 이름을 설정합니다. 여기서는 <code>hello-nginx</code>로 설정했지만 셀렉터와는 상관이 없습니다. <code>image</code>에는 컨테이너를 실행할 Docker 이미지를 설정합니다. <code>&lt;이미지&gt;:&lt;태그&gt;</code> 형식이며 여기서는 <code>nginx:latest</code>를 설정했습니다. 마지막으로 <code>ports</code> 아래에 배열 형태로 <code>containerPort</code>를 설정합니다. <code>containerPort</code>는 컨테이너에서 개방할 포트 번호를 뜻합니다. 여기서는 Nginx 웹 서버의 HTTP 포트인 <strong>80</strong>을 설정했습니다.</li></ul></li></ul></li></ul><figure><img src="https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit04/2.png" alt="Nginx 디플로이먼트" tabindex="0" loading="lazy"><figcaption>Nginx 디플로이먼트</figcaption></figure><p>이제 서비스를 살펴볼 차례입니다. 서비스는 파드를 쿠버네티스 네트워크나 외부에 노출할 때 사용한다고 했는데, 여기서는 <code>ClusterIP</code>를 사용하여 쿠버네티스 네트워크에만 노출하도록 하겠습니다. 외부에 노출하는 방법은 뒤에서 설명하겠습니다.</p>`,7),w=n("code",null,"service.yaml",-1),A=t(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> Service</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">  <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP</span>
<span class="line">      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line">      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line">  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>.apiVersion</code>: 현재 리소스의 API 버전입니다. 이 버전은 시간이 지남에 따라 계속 바뀝니다(예: v1, v1beta1 등). 여기서는 <code>v1</code>를 지정합니다.</li><li><code>.kind</code>: 현재 리소스의 종류를 지정합니다. 여기서는 서비스를 작성하므로 <code>Service</code>를 지정합니다.</li><li><code>.metadata</code>: 현재 오브젝트의 이름과 각종 설정 정보가 들어갑니다.</li><li><code>.spec</code>: 현재 오브젝트의 원하는 상태를 정의하는 부분입니다. 여기서는 서비스의 각종 설정값들이 들어갑니다.</li></ul><p>서비스의 <code>metadata</code>에서는 <code>name</code>에 서비스의 이름을 지정합니다. 여기서 지정한 이름은 <code>kubectl get all</code> 명령을 실행했을 때 <strong>service</strong> 부분에 나오게 됩니다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line highlighted">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>서비스의 <code>spec</code> 부분입니다. 여기서는 <code>selector</code>와 <code>ports</code> 부분이 중요합니다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">app</span><span class="token punctuation">:</span> hello<span class="token punctuation">-</span>nginx</span>
<span class="line">  <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP</span>
<span class="line">      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line">      <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">80</span></span>
<span class="line">  <span class="token key atrule">type</span><span class="token punctuation">:</span> ClusterIP</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>.spec.selector</code>: 서비스가 트래픽을 전달할 파드를 선택합니다. 여기서는 <code>app: hello-nginx</code>을 설정했으므로 키가 <code>app</code>, 값이 <code>hello-nginx</code>인 파드를 찾습니다.</li><li><code>.spec.ports</code>: 서비스의 포트 설정이며 <code>-</code>를 사용하여 배열(Array)로 값을 설정합니다. <code>protocol</code>은 서비스가 처리할 프로토콜이며 여기서는 HTTP만 처리하므로 TCP로 설정합니다. <code>port</code>는 서비스가 개방할 포트입니다. 여기서는 80을 설정했습니다. <code>targetPort</code>는 파드에 열려 있는 포트를 의미합니다. 따라서 80을 설정합니다.</li><li><code>.spec.type</code>: 서비스의 <code>type</code>은 여러 가지가 있지만 여기서는 <code>ClusterIP</code>를 설정하여 쿠버네티스 네트워크 안에서만 포트를 노출하도록 합니다.</li></ul><figure><img src="https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit04/3.png" alt="Nginx 서비스" tabindex="0" loading="lazy"><figcaption>Nginx 서비스</figcaption></figure><hr>`,9);function U(i,D){const l=o("VPCard"),e=o("FontIcon");return k(),d("div",null,[n("h1",v,[n("a",g,[n("span",null,r(i.$frontmatter.title)+" 관련",1)])]),a(l,p(c({title:"목차",desc:"언제나 최신 Kubernetes",link:"/k8s/always-up-to-date-kubernetes/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),y,b,a(l,p(c({title:"Unit 4.2 Nginx 디플로이먼트와 서비스의 구조 살펴보기",desc:"언제나 최신 Kubernetes",link:"https://pyrasis.com/jHLsAlwaysUpToDateKubernetes/Unit04/02",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),n("p",null,[s("디플로이먼트와 서비스를 "),a(e,{icon:"iconfont icon-yaml"}),s("YAML 파일로 작성하여 Nginx 웹 서버를 실행해보았습니다. 이번에는 디플로이먼트와 서비스의 구조를 알아보겠습니다.")]),h,x,n("blockquote",null,[a(e,{icon:"iconfont icon-yaml"}),_]),f,n("p",null,[s("디플로이먼트의 "),C,s("에서는 "),P,s("에 디플로이먼트의 이름을 지정합니다. 여기서 지정한 이름은 "),a(e,{icon:"fas fa-terimnal"}),N,s(" 명령을 실행했을 때 "),T,s(" 부분에 나오게 됩니다(pod는 "),K,s(" 뒤에 랜덤값이 붙습니다).")]),j,n("blockquote",null,[a(e,{icon:"iconfont icon-yaml"}),w]),A])}const H=u(m,[["render",U],["__file","04C.html.vue"]]),I=JSON.parse('{"path":"/k8s/always-up-to-date-kubernetes/04C.html","title":"04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기","description":"언제나 최신 Kubernetes > 04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기","category":["Kubernetes"],"tag":["crashcourse","digitalocean","kubernetes","minkube","kubctl"],"head":[[{"meta":null},{"property":"og:title","content":"언제나 최신 Kubernetes > 04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기"},{"property":"og:description","content":"04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/k8s/always-up-to-date-kubernetes/04C.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/k8s/always-up-to-date-kubernetes/04C.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기"}],["meta",{"property":"og:description","content":"언제나 최신 Kubernetes > 04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit04/2.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"digitalocean"}],["meta",{"property":"article:tag","content":"kubernetes"}],["meta",{"property":"article:tag","content":"minkube"}],["meta",{"property":"article:tag","content":"kubctl"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04C. Nginx 디플로이먼트와 서비스의 구조 살펴보기\\",\\"image\\":[\\"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit04/2.png\\",\\"https://pyrasis.com/assets/images/jHLsAlwaysUpToDateKubernetes/Unit04/3.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]],"next":"/k8s/always-up-to-date-kubernetes/05.md"},"headers":[],"git":{"createdTime":1712118043000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.35,"words":404},"filePathRelative":"k8s/always-up-to-date-kubernetes/04C.md","localizedDate":"2024년 4월 3일","excerpt":"\\n"}');export{H as comp,I as data};
