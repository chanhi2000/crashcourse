import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as n,t as d,b as s,w as e,n as m,g as v,d as a,e as o,r as c,o as g}from"./app-U_bew1in.js";const b={},h={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},q={class:"table-of-contents"},y=n("hr",null,null,-1),w=n("hr",null,null,-1),_={href:"https://github.com/pahkey/sbb3/tree/3-06",target:"_blank",rel:"noopener noreferrer"},j=n("code",null,"pahkey/sbb3",-1),S=n("code",null,"3-06",-1),U=o('<p>이번에는 SBB에 회원가입 기능을 구현해 보자.</p><blockquote><p>회원가입 기능을 만들어 보았다면 웹 프로그래밍은 거의 마스터했다고 할 수 있다. 그만큼 회원가입 기능은 웹 사이트에서 핵심 중의 핵심이라 할 수 있다.</p></blockquote><hr><h2 id="회원-정보를-위한-엔티티" tabindex="-1"><a class="header-anchor" href="#회원-정보를-위한-엔티티"><span>회원 정보를 위한 엔티티</span></a></h2><p>지금까지는 질문, 답변 엔티티만 사용했다면 이제 회원 정보를 위한 엔티티가 필요하다. 회원 정보 엔티티에는 최소한 다음과 같은 속성이 필요하다.</p><table><thead><tr><th style="text-align:left;">속성</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>username</code></td><td style="text-align:left;">사용자 이름 (사용자 ID)</td></tr><tr><td style="text-align:left;"><code>password</code></td><td style="text-align:left;">비밀번호</td></tr><tr><td style="text-align:left;"><code>email</code></td><td style="text-align:left;">이메일</td></tr></tbody></table><h3 id="user-도메인" tabindex="-1"><a class="header-anchor" href="#user-도메인"><span>User 도메인</span></a></h3><p>그리고 회원은 질문, 답변 도메인이 아니므로 <code>user</code>라는 도메인을 사용할 것이다. 다음과 같이 <code>com.mysite.sbb.user</code> 패키지를 생성하자.</p><figure><img src="https://wikidocs.net/images/page/162141/C_3-06_1.png" alt="06_1" tabindex="0" loading="lazy"><figcaption>06_1</figcaption></figure><h3 id="siteuser-엔티티" tabindex="-1"><a class="header-anchor" href="#siteuser-엔티티"><span><code>SiteUser</code> 엔티티</span></a></h3><p>그리고 사용자를 관리할 <code>SiteUser</code> 엔티티를 다음처럼 작성하자.</p>',11),C=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),E=n("code",null,"SiteUser.java",-1),x=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Column</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Entity</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GeneratedValue</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">GenerationType</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span><span class="token class-name">Id</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Setter</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token annotation punctuation">@Entity</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SiteUser</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Id</span></span>
<span class="line">    <span class="token annotation punctuation">@GeneratedValue</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">GenerationType</span><span class="token punctuation">.</span><span class="token constant">IDENTITY</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>unique <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>unique <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Question</code>, <code>Answer</code> 엔티티와 동일한 방법으로 <code>SiteUser</code> 엔티티를 만들었다. 엔티티명을 <code>User</code> 대신 <code>SiteUser</code>로 한 이유는 스프링 시큐리티에 이미 <code>User</code> 클래스가 있기 때문이다. 물론 패키지명이 달라 <code>User</code>라는 이름을 사용할수 있지만 패키지 오용으로 인한 오류가 발생할수 있으므로 이 책에서는 <code>User</code> 대신 <code>SiteUser</code>라는 이름으로 명명하였다.</p><p>그리고 <code>username</code>, <code>email</code> 속성에는 <code>@Column(unique = true)</code> 처럼 <code>unique = true</code>를 지정했다. <code>unique = true</code>는 유일한 값만 저장할 수 있음을 의미한다. 즉, 값을 중복되게 저장할 수 없음을 뜻한다. 이렇게 해야 <code>username</code>과 <code>email</code>에 동일한 값이 저장되지 않는다.</p><h3 id="siteuser-테이블" tabindex="-1"><a class="header-anchor" href="#siteuser-테이블"><span><code>SiteUser</code> 테이블</span></a></h3><p><code>SiteUser</code> 엔티티를 작성하고 H2 콘솔에 접속하여 테이블이 잘 만들어졌는지 확인해 보자.</p><figure><img src="https://wikidocs.net/images/page/162141/C_3-06_2.png" alt="06_2" tabindex="0" loading="lazy"><figcaption>06_2</figcaption></figure><p><code>SITE_USER</code> 테이블과 컬럼들 그리고 <code>unique</code>로 설정한 속성들로 인해 생긴 UK_로 시작하는 인덱스들이 보일 것이다.</p><hr><h2 id="user-리포지터리와-서비스" tabindex="-1"><a class="header-anchor" href="#user-리포지터리와-서비스"><span><code>User</code> 리포지터리와 서비스</span></a></h2><p>사용자 엔티티가 준비되었으니 이제 <code>User</code> 리포지터리와 <code>User</code> 서비스를 만들어 보자.</p><h3 id="user-리포지터리" tabindex="-1"><a class="header-anchor" href="#user-리포지터리"><span><code>User</code> 리포지터리</span></a></h3><p>다음과 같이 <code>UserRepository</code>를 작성하자.</p>`,12),R=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),F=n("code",null,"UserRepository.java",-1),P=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jpa<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">JpaRepository</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SiteUser</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SiteUser</code>의 PK의 타입은 <code>Long</code>이다. 따라서 <code>JpaRepository&lt;SiteUser, Long&gt;</code>처럼 사용했다.</p><h3 id="user-서비스" tabindex="-1"><a class="header-anchor" href="#user-서비스"><span>User 서비스</span></a></h3><p>그리고 다음과 같이 UserService를 작성하자.</p>`,4),B=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),I=n("code",null,"UserService.java",-1),V=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>bcrypt<span class="token punctuation">.</span></span><span class="token class-name">BCryptPasswordEncoder</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserRepository</span> userRepository<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SiteUser</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> email<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SiteUser</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SiteUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">BCryptPasswordEncoder</span> passwordEncoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>userRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> user<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>User</code> 서비스에는 <code>User</code> 리포지터리를 사용하여 <code>User</code> 데이터를 생성하는 create 메서드를 추가했다. 이 때 사용자의 비밀번호는 보안을 위해 반드시 암호화하여 저장해야 한다. 암호화를 위해 시큐리티의 <code>BCryptPasswordEncoder</code> 클래스를 사용하여 암호화하여 비밀번호를 저장했다.</p><blockquote><p><code>BCryptPasswordEncoder</code>는 BCrypt 해싱 함수(BCrypt hashing function)를 사용해서 비밀번호를 암호화한다.</p></blockquote><p>하지만 이렇게 <code>BCryptPasswordEncoder</code> 객체를 직접 new로 생성하는 방식보다는 <code>PasswordEncoder</code> 빈(bean)으로 등록해서 사용하는 것이 좋다. 왜냐하면 암호화 방식을 변경하면 <code>BCryptPasswordEncoder</code>를 사용한 모든 프로그램을 일일이 찾아서 수정해야 하기 때문이다.</p><blockquote><p><code>PasswordEncoder</code>는 <code>BCryptPasswordEncoder</code>의 인터페이스이다.</p></blockquote><p><code>PasswordEncoder</code> 빈(bean)을 만드는 가장 쉬운 방법은 <code>@Configuration</code>이 적용된 <code>SecurityConfig</code>에 <code>@Bean</code> 메서드를 생성하는 것이다. 다음과 같이 <code>SecurityConfig</code>를 수정하자.</p>`,6),T=n("code",null,"/sbb/src/main/java/com/mysite/sbb/",-1),M=n("code",null,"SecurityConfig.java",-1),O=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>bcrypt<span class="token punctuation">.</span></span><span class="token class-name">BCryptPasswordEncoder</span></span><span class="token punctuation">;</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>password<span class="token punctuation">.</span></span><span class="token class-name">PasswordEncoder</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token annotation punctuation">@EnableWebSecurity</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token class-name">SecurityFilterChain</span> <span class="token function">filterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        http</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">authorizeHttpRequests</span><span class="token punctuation">(</span><span class="token punctuation">(</span>authorizeHttpRequests<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> authorizeHttpRequests</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">requestMatchers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AntPathRequestMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">(</span>csrf<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> csrf</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">ignoringRequestMatchers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AntPathRequestMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/h2-console/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> headers</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">addHeaderWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XFrameOptionsHeaderWriter</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token class-name">XFrameOptionsHeaderWriter<span class="token punctuation">.</span>XFrameOptionsMode</span><span class="token punctuation">.</span><span class="token constant">SAMEORIGIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line highlighted">    <span class="token class-name">PasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 <code>PasswordEncoder</code>를 <code>@Bean</code>으로 등록하면 <code>UserService</code>도 다음과 같이 수정할수 있다.</p>`,2),z=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),D=n("code",null,"UserService.java",-1),A=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>password<span class="token punctuation">.</span></span><span class="token class-name">PasswordEncoder</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserRepository</span> userRepository<span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">PasswordEncoder</span> passwordEncoder<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">SiteUser</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> email<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SiteUser</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SiteUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>userRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> user<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>BCryptPasswordEncoder</code> 객체를 직접 생성하여 사용하지 않고 빈으로 등록한 <code>PasswordEncoder</code> 객체를 주입받아 사용하도록 수정했다.</p><hr><h2 id="회원가입-폼" tabindex="-1"><a class="header-anchor" href="#회원가입-폼"><span>회원가입 폼</span></a></h2><p>그리고 회원 가입을 위한 폼 클래스를 작성하자. 다음처럼 <code>UserCreateForm</code>을 만들자.</p>`,5),N=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),G=n("code",null,"UserCreateForm.java",-1),H=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">Email</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">NotEmpty</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>constraints<span class="token punctuation">.</span></span><span class="token class-name">Size</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Setter</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Getter</span></span>
<span class="line"><span class="token annotation punctuation">@Setter</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserCreateForm</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Size</span><span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;사용자ID는 필수항목입니다.&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;비밀번호는 필수항목입니다.&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> password1<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;비밀번호 확인은 필수항목입니다.&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> password2<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;이메일은 필수항목입니다.&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@Email</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>username</code>은 필수항목이고 길이가 3-25 사이여야 한다는 검증조건을 설정했다. <code>@Size</code>는 폼 유효성 검증시 문자열의 길이가 최소길이(<code>min</code>)와 최대길이(<code>max</code>) 사이에 해당하는지를 검증한다. <code>password1</code>과 <code>password2</code>는 &quot;비밀번호&quot;와 &quot;비밀번호확인&quot;에 대한 속성이다. 로그인 할때는 비밀번호가 한번만 필요하지만 회원가입시에는 입력한 비밀번호가 정확한지 확인하기 위해 2개의 필드가 필요하다. 그리고 <code>email</code> 속성에는 <code>@Email</code> 애너테이션이 적용되었다. <code>@Email</code>은 해당 속성의 값이 이메일형식과 일치하는지를 검증한다.</p><hr><h2 id="회원가입-컨트롤러" tabindex="-1"><a class="header-anchor" href="#회원가입-컨트롤러"><span>회원가입 컨트롤러</span></a></h2><p>이제 사용자 엔티티와 서비스 그리고 폼이 준비되었으니 회원가입을 위한 <code>User</code> 컨트롤러를 만들어보자.</p>`,5),J=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),L=n("code",null,"UserController.java",-1),W=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Valid</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Controller</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">BindingResult</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RequiredArgsConstructor</span></span>
<span class="line"><span class="token annotation punctuation">@Controller</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/signup&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">signup</span><span class="token punctuation">(</span><span class="token class-name">UserCreateForm</span> userCreateForm<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/signup&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">signup</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">UserCreateForm</span> userCreateForm<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userCreateForm<span class="token punctuation">.</span><span class="token function">getPassword1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>userCreateForm<span class="token punctuation">.</span><span class="token function">getPassword2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            bindingResult<span class="token punctuation">.</span><span class="token function">rejectValue</span><span class="token punctuation">(</span><span class="token string">&quot;password2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;passwordInCorrect&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">                    <span class="token string">&quot;2개의 패스워드가 일치하지 않습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        userService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>userCreateForm<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">                userCreateForm<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userCreateForm<span class="token punctuation">.</span><span class="token function">getPassword1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;redirect:/&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/user/signup</code> URL이 GET으로 요청되면 회원 가입을 위한 템플릿을 렌더링하고 POST로 요청되면 회원가입을 진행하도록 했다. 그리고 회원 가입시 <code>비밀번호1</code>과 <code>비밀번호2</code>가 동일한지를 검증하는 로직을 추가했다. 만약 2개의 값이 일치하지 않을 경우에는 <code>bindingResult.rejectValue</code>를 사용하여 오류가 발생하게 했다. <code>bindingResult.rejectValue</code>의 각 파라미터는 <code>bindingResult.rejectValue(필드명, 오류코드, 에러메시지)</code>를 의미하며 여기서 오류코드는 일단 &quot;passwordInCorrect&quot;로 정의했다.</p><blockquote><p>대형 프로젝트에서는 번역과 관리를 위해 오류코드를 잘 정의하여 사용해야 한다.</p></blockquote><hr><h2 id="회원가입-템플릿" tabindex="-1"><a class="header-anchor" href="#회원가입-템플릿"><span>회원가입 템플릿</span></a></h2>`,5),K=n("code",null,"signup_form.html",-1),X=n("code",null,"/sbb/src/main/resources/templates/",-1),Z=n("code",null,"signup_form.html",-1),Q=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">layout:</span>decorate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{layout}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">layout:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container my-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-3 border-bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>회원가입<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/user/signup}<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${userCreateForm}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>~{form_errors :: formErrorsFragment}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>사용자ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{username}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>비밀번호<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{password1}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>비밀번호 확인<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{password2}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>이메일<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>field</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*{email}<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn btn-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>회원가입<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),$=n("code",null,"<회원가입>",-1),Y=n("code",null,"/user/signup/",-1),nn=n("hr",null,null,-1),sn=n("h2",{id:"내비게이션-바에-회원가입-링크-추가하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#내비게이션-바에-회원가입-링크-추가하기"},[n("span",null,"내비게이션 바에 회원가입 링크 추가하기")])],-1),an=n("p",null,"이제 회원가입 화면으로 이동할 수 있는 링크를 내비게이션 바에 추가하자.",-1),tn=n("code",null," /sbb/src/main/resources/templates/",-1),pn=n("code",null,"navbar.html",-1),en=o(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbarFragment<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar navbar-expand-lg navbar-light bg-light border-bottom<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container-fluid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-brand<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>SBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!-- (... 생략 ...) --&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>collapse navbar-collapse<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbarSupportedContent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>navbar-nav me-auto mb-2 mb-lg-0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>로그인<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav-link<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@{/user/signup}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>회원가입<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="회원가입-실행해-보기" tabindex="-1"><a class="header-anchor" href="#회원가입-실행해-보기"><span>회원가입 실행해 보기</span></a></h2><p>이제 내비게이션 바의 &quot;회원가입&quot; 링크를 누르면 다음과 같은 회원가입 화면이 나온다.</p><figure><img src="https://wikidocs.net/images/page/162141/O_3-06_3.png" alt="06_3" tabindex="0" loading="lazy"><figcaption>06_3</figcaption></figure>`,5),on=n("code",null,"<회원가입>",-1),cn=o(`<figure><img src="https://wikidocs.net/images/page/162141/O_3-06_4.png" alt="06_4" tabindex="0" loading="lazy"><figcaption>06_4</figcaption></figure><p>이처럼 우리가 만든 회원가입 기능에는 필숫값 검증, 이메일 규칙 검증 등이 적용되어 있다. 올바른 입력값으로 회원가입을 완료하면 메인 페이지로 리다이렉트될 것이다.</p><hr><h2 id="회원가입-데이터-확인해-보기" tabindex="-1"><a class="header-anchor" href="#회원가입-데이터-확인해-보기"><span>회원가입 데이터 확인해 보기</span></a></h2><p>H2 콘솔에서 다음의 SQL을 실행하여 바로 앞 단계를 거쳐 만든 회원 정보를 확인해 보자.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> SITE_USER </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://wikidocs.net/images/page/162141/C_3-06_5.png" alt="06_5" tabindex="0" loading="lazy"><figcaption>06_5</figcaption></figure><p>축하한다. 이제 SBB 서비스에 회원가입 기능이 추가되었다.</p><hr><h2 id="중복-회원가입" tabindex="-1"><a class="header-anchor" href="#중복-회원가입"><span>중복 회원가입</span></a></h2><p>이번에는 이미 가입한 동일한 사용자ID, 또는 동일한 이메일 주소로 회원가입을 진행해 보자. 아마도 다음과 같은 오류가 발생할 것이다.</p><figure><img src="https://wikidocs.net/images/page/162141/O_3-06_6.png" alt="06_6" tabindex="0" loading="lazy"><figcaption>06_6</figcaption></figure><p>동일한 사용자ID 또는 동일한 이메일 주소로 사용자 데이터를 저장하는 것은 <code>unique=true</code> 설정으로 인해 허용되지 않기 때문에 오류가 발생하는 것은 당연하다. 하지만 화면에 이렇게 500 오류 메시지를 그대로 보여주는 것은 좋지 않다. 따라서 회원가입시 발생하는 오류를 다음과 같이 처리해 주자.</p>`,13),ln=n("code",null,"/sbb/src/main/java/com/mysite/sbb/user/",-1),un=n("code",null,"UserController.java",-1),rn=o(`<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>mysite<span class="token punctuation">.</span>sbb<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line highlighted"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">DataIntegrityViolationException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// (... 생략 ...)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// (... 생략 ...)</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/signup&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">signup</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">UserCreateForm</span> userCreateForm<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> bindingResult<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bindingResult<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userCreateForm<span class="token punctuation">.</span><span class="token function">getPassword1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>userCreateForm<span class="token punctuation">.</span><span class="token function">getPassword2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            bindingResult<span class="token punctuation">.</span><span class="token function">rejectValue</span><span class="token punctuation">(</span><span class="token string">&quot;password2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;passwordInCorrect&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">                    <span class="token string">&quot;2개의 패스워드가 일치하지 않습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line highlighted">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            userService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>userCreateForm<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">                    userCreateForm<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userCreateForm<span class="token punctuation">.</span><span class="token function">getPassword1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">DataIntegrityViolationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">            bindingResult<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;signupFailed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;이미 등록된 사용자입니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">            <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">            bindingResult<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;signupFailed&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">            <span class="token keyword">return</span> <span class="token string">&quot;signup_form&quot;</span><span class="token punctuation">;</span></span>
<span class="line highlighted">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;redirect:/&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>사용자ID 또는 이메일 주소가 동일할 경우에는 <code>DataIntegrityViolationException</code>이 발생하므로 <code>DataIntegrityViolationException</code> 예외가 발생할 경우 &quot;이미 등록된 사용자입니다.&quot;라는 오류를 화면에 표시하도록 했다. 그리고 다른 오류의 경우에는 해당 오류의 메시지(<code>e.getMessage()</code>)를 출력하도록 했다.</p><blockquote><p><code>bindingResult.reject(오류코드, 오류메시지)</code>는 특정 필드의 오류가 아닌 일반적인 오류를 등록할때 사용한다.</p></blockquote><p>이렇게 수정하고 다시 동일한 사용자로 회원가입을 하면 다음과 같이 정상적인 오류를 표시하는 화면을 볼수 있다.</p><figure><img src="https://wikidocs.net/images/page/162141/O_3-06_7.png" alt="06_7" tabindex="0" loading="lazy"><figcaption>06_7</figcaption></figure><hr>`,6);function kn(l,dn){const p=c("router-link"),i=c("VPCard"),t=c("FontIcon"),u=c("VidStack");return g(),k("div",null,[n("h1",h,[n("a",f,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),n("nav",q,[n("ul",null,[n("li",null,[s(p,{to:"#회원-정보를-위한-엔티티"},{default:e(()=>[a("회원 정보를 위한 엔티티")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#user-도메인"},{default:e(()=>[a("User 도메인")]),_:1})]),n("li",null,[s(p,{to:"#siteuser-엔티티"},{default:e(()=>[a("SiteUser 엔티티")]),_:1})]),n("li",null,[s(p,{to:"#siteuser-테이블"},{default:e(()=>[a("SiteUser 테이블")]),_:1})])])]),n("li",null,[s(p,{to:"#user-리포지터리와-서비스"},{default:e(()=>[a("User 리포지터리와 서비스")]),_:1}),n("ul",null,[n("li",null,[s(p,{to:"#user-리포지터리"},{default:e(()=>[a("User 리포지터리")]),_:1})]),n("li",null,[s(p,{to:"#user-서비스"},{default:e(()=>[a("User 서비스")]),_:1})])])]),n("li",null,[s(p,{to:"#회원가입-폼"},{default:e(()=>[a("회원가입 폼")]),_:1})]),n("li",null,[s(p,{to:"#회원가입-컨트롤러"},{default:e(()=>[a("회원가입 컨트롤러")]),_:1})]),n("li",null,[s(p,{to:"#회원가입-템플릿"},{default:e(()=>[a("회원가입 템플릿")]),_:1})]),n("li",null,[s(p,{to:"#내비게이션-바에-회원가입-링크-추가하기"},{default:e(()=>[a("내비게이션 바에 회원가입 링크 추가하기")]),_:1})]),n("li",null,[s(p,{to:"#회원가입-실행해-보기"},{default:e(()=>[a("회원가입 실행해 보기")]),_:1})]),n("li",null,[s(p,{to:"#회원가입-데이터-확인해-보기"},{default:e(()=>[a("회원가입 데이터 확인해 보기")]),_:1})]),n("li",null,[s(p,{to:"#중복-회원가입"},{default:e(()=>[a("중복 회원가입")]),_:1})])])]),y,s(i,m(v({title:"3-06. 회원가입",desc:"점프 투 스프링부트 - WikiDocs",link:"https://wikidocs.net/162141",logo:"https://wikidocs.net/static/img/favicon.ico",background:"rgba(255,255,255,0.2)"})),null,16),w,n("blockquote",null,[n("p",null,[n("a",_,[s(t,{icon:"iconfont icon-github"}),a(),j,a(" - "),s(t,{icon:"fas fa-folder-open"}),a(),S])])]),s(u,{src:"youtube/VEEu1N7Edws"}),U,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),C,s(t,{icon:"fa-brands fa-java"}),E])]),x,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),R,s(t,{icon:"fa-brands fa-java"}),F])]),P,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),B,s(t,{icon:"fa-brands fa-java"}),I])]),V,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),T,s(t,{icon:"fa-brands fa-java"}),M])]),O,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),z,s(t,{icon:"fa-brands fa-java"}),D])]),A,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),N,s(t,{icon:"fa-brands fa-java"}),G])]),H,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),J,s(t,{icon:"fa-brands fa-java"}),L])]),W,n("p",null,[a("이어서 회원가입 템플릿을 작성하자. 다음처럼 "),s(t,{icon:"fa-brands fa-html5"}),K,a(" 파일을 작성하자.")]),n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),X,s(t,{icon:"fa-brands fa-html5"}),Z])]),Q,n("p",null,[a('회원가입을 위한 "사용자 ID", "비밀번호", "비밀번호 확인", "이메일"에 해당되는 input 엘리먼트를 추가했다. '),s(t,{icon:"iconfont icon-select"}),$,a(" 버튼을 누르면 폼 데이터가 POST 방식으로 "),Y,a(" URL로 전송된다.")]),nn,sn,an,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),tn,s(t,{icon:"fa-brands fa-html5"}),pn])]),en,n("p",null,[a("입력값 중에서 비밀번호, 비밀번호 확인을 다르게 입력하고 "),s(t,{icon:"iconfont icon-select"}),on,a("을 누르면 검증 오류가 발생하여 화면에 다음과 같은 오류 메시지를 표시해 줄 것이다.")]),cn,n("blockquote",null,[n("p",null,[a("파일명: "),s(t,{icon:"fas fa-folder-open"}),ln,s(t,{icon:"fa-brands fa-java"}),un])]),rn])}const gn=r(b,[["render",kn],["__file","03F.html.vue"]]),bn=JSON.parse('{"path":"/java/jump-to-spring-boot/03F.html","title":"03F. 회원가입","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"03F. 회원가입","description":"Jump to Spring Boot > 03F. 회원가입","category":["Java","Spring","AWS"],"tag":["crashcourse","java","jdk","jdk8","stream","spring","springframework","springboot","aws","aws-ec2"],"head":[[{"meta":null},{"property":"og:title","content":"Jump to Spring Boot > 03F. 회원가입"},{"property":"og:description","content":"03F. 회원가입"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/java/jump-to-spring-boot/03F.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/java/jump-to-spring-boot/03F.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"03F. 회원가입"}],["meta",{"property":"og:description","content":"Jump to Spring Boot > 03F. 회원가입"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wikidocs.net/images/page/162141/C_3-06_1.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"springframework"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"aws-ec2"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03F. 회원가입\\",\\"image\\":[\\"https://wikidocs.net/images/page/162141/C_3-06_1.png\\",\\"https://wikidocs.net/images/page/162141/C_3-06_2.png\\",\\"https://wikidocs.net/images/page/162141/O_3-06_3.png\\",\\"https://wikidocs.net/images/page/162141/O_3-06_4.png\\",\\"https://wikidocs.net/images/page/162141/C_3-06_5.png\\",\\"https://wikidocs.net/images/page/162141/O_3-06_6.png\\",\\"https://wikidocs.net/images/page/162141/O_3-06_7.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"회원 정보를 위한 엔티티","slug":"회원-정보를-위한-엔티티","link":"#회원-정보를-위한-엔티티","children":[{"level":3,"title":"User 도메인","slug":"user-도메인","link":"#user-도메인","children":[]},{"level":3,"title":"SiteUser 엔티티","slug":"siteuser-엔티티","link":"#siteuser-엔티티","children":[]},{"level":3,"title":"SiteUser 테이블","slug":"siteuser-테이블","link":"#siteuser-테이블","children":[]}]},{"level":2,"title":"User 리포지터리와 서비스","slug":"user-리포지터리와-서비스","link":"#user-리포지터리와-서비스","children":[{"level":3,"title":"User 리포지터리","slug":"user-리포지터리","link":"#user-리포지터리","children":[]},{"level":3,"title":"User 서비스","slug":"user-서비스","link":"#user-서비스","children":[]}]},{"level":2,"title":"회원가입 폼","slug":"회원가입-폼","link":"#회원가입-폼","children":[]},{"level":2,"title":"회원가입 컨트롤러","slug":"회원가입-컨트롤러","link":"#회원가입-컨트롤러","children":[]},{"level":2,"title":"회원가입 템플릿","slug":"회원가입-템플릿","link":"#회원가입-템플릿","children":[]},{"level":2,"title":"내비게이션 바에 회원가입 링크 추가하기","slug":"내비게이션-바에-회원가입-링크-추가하기","link":"#내비게이션-바에-회원가입-링크-추가하기","children":[]},{"level":2,"title":"회원가입 실행해 보기","slug":"회원가입-실행해-보기","link":"#회원가입-실행해-보기","children":[]},{"level":2,"title":"회원가입 데이터 확인해 보기","slug":"회원가입-데이터-확인해-보기","link":"#회원가입-데이터-확인해-보기","children":[]},{"level":2,"title":"중복 회원가입","slug":"중복-회원가입","link":"#중복-회원가입","children":[]}],"git":{"createdTime":1703642364000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":8}]},"readingTime":{"minutes":3.71,"words":1113},"filePathRelative":"java/jump-to-spring-boot/03F.md","localizedDate":"2023년 12월 27일","excerpt":"\\n\\n<hr>\\n"}');export{gn as comp,bn as data};
