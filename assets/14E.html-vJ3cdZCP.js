import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,a as e,t as p,b as t,n as c,g as l,d as o,e as s,r,o as h}from"./app-U_bew1in.js";const u={},_={id:"frontmatter-title-관련",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-관련"},y=e("nav",{class:"table-of-contents"},[e("ul")],-1),f=e("hr",null,null,-1),b=e("p",null,"앞서 설계했던 대로 테이블도 만들고 데이터도 추가했습니다. 이제 원하는 데이터를 얻는 쿼리를 해보겠습니다. 먼저 주간 전체순위를 산출합니다.",-1),A=e("img",{src:"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/34_.png",alt:'DynamoDB 테이블 목록에서  테이블을 선택하고 위쪽 <FontIcon icon="iconfont icon-select"/> 버튼을 클릭합니다.',tabindex:"0",loading:"lazy"},null,-1),D=e("code",null,"UsersLeaderboard",-1),S=e("code",null,"[Explore Table]",-1),T=e("p",null,[e("code",null,"UsersLeaderboard"),o(" 테이블에서 주간 전체 순위를 쿼리합니다.")],-1),v=e("strong",null,"Scan, Query",-1),z=e("code",null,"[Query]",-1),W=s("<li><strong>Index Name</strong>: 검색할 인덱스입니다. <code>[Global] Week-TopScore-Index: Week, TopScore</code>를 선택합니다.</li><li><strong>Hash Key</strong>: 검색할 해시 키입니다. 인덱스를 선택하면 자동으로 설정됩니다. 기본값 그대로 사용합니다. <ul><li><strong>Week equal to</strong>: 주 단위로 검색할 것이므로 <code>2014-05-09,2014-05-15</code>를 입력합니다.</li></ul></li><li><strong>Range Key</strong>: 검색할 범위 키입니다. 인덱스를 선택하면 자동으로 설정됩니다. 기본값 그대로 사용합니다. <ul><li><strong>TopScore</strong>: 최대점수를 <code>99999</code>라 보고, <code>99999</code>를 입력합니다.</li><li><strong>less than</strong>: 범위 키는 검색 조건을 정할 수 있습니다. 지정한 값보다 작은 값을 구하도록 <code>less than</code>을 선택합니다.</li></ul></li><li><strong>Ascending, Descending</strong>: 높은 점수가 맨 위에 출력되도록 내림차순(Descending)으로 설정합니다.</li>",4),I=e("img",{src:"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/35_.png",alt:'설정이 완료되었으면 <FontIcon icon="iconfont icon-select"/> 버튼을 클릭합니다. 가 인 아이템들이 가 높은 순으로 정렬되어 출력됩니다. 이렇게 주간 전체순위를 산출할 수 있습니다.',tabindex:"0",loading:"lazy"},null,-1),x=e("code",null,"[Query]",-1),w=e("code",null,"Week",-1),E=e("code",null,"2014-05-09,2014-05-15",-1),k=e("code",null,"TopScore",-1),C=s('<div class="hint-container info"><p class="hint-container-title">범위 키(Range Key) 검색 조건</p><ul><li><strong>equal to</strong>: 속성의 값과 같을 때</li><li><strong>less than</strong>: 속성의 값보다 작을 때</li><li><strong>less than or equal to</strong>: 속성의 값보다 작거나 같을 때</li><li><strong>greater than</strong>: 속성의 값보다 클 때</li><li><strong>greater than or equal to</strong>: 속성의 값보다 크거나 같을 때</li><li><strong>between</strong>: 속성의 값에 포함 될 때</li><li><strong>begins with</strong>: 속성의 값이 ~로 시작될 때</li></ul></div><p>이번에는 로컬 보조 인덱스를 사용하여 개인 최고기록을 조회해 보겠습니다. <code>UsersLeaderboard</code> 테이블에서 개인 최고기록을 쿼리합니다.</p>',2),B=e("strong",null,"Scan, Query",-1),O=e("code",null,"Scan",-1),F=e("code",null,"Query",-1),Q=e("code",null,"[Query]",-1),K=s("<li><strong>Index Name</strong>: 검색할 인덱스입니다. <code>[Local] TopScore-Index: Id, TopScore</code>를 선택합니다.</li><li><strong>Hash Key</strong>: 검색할 해시 키입니다. 인덱스를 선택하면 자동으로 설정됩니다. 기본값 그대로 사용합니다. <ul><li><strong>Id equal to</strong>: John(1) 유저의 점수를 조회할 것이므로 1을 입력합니다.</li></ul></li><li><strong>Range Key</strong>: 검색할 범위 키입니다. 인덱스를 선택하면 자동으로 설정됩니다. 기본값 그대로 사용합니다. <ul><li><strong>TopScore</strong>: 최대점수를 <code>99999</code>라 보고, <code>99999</code>를 입력합니다.</li><li><strong>less than</strong>: 범위 키는 검색 조건을 정할 수 있습니다. 지정한 값보다 작은 값을 구하도록 <code>less than</code>을 선택합니다.</li></ul></li><li><strong>Ascending, Descending</strong>: 높은 점수가 맨 위에 출력되도록 내림차순(Descending)으로 설정합니다.</li><li><strong>All, Projected</strong>: All을 선택하면 아이템의 모든 속성이 출력되고, Projected를 선택하면 보조 인덱스를 생성할 때 Projected Attributes에 설정한 속성들이 출력됩니다. 기본값 그대로 사용합니다.</li>",5),R=e("img",{src:"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/36_.png",alt:'설정이 완료되었으면 <FontIcon icon="iconfont icon-select"/> 버튼을 클릭합니다. 가 1인 아이템들이 가 높은 순으로 정렬되어 출력됩니다.',tabindex:"0",loading:"lazy"},null,-1),P=e("code",null,"[Query]",-1),L=e("code",null,"Id",-1),N=e("code",null,"TopScore",-1),q=e("p",null,"AWS 콘솔에서는 쿼리 출력 개수를 설정할 수 없지만 프로그래밍 언어에서 API로 DynamoDB에 쿼리하는 경우 출력 개수를 설정할 수 있습니다. 쿼리 출력 개수를 1개로 설정하면 개인 최고기록이 되는 것입니다.",-1),V=e("p",null,[e("code",null,"FriendsLeaderboards"),o("에서 주간 친구 순위를 산출해보겠습니다.")],-1),j=e("img",{src:"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/37_.png",alt:'맨 위쪽 <FontIcon icon="iconfont icon-select"/> 탭을 클릭하여 테이블 목록으로 돌아갑니다.',tabindex:"0",loading:"lazy"},null,-1),H=e("code",null,"[List Tables]",-1),U=e("img",{src:"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/38_.png",alt:'DynamoDB 테이블 목록에서  테이블을 선택하고 위쪽 <FontIcon icon="iconfont icon-select"/> 버튼을 클릭합니다.',tabindex:"0",loading:"lazy"},null,-1),Z=e("code",null,"FriendsLeaderboard",-1),G=e("code",null,"[Explore Table]",-1),J=e("p",null,[e("code",null,"FriendsLeaderboard"),o(" 테이블에서 주간 친구 순위를 쿼리합니다.")],-1),M=e("strong",null,"Scan, Query",-1),$=e("code",null,"Scan",-1),X=e("code",null,"Query",-1),Y=e("code",null,"[Query]",-1),ee=s("<li><strong>Index Name:</strong> 검색할 인덱스입니다. <code>[Global] FriendIdAndWeek-Score-Index: FriendIdAndWeek, Score</code>를 선택합니다.</li><li><strong>Hash Key</strong>: 검색할 해시 키입니다. 인덱스를 선택하면 자동으로 설정됩니다. 기본값 그대로 사용합니다. <ul><li><strong>FriendIdAndWeek equal to</strong>: 3번 유저의 <code>2014-05-09,2014-05-15</code> 주간의 친구 순위를 산출할 것이므로 <code>3,2014-05-09,2014-05-15</code>를 입력합니다.</li></ul></li><li><strong>Range Key</strong>: 검색할 범위 키입니다. 인덱스를 선택하면 자동으로 설정됩니다. 기본값 그대로 사용합니다. <ul><li><strong>TopScore</strong>: 최대점수를 <code>99999</code>라 보고, <code>99999</code>를 입력합니다.</li><li><strong>less than</strong>: 범위 키는 검색 조건을 정할 수 있습니다. 지정한 값보다 작은 값을 구하도록 <code>less than</code>을 선택합니다.</li></ul></li><li><strong>Ascending, Descending</strong>: 높은 점수가 맨 위에 출력되도록 내림차순(Descending)으로 설정합니다.</li>",4),oe=e("code",null,"[Query]",-1),te=e("code",null,"FriendIdAndWeek",-1),ne=e("code",null,"3,2014-05-09,2014-05-15",-1),se=e("code",null,"TopScore",-1),ie=e("figure",null,[e("img",{src:"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/39_.png",alt:"이렇게 Andrew(3)의 주간 친구순위를 산출할 수 있습니다.",tabindex:"0",loading:"lazy"}),e("figcaption",null,"이렇게 Andrew(3)의 주간 친구순위를 산출할 수 있습니다.")],-1),ce=e("hr",null,null,-1);function le(a,re){const i=r("VPCard"),n=r("FontIcon");return h(),g("div",null,[e("h1",_,[e("a",m,[e("span",null,p(a.$frontmatter.title)+" 관련",1)])]),t(i,c(l({title:"목차",desc:"아마존 웹 서비스를 다루는 기술",link:"/aws/art-of-aws/README.md",logo:"https://pyrasis.com/assets/images/pyrasis.png",background:"rgba(31,41,55,0.2)"})),null,16),y,f,t(i,c(l({title:"14장 - 5. DynamoDB 데이터 쿼리하기",desc:"아마존 웹 서비스를 다루는 기술",link:"https://pyrasis.com/book/TheArtOfAmazonWebServices/Chapter14/05",logo:"https://pyrasis.com/favicon.ico",background:"rgba(31,41,55,0.2)"})),null,16),b,e("figure",null,[A,e("figcaption",null,[o("DynamoDB 테이블 목록에서 "),D,o(" 테이블을 선택하고 위쪽 "),t(n,{icon:"iconfont icon-select"}),S,o(" 버튼을 클릭합니다.")])]),T,e("ul",null,[e("li",null,[v,o(": Scan은 테이블의 모든 아이템을 출력하는 것이고, Query는 지정한 조건에 맞은 내용을 출력하는 것입니다. "),t(n,{icon:"iconfont icon-select"}),z,o("를 선택합니다.")]),W]),e("figure",null,[I,e("figcaption",null,[o("설정이 완료되었으면 "),t(n,{icon:"iconfont icon-select"}),x,o(" 버튼을 클릭합니다. "),w,o("가 "),E,o("인 아이템들이 "),k,o("가 높은 순으로 정렬되어 출력됩니다. 이렇게 주간 전체순위를 산출할 수 있습니다.")])]),C,e("ul",null,[e("li",null,[B,o(": "),O,o("은 테이블의 모든 아이템을 출력하는 것이고, "),F,o("는 지정한 조건에 맞은 내용을 출력하는 것입니다. "),t(n,{icon:"iconfont icon-select"}),Q,o("를 선택합니다.")]),K]),e("figure",null,[R,e("figcaption",null,[o("설정이 완료되었으면 "),t(n,{icon:"iconfont icon-select"}),P,o(" 버튼을 클릭합니다. "),L,o("가 1인 아이템들이 "),N,o("가 높은 순으로 정렬되어 출력됩니다.")])]),q,V,e("figure",null,[j,e("figcaption",null,[o("맨 위쪽 "),t(n,{icon:"iconfont icon-select"}),H,o(" 탭을 클릭하여 테이블 목록으로 돌아갑니다.")])]),e("figure",null,[U,e("figcaption",null,[o("DynamoDB 테이블 목록에서 "),Z,o(" 테이블을 선택하고 위쪽 "),t(n,{icon:"iconfont icon-select"}),G,o(" 버튼을 클릭합니다.")])]),J,e("ul",null,[e("li",null,[M,o(": "),$,o("은 테이블의 모든 아이템을 출력하는 것이고, "),X,o("는 지정한 조건에 맞은 내용을 출력하는 것입니다. "),t(n,{icon:"iconfont icon-select"}),Y,o("를 선택합니다.")]),ee]),e("p",null,[o("설정이 완료되었으면 "),t(n,{icon:"iconfont icon-select"}),oe,o(" 버튼을 클릭합니다. "),te,o("가 "),ne,o("인 아이템들이 "),se,o("가 높은 순으로 정렬되어 출력됩니다.")]),ie,ce])}const ge=d(u,[["render",le],["__file","14E.html.vue"]]),pe=JSON.parse('{"path":"/aws/art-of-aws/14E.html","title":"14E. DynamoDB 데이터 쿼리하기","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"14E. DynamoDB 데이터 쿼리하기","description":"아마존 웹 서비스를 다루는 기술 > 14E. DynamoDB 데이터 쿼리하기","category":["AWS"],"tag":["crashcourse","pyrasis","aws","amazon-web-services"],"head":[[{"meta":null},{"property":"og:title","content":"아마존 웹 서비스를 다루는 기술 > 14E. DynamoDB 데이터 쿼리하기"},{"property":"og:description","content":"14E. DynamoDB 데이터 쿼리하기"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/aws/art-of-aws/14E.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/crashcourse/aws/art-of-aws/14E.html"}],["meta",{"property":"og:site_name","content":"🥁Crashcourse"}],["meta",{"property":"og:title","content":"14E. DynamoDB 데이터 쿼리하기"}],["meta",{"property":"og:description","content":"아마존 웹 서비스를 다루는 기술 > 14E. DynamoDB 데이터 쿼리하기"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/34_.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-10-03T01:20:13.000Z"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"pyrasis"}],["meta",{"property":"article:tag","content":"aws"}],["meta",{"property":"article:tag","content":"amazon-web-services"}],["meta",{"property":"article:modified_time","content":"2024-10-03T01:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14E. DynamoDB 데이터 쿼리하기\\",\\"image\\":[\\"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/34_.png\\",\\"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/35_.png\\",\\"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/36_.png\\",\\"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/37_.png\\",\\"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/38_.png\\",\\"https://pyrasis.com/assets/images/TheArtOfAmazonWebServicesChapter14/39_.png\\"],\\"dateModified\\":\\"2024-10-03T01:20:13.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1712541541000,"updatedTime":1727918413000,"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":3}]},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"aws/art-of-aws/14E.md","localizedDate":"2024년 4월 8일","excerpt":"\\n"}');export{ge as comp,pe as data};
